# Makefile.in generated by automake 1.11.3 from Makefile.am.
# @configure_input@

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011 Free Software
# Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@

#
#
#
# Makefile.am
#
# Builds emailrelay-gui.real and a no-install "pack" utility (amoungst
# other things).
#
# The following additional targets can be used for packaging:
#
# payload
#
#	Builds the payload file ("payload") by pack-ing the all stuff that
#	needs to be installed. The emailrelay-gui.real installer looks for
#	this if it does not have its own payload packed on the end.
#
#	The stuff to be installed comes from running "make install" into
#	a temporary directory. Use "make MAKE_SETUP_DEBUG=-d payload" to
#	stop the temporary directory getting cleaned up.
#
# emailrelay-setup
#
#	Builds a self-extracting setup program ("emailrelay-setup") from
#	emailrelay-gui.real with the payload stuff packed on the end.
#
# univeral (pseudo-target) [Mac]
#
#	Overwrites makefile-built binaries with out-of-tree ones. Typically
#	used on Mac OS X after doing an xcode build of universal binaries.
#
# setup-bundle (pseudo-target) [Mac]
#
#	Assembles the install bundle ("E-MailRelay-Install.app/"). Calls
#	bin/make-bundle.sh to create the directory structure and the
#	plist file.
#
# image (pseudo-target) [Mac]
#
#	Builds the installation disk image ("E-MailRelay.dmg") from the install
#	bundle ("E-MailRelay-Install.app/") using hdiutil.
#



VPATH = @srcdir@
pkgdatadir = $(datadir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkglibexecdir = $(libexecdir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
@GUI_TRUE@sbin_PROGRAMS = emailrelay-gui.real$(EXEEXT) $(am__EXEEXT_1)
@GUI_TRUE@noinst_PROGRAMS = pack$(EXEEXT) emailrelay-unpack$(EXEEXT)
subdir = src/gui
DIST_COMMON = README $(srcdir)/Makefile.am $(srcdir)/Makefile.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/acinclude.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
@MAC_TRUE@am__EXEEXT_1 = emailrelay-start-gui$(EXEEXT) \
@MAC_TRUE@	emailrelay-unpack$(EXEEXT)
am__installdirs = "$(DESTDIR)$(sbindir)" "$(DESTDIR)$(e_icondir)"
PROGRAMS = $(noinst_PROGRAMS) $(sbin_PROGRAMS)
am__emailrelay_gui_real_SOURCES_DIST = dir_unix.cpp boot_unix.cpp \
	glink_unix.cpp gregister_unix.cpp dir_mac.cpp boot_mac.cpp \
	glink_mac.cpp gregister_mac.cpp boot.h dir.cpp dir.h \
	gdialog.cpp gdialog.h glink.h gregister.h gpage.cpp gpage.h \
	guimain.cpp gunpack.cpp gunpack.h installer.cpp installer.h \
	legal.cpp legal.h mapfile.cpp mapfile.h pages.cpp pages.h \
	pointer.cpp pointer.h qt.h state.cpp state.h unpack.c unpack.h
@MAC_FALSE@am__objects_1 = dir_unix.$(OBJEXT) boot_unix.$(OBJEXT) \
@MAC_FALSE@	glink_unix.$(OBJEXT) gregister_unix.$(OBJEXT)
@MAC_TRUE@am__objects_1 = dir_mac.$(OBJEXT) boot_mac.$(OBJEXT) \
@MAC_TRUE@	glink_mac.$(OBJEXT) gregister_mac.$(OBJEXT)
@GUI_TRUE@am_emailrelay_gui_real_OBJECTS = $(am__objects_1) \
@GUI_TRUE@	dir.$(OBJEXT) gdialog.$(OBJEXT) gpage.$(OBJEXT) \
@GUI_TRUE@	guimain.$(OBJEXT) gunpack.$(OBJEXT) \
@GUI_TRUE@	installer.$(OBJEXT) legal.$(OBJEXT) \
@GUI_TRUE@	mapfile.$(OBJEXT) pages.$(OBJEXT) pointer.$(OBJEXT) \
@GUI_TRUE@	state.$(OBJEXT) unpack.$(OBJEXT)
emailrelay_gui_real_OBJECTS = $(am_emailrelay_gui_real_OBJECTS)
am__DEPENDENCIES_1 =
am__emailrelay_start_gui_SOURCES_DIST = guistart.c unpack.c
@GUI_TRUE@am_emailrelay_start_gui_OBJECTS = guistart.$(OBJEXT) \
@GUI_TRUE@	unpack.$(OBJEXT)
emailrelay_start_gui_OBJECTS = $(am_emailrelay_start_gui_OBJECTS)
emailrelay_start_gui_DEPENDENCIES =
am__emailrelay_unpack_SOURCES_DIST = unpackmain.c unpack.c
@GUI_TRUE@am_emailrelay_unpack_OBJECTS = unpackmain.$(OBJEXT) \
@GUI_TRUE@	unpack.$(OBJEXT)
emailrelay_unpack_OBJECTS = $(am_emailrelay_unpack_OBJECTS)
@GUI_TRUE@emailrelay_unpack_DEPENDENCIES = $(am__DEPENDENCIES_1)
am__pack_SOURCES_DIST = pack.cpp
@GUI_TRUE@am_pack_OBJECTS = pack.$(OBJEXT)
pack_OBJECTS = $(am_pack_OBJECTS)
@GUI_TRUE@pack_DEPENDENCIES = $(top_builddir)/src/glib/libglib.a \
@GUI_TRUE@	$(am__DEPENDENCIES_1)
SCRIPTS = $(noinst_SCRIPTS)
DEFAULT_INCLUDES = -I.@am__isrc@ -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) \
	-o $@
SOURCES = $(emailrelay_gui_real_SOURCES) \
	$(emailrelay_start_gui_SOURCES) $(emailrelay_unpack_SOURCES) \
	$(pack_SOURCES)
DIST_SOURCES = $(am__emailrelay_gui_real_SOURCES_DIST) \
	$(am__emailrelay_start_gui_SOURCES_DIST) \
	$(am__emailrelay_unpack_SOURCES_DIST) $(am__pack_SOURCES_DIST)
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__uninstall_files_from_dir = { \
  test -z "$$files" \
    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \
    || { echo " ( cd '$$dir' && rm -f" $$files ")"; \
         $(am__cd) "$$dir" && rm -f $$files; }; \
  }
DATA = $(e_icon_DATA)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = @ACLOCAL@
AMTAR = @AMTAR@
AR = @AR@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
COMPILER_VERSION = @COMPILER_VERSION@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CXX = @CXX@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = @CXXFLAGS@
CYGPATH_W = @CYGPATH_W@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
EXEEXT = @EXEEXT@
GREP = @GREP@
GZIP = @GZIP@
G_CAPABILITIES = @G_CAPABILITIES@
HAVE_DOXYGEN = @HAVE_DOXYGEN@
HAVE_MAN2HTML = @HAVE_MAN2HTML@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LDFLAGS = @LDFLAGS@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LTLIBOBJS = @LTLIBOBJS@
MAINT = @MAINT@
MAKE = @MAKE@
MAKEINFO = @MAKEINFO@
MKDIR_P = @MKDIR_P@
MOC = @MOC@
OBJEXT = @OBJEXT@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_URL = @PACKAGE_URL@
PACKAGE_VERSION = @PACKAGE_VERSION@
PAM_INCLUDE = @PAM_INCLUDE@
PAM_LIBS = @PAM_LIBS@
PATH_SEPARATOR = @PATH_SEPARATOR@
PKG_CONFIG = @PKG_CONFIG@
PKG_CONFIG_LIBDIR = @PKG_CONFIG_LIBDIR@
PKG_CONFIG_PATH = @PKG_CONFIG_PATH@
QT_CFLAGS = @QT_CFLAGS@
QT_LIBS = @QT_LIBS@
RANLIB = @RANLIB@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
SSL_LIBS = @SSL_LIBS@
STATIC_END = @STATIC_END@
STATIC_START = @STATIC_START@
STRIP = @STRIP@
VERSION = @VERSION@
ZLIB_LIBS = @ZLIB_LIBS@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build_alias = @build_alias@
builddir = @builddir@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
e_docdir = @e_docdir@
e_examplesdir = @e_examplesdir@
e_icondir = @e_icondir@
e_initdir = @e_initdir@
e_libexecdir = @e_libexecdir@
e_pamdir = @e_pamdir@
e_qtmoc = @e_qtmoc@
e_spooldir = @e_spooldir@
e_sysconfdir = @e_sysconfdir@
exec_prefix = @exec_prefix@
host_alias = @host_alias@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
srcdir = @srcdir@
sysconfdir = @sysconfdir@
target_alias = @target_alias@
top_build_prefix = @top_build_prefix@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@
BUNDLE = E-MailRelay-Configure
INSTALL_BUNDLE = E-MailRelay-Install
IMAGE = E-MailRelay.dmg
@MAC_FALSE@MAC_EXTRA_DIST = dir_mac.cpp boot_mac.cpp glink_mac.cpp glink_win32.cpp gregister_mac.cpp gregister_win32.cpp guistart.c emailrelay-icon.icns
@MAC_TRUE@MAC_EXTRA_DIST = dir_unix.cpp boot_unix.cpp glink_unix.cpp glink_win32.cpp gregister_unix.cpp gregister_win32.cpp emailrelay-icon.icns
@MAC_FALSE@MAC_SOURCES = dir_unix.cpp boot_unix.cpp glink_unix.cpp gregister_unix.cpp
@MAC_TRUE@MAC_SOURCES = dir_mac.cpp boot_mac.cpp glink_mac.cpp gregister_mac.cpp
@MAC_FALSE@MAC_NOINST = 
@MAC_TRUE@MAC_NOINST = $(BUNDLE).app
@MAC_FALSE@MAC_PROGS = 
@MAC_TRUE@MAC_PROGS = emailrelay-start-gui emailrelay-unpack
@MAC_FALSE@MAKE_SETUP_STUB = emailrelay-gui.real
@MAC_TRUE@MAKE_SETUP_STUB = NONE
EXTRA_DIST = \
	boot_win32.cpp \
	dir_win32.cpp \
	gcominit.h \
	glink_win32.cpp \
	mingw.mak \
	mock \
	pack.cpp \
	README \
	emailrelay-icon.png \
	emailrelay-gui.rc \
	$(MAC_EXTRA_DIST)

e_icon_DATA = \
	emailrelay-icon.png


# force symbol stripping on 'make install' -- see also make 'install-strip'
@GUI_TRUE@AM_INSTALL_PROGRAM_FLAGS = -s
@GUI_TRUE@MOC_OUTPUT = \
@GUI_TRUE@	moc_gdialog.cpp \
@GUI_TRUE@	moc_gpage.cpp \
@GUI_TRUE@	moc_pages.cpp

@GUI_TRUE@MOC_OBJECTS = \
@GUI_TRUE@	moc_gdialog.o \
@GUI_TRUE@	moc_gpage.o \
@GUI_TRUE@	moc_pages.o

@GUI_TRUE@CLEANFILES = $(MOC_OUTPUT) $(mock)
@GUI_TRUE@INCLUDES = \
@GUI_TRUE@	-I$(top_srcdir)/lib/$(COMPILER_VERSION) \
@GUI_TRUE@	-I$(top_srcdir)/src/glib \
@GUI_TRUE@	-I$(top_srcdir)/src/gnet \
@GUI_TRUE@	-I$(top_srcdir)/src/gsmtp \
@GUI_TRUE@	-I$(top_srcdir)/src/gpop \
@GUI_TRUE@	-I$(top_srcdir)/src/main \
@GUI_TRUE@	-DG_SBINDIR=\"$(sbindir)\" \
@GUI_TRUE@	-DG_SPOOLDIR=\"$(e_spooldir)\" \
@GUI_TRUE@	-DG_INITDIR=\"$(e_initdir)\" \
@GUI_TRUE@	-DG_SYSCONFDIR=\"$(e_sysconfdir)\" \
@GUI_TRUE@	-DG_ICONDIR=\"$(e_icondir)\" \
@GUI_TRUE@	-DG_LIBEXECDIR=\"$(e_libexecdir)\" \
@GUI_TRUE@	-DG_MANDIR=\"$(mandir)\" \
@GUI_TRUE@	-DG_DOCDIR=\"$(e_docdir)\" \
@GUI_TRUE@	-DG_EXAMPLESDIR=\"$(e_examplesdir)\"

@GUI_TRUE@AM_CPPFLAGS = $(QT_CFLAGS)
@GUI_TRUE@noinst_SCRIPTS = mock $(MAC_NOINST)
@GUI_TRUE@emailrelay_gui_real_SOURCES = \
@GUI_TRUE@	$(MAC_SOURCES) \
@GUI_TRUE@	boot.h \
@GUI_TRUE@	dir.cpp \
@GUI_TRUE@	dir.h \
@GUI_TRUE@	gdialog.cpp \
@GUI_TRUE@	gdialog.h \
@GUI_TRUE@	glink.h \
@GUI_TRUE@	gregister.h \
@GUI_TRUE@	gpage.cpp \
@GUI_TRUE@	gpage.h \
@GUI_TRUE@	guimain.cpp \
@GUI_TRUE@	gunpack.cpp \
@GUI_TRUE@	gunpack.h \
@GUI_TRUE@	installer.cpp \
@GUI_TRUE@	installer.h \
@GUI_TRUE@	legal.cpp \
@GUI_TRUE@	legal.h \
@GUI_TRUE@	mapfile.cpp \
@GUI_TRUE@	mapfile.h \
@GUI_TRUE@	pages.cpp \
@GUI_TRUE@	pages.h \
@GUI_TRUE@	pointer.cpp \
@GUI_TRUE@	pointer.h \
@GUI_TRUE@	qt.h \
@GUI_TRUE@	state.cpp \
@GUI_TRUE@	state.h \
@GUI_TRUE@	unpack.c \
@GUI_TRUE@	unpack.h

@GUI_TRUE@emailrelay_gui_real_DEPENDENCIES = $(MOC_OBJECTS)
@GUI_TRUE@emailrelay_gui_real_LDADD = \
@GUI_TRUE@	$(MOC_OBJECTS) \
@GUI_TRUE@	$(top_builddir)/src/glib/libglib.a \
@GUI_TRUE@	$(QT_LIBS)

@GUI_TRUE@pack_SOURCES = pack.cpp
@GUI_TRUE@pack_LDADD = $(top_builddir)/src/glib/libglib.a $(ZLIB_LIBS)
@GUI_TRUE@emailrelay_unpack_SOURCES = unpackmain.c unpack.c
@GUI_TRUE@emailrelay_unpack_LDADD = $(ZLIB_LIBS)
@GUI_TRUE@emailrelay_start_gui_SOURCES = guistart.c unpack.c
@GUI_TRUE@emailrelay_start_gui_LDADD = 
all: all-am

.SUFFIXES:
.SUFFIXES: .c .cpp .o .obj
$(srcdir)/Makefile.in: @MAINTAINER_MODE_TRUE@ $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu src/gui/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --gnu src/gui/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure: @MAINTAINER_MODE_TRUE@ $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4): @MAINTAINER_MODE_TRUE@ $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):

clean-noinstPROGRAMS:
	-test -z "$(noinst_PROGRAMS)" || rm -f $(noinst_PROGRAMS)
install-sbinPROGRAMS: $(sbin_PROGRAMS)
	@$(NORMAL_INSTALL)
	test -z "$(sbindir)" || $(MKDIR_P) "$(DESTDIR)$(sbindir)"
	@list='$(sbin_PROGRAMS)'; test -n "$(sbindir)" || list=; \
	for p in $$list; do echo "$$p $$p"; done | \
	sed 's/$(EXEEXT)$$//' | \
	while read p p1; do if test -f $$p; \
	  then echo "$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n;h' -e 's|.*|.|' \
	    -e 'p;x;s,.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/' | \
	sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1 } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) files[d] = files[d] " " $$1; \
	    else { print "f", $$3 "/" $$4, $$1; } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	    if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	    test -z "$$files" || { \
	      echo " $(INSTALL_PROGRAM_ENV) $(INSTALL_PROGRAM) $$files '$(DESTDIR)$(sbindir)$$dir'"; \
	      $(INSTALL_PROGRAM_ENV) $(INSTALL_PROGRAM) $$files "$(DESTDIR)$(sbindir)$$dir" || exit $$?; \
	    } \
	; done

uninstall-sbinPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(sbin_PROGRAMS)'; test -n "$(sbindir)" || list=; \
	files=`for p in $$list; do echo "$$p"; done | \
	  sed -e 'h;s,^.*/,,;s/$(EXEEXT)$$//;$(transform)' \
	      -e 's/$$/$(EXEEXT)/' `; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(sbindir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(sbindir)" && rm -f $$files

clean-sbinPROGRAMS:
	-test -z "$(sbin_PROGRAMS)" || rm -f $(sbin_PROGRAMS)
emailrelay-gui.real$(EXEEXT): $(emailrelay_gui_real_OBJECTS) $(emailrelay_gui_real_DEPENDENCIES) $(EXTRA_emailrelay_gui_real_DEPENDENCIES) 
	@rm -f emailrelay-gui.real$(EXEEXT)
	$(CXXLINK) $(emailrelay_gui_real_OBJECTS) $(emailrelay_gui_real_LDADD) $(LIBS)
emailrelay-start-gui$(EXEEXT): $(emailrelay_start_gui_OBJECTS) $(emailrelay_start_gui_DEPENDENCIES) $(EXTRA_emailrelay_start_gui_DEPENDENCIES) 
	@rm -f emailrelay-start-gui$(EXEEXT)
	$(LINK) $(emailrelay_start_gui_OBJECTS) $(emailrelay_start_gui_LDADD) $(LIBS)
emailrelay-unpack$(EXEEXT): $(emailrelay_unpack_OBJECTS) $(emailrelay_unpack_DEPENDENCIES) $(EXTRA_emailrelay_unpack_DEPENDENCIES) 
	@rm -f emailrelay-unpack$(EXEEXT)
	$(LINK) $(emailrelay_unpack_OBJECTS) $(emailrelay_unpack_LDADD) $(LIBS)
pack$(EXEEXT): $(pack_OBJECTS) $(pack_DEPENDENCIES) $(EXTRA_pack_DEPENDENCIES) 
	@rm -f pack$(EXEEXT)
	$(CXXLINK) $(pack_OBJECTS) $(pack_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/boot_mac.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/boot_unix.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dir.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dir_mac.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dir_unix.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/gdialog.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/glink_mac.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/glink_unix.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/gpage.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/gregister_mac.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/gregister_unix.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/guimain.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/guistart.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/gunpack.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/installer.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/legal.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mapfile.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/pack.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/pages.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/pointer.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/state.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/unpack.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/unpackmain.Po@am__quote@

.c.o:
@am__fastdepCC_TRUE@	$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(COMPILE) -c $<

.c.obj:
@am__fastdepCC_TRUE@	$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(COMPILE) -c `$(CYGPATH_W) '$<'`

.cpp.o:
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`
install-e_iconDATA: $(e_icon_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(e_icondir)" || $(MKDIR_P) "$(DESTDIR)$(e_icondir)"
	@list='$(e_icon_DATA)'; test -n "$(e_icondir)" || list=; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(e_icondir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(e_icondir)" || exit $$?; \
	done

uninstall-e_iconDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(e_icon_DATA)'; test -n "$(e_icondir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(e_icondir)'; $(am__uninstall_files_from_dir)

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	set x; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(PROGRAMS) $(SCRIPTS) $(DATA)
installdirs:
	for dir in "$(DESTDIR)$(sbindir)" "$(DESTDIR)$(e_icondir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
@GUI_FALSE@clean-local:
clean: clean-am

clean-am: clean-generic clean-local clean-noinstPROGRAMS \
	clean-sbinPROGRAMS mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am: install-data-local install-e_iconDATA

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am: install-sbinPROGRAMS
	@$(NORMAL_INSTALL)
	$(MAKE) $(AM_MAKEFLAGS) install-exec-hook
install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-e_iconDATA uninstall-local \
	uninstall-sbinPROGRAMS
	@$(NORMAL_INSTALL)
	$(MAKE) $(AM_MAKEFLAGS) uninstall-hook
.MAKE: install-am install-exec-am install-strip uninstall-am

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-generic \
	clean-local clean-noinstPROGRAMS clean-sbinPROGRAMS ctags \
	distclean distclean-compile distclean-generic distclean-tags \
	distdir dvi dvi-am html html-am info info-am install \
	install-am install-data install-data-am install-data-local \
	install-dvi install-dvi-am install-e_iconDATA install-exec \
	install-exec-am install-exec-hook install-html install-html-am \
	install-info install-info-am install-man install-pdf \
	install-pdf-am install-ps install-ps-am install-sbinPROGRAMS \
	install-strip installcheck installcheck-am installdirs \
	maintainer-clean maintainer-clean-generic mostlyclean \
	mostlyclean-compile mostlyclean-generic pdf pdf-am ps ps-am \
	tags uninstall uninstall-am uninstall-e_iconDATA \
	uninstall-hook uninstall-local uninstall-sbinPROGRAMS


@GUI_TRUE@moc_gdialog.cpp: $(srcdir)/gdialog.h $(mock)
@GUI_TRUE@	$(MOC) $< -o $@

@GUI_TRUE@moc_gpage.cpp: $(srcdir)/gpage.h $(mock)
@GUI_TRUE@	$(MOC) $< -o $@

@GUI_TRUE@moc_pages.cpp: $(srcdir)/pages.h $(mock)
@GUI_TRUE@	$(MOC) $< -o $@

@GUI_TRUE@install-exec-hook:
@GUI_TRUE@	@echo "#!/bin/sh" > "$(DESTDIR)$(sbindir)/emailrelay-gui"
@GUI_TRUE@	@echo DIR_SPOOL=\"$(DESTDIR)$(e_spooldir)\" >> "$(DESTDIR)$(sbindir)/emailrelay-gui"
@GUI_TRUE@	@echo DIR_CONFIG=\"$(DESTDIR)$(e_sysconfdir)\" >> "$(DESTDIR)$(sbindir)/emailrelay-gui"
@GUI_TRUE@	@echo exec $(DESTDIR)$(sbindir)/emailrelay-gui.real \"$$\@\" >> "$(DESTDIR)$(sbindir)/emailrelay-gui"
@GUI_TRUE@	@chmod +x "$(DESTDIR)$(sbindir)/emailrelay-gui"
@GUI_TRUE@	-if test -d "$(BUNDLE).app" ; then cp -R "$(BUNDLE).app" "$(DESTDIR)$(sbindir)" ; fi

@GUI_TRUE@uninstall-hook:
@GUI_TRUE@	-rm "$(DESTDIR)$(sbindir)/emailrelay-gui"
@GUI_TRUE@	-rm -rf "$(DESTDIR)$(sbindir)/$(BUNDLE).app"

@GUI_TRUE@clean-local:
@GUI_TRUE@	-rm -rf "$(BUNDLE).app"
@GUI_TRUE@	-rm -rf "$(INSTALL_BUNDLE).app"
@GUI_TRUE@	-rm -f emailrelay-setup payload
@GUI_TRUE@	-rm -f "$(IMAGE)"
@GUI_TRUE@	-rm -f "emailrelay-setup.state"

@GUI_FALSE@install-exec-hook:

@GUI_FALSE@uninstall-hook:

install-data-local: install-e_iconDATA

uninstall-local:
	-rmdir "$(DESTDIR)$(e_icondir)" 2>/dev/null

$(BUNDLE).app: emailrelay-start-gui
	../../bin/make-bundle.sh -f "$(BUNDLE)" emailrelay-start-gui "$(top_srcdir)/src/gui/emailrelay-icon.icns"

.PHONY: bundle
bundle: $(BUNDLE).app

emailrelay-setup: pack $(MAKE_SETUP_STUB) ../../bin/make-setup.sh
	../../bin/make-setup.sh $(MAKE_SETUP_DEBUG) $@ $(MAKE_SETUP_STUB) pack "$(top_srcdir)/src/gui/emailrelay-icon.png"
	@chmod +x $@

payload: pack ../../bin/make-setup.sh
	../../bin/make-setup.sh $(MAKE_SETUP_DEBUG) $@ NONE pack "$(top_srcdir)/src/gui/emailrelay-icon.png"

$(INSTALL_BUNDLE).app: emailrelay-gui.real payload ../../bin/make-bundle.sh
	../../bin/make-bundle.sh -f "$(INSTALL_BUNDLE)" emailrelay-gui.real "$(top_srcdir)/src/gui/emailrelay-icon.icns"
	mv "$(INSTALL_BUNDLE).app/Contents/MacOS/E-MailRelay-Install" "$(INSTALL_BUNDLE).app/Contents/emailrelay-gui.real"
	( cd "$(INSTALL_BUNDLE).app/Contents/MacOS" && ln -s ../emailrelay-gui.real E-MailRelay-Install )
	../../bin/make-qt-enabled.sh -f "$(INSTALL_BUNDLE).app/Contents/emailrelay-gui.real" "Frameworks"
	cp payload "$(INSTALL_BUNDLE).app/Contents/"

.PHONY: setup-bundle
setup-bundle: $(INSTALL_BUNDLE).app

$(IMAGE): $(INSTALL_BUNDLE).app emailrelay-unpack
	-@rm -f "$(INSTALL_BUNDLE).app/Contents/MacOS/$(INSTALL_BUNDLE).state"
	cp emailrelay-unpack "$(INSTALL_BUNDLE).app/Contents/"
	hdiutil create -srcfolder "$(INSTALL_BUNDLE).app" "$(IMAGE)" && hdiutil internet-enable -yes "$(IMAGE)"

.PHONY: image
image: $(IMAGE)

.PHONY: universal
universal:
	cp ../../build/Release/emailrelay ../main/emailrelay && touch ../main/emailrelay
	cp ../../build/Release/emailrelay-filter-copy ../main/emailrelay-filter-copy && touch ../main/emailrelay-filter-copy
	cp ../../build/Release/emailrelay-passwd ../main/emailrelay-passwd && touch ../main/emailrelay-passwd
	cp ../../build/Release/emailrelay-poke ../main/emailrelay-poke && touch ../main/emailrelay-poke
	cp ../../build/Release/emailrelay-start ../main/emailrelay-start && touch ../main/emailrelay-start
	cp ../../build/Release/emailrelay-submit ../main/emailrelay-submit && touch ../main/emailrelay-submit
	cp ../../build/Release/emailrelay-gui ../gui/emailrelay-gui.real && touch ../gui/emailrelay-gui.real
	cp ../../build/Release/emailrelay-start-gui ../gui/emailrelay-start-gui && touch ../gui/emailrelay-start-gui
	cp ../../build/Release/emailrelay-unpack ../gui/emailrelay-unpack && touch ../gui/emailrelay-unpack

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
