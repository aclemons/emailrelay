garg.cpp	33	keep	G::Arg::Arg( int argc , char **argv )
garg.cpp	49	keep	G::Arg::Arg( const StringArray & args ) : m_array(args)
garg.cpp	57	remove	void G::Arg::parse( HINSTANCE , const std::string & command_line_tail )
garg.cpp	66	keep	void G::Arg::parse( const std::string & command_line )
garg.cpp	73	remove	void G::Arg::reparse( const std::string & command_line_tail )
garg.cpp	80	remove	std::string G::Arg::v0()
garg.cpp	85	keep	G::StringArray G::Arg::array( unsigned int shift ) const
garg.cpp	93	keep	bool G::Arg::contains( const std::string & option , std::size_t option_args , bool cs ) const
garg.cpp	98	remove	std::size_t G::Arg::count( const std::string & option )
garg.cpp	103	keep	std::size_t G::Arg::find( bool cs , const std::string & option , std::size_t option_args , std::size_t * index_p ) const
garg.cpp	120	keep	std::size_t G::Arg::match( const std::string & prefix ) const
garg.cpp	132	keep	bool G::Arg::strmatch( bool cs , const std::string & s1 , const std::string & s2 )
garg.cpp	137	keep	bool G::Arg::remove( const std::string & option , std::size_t option_args )
garg.cpp	146	keep	std::string G::Arg::removeValue( const std::string & option , const std::string & default_ )
garg.cpp	154	keep	std::string G::Arg::removeAt( std::size_t option_index , std::size_t option_args )
garg.cpp	169	keep	std::size_t G::Arg::index( const std::string & option , std::size_t option_args , std::size_t default_ ) const
garg.cpp	177	keep	std::size_t G::Arg::c() const
garg.cpp	182	keep	std::string G::Arg::v( std::size_t i ) const
garg.cpp	188	keep	std::string G::Arg::v( std::size_t i , const std::string & default_ ) const
garg.cpp	193	keep	std::string G::Arg::prefix() const
garg.cpp	200	keep	const char * G::Arg::prefix( char ** argv ) noexcept
garg.cpp	210	keep	void G::Arg::parseImp( const std::string & command_line )
garg.cpp	220	keep	std::string G::Arg::exe( bool do_throw )
gbase64.cpp	82	keep	std::string G::Base64::encode( string_view s , string_view eol )
gbase64.cpp	87	keep	std::string G::Base64::decode( string_view s , bool do_throw , bool strict )
gbase64.cpp	92	keep	bool G::Base64::valid( string_view s , bool strict )
gbase64.cpp	99	keep	std::string G::Base64Imp::encode( string_view input , string_view eol )
gbase64.cpp	107	keep	void G::Base64Imp::encode_imp( iterator_out result_p , string_view input , string_view eol , std::size_t blocks_per_line )
gbase64.cpp	128	keep	std::string G::Base64Imp::decode( string_view input , bool do_throw , bool strict )
gbase64.cpp	146	keep	void G::Base64Imp::decode_imp( iterator_out result_p , string_view s , bool & error )
gbase64.cpp	171	keep	bool G::Base64Imp::valid( string_view input , bool strict )
gbase64.cpp	183	keep	bool G::Base64Imp::strictlyValid( string_view s ) noexcept
gbase64.cpp	207	keep	void G::Base64Imp::accumulate_8( uint32_type & n , iterator_in & p , iterator_in end , int & i )
gbase64.cpp	219	keep	void G::Base64Imp::generate_6( uint32_type & n , int & i , iterator_out & result )
gbase64.cpp	227	keep	void G::Base64Imp::accumulate_6( g_uint32_t & n , iterator_in & p , iterator_in end , std::size_t & bits , bool & error )
gbase64.cpp	245	keep	void G::Base64Imp::generate_8( g_uint32_t & n , std::size_t & bits , iterator_out & result , bool & error )
gbase64.cpp	259	keep	std::size_t G::Base64Imp::index( char c , bool & error ) noexcept
gcleanup_unix.cpp	111	keep	void G::Cleanup::init()
gcleanup_unix.cpp	116	keep	void G::Cleanup::add( bool (*fn)(SignalSafe,const char*) , const char * arg )
gcleanup_unix.cpp	121	remove	void G::Cleanup::atexit( bool active )
gcleanup_unix.cpp	126	keep	void G::Cleanup::block() noexcept
gcleanup_unix.cpp	131	keep	void G::Cleanup::release() noexcept
gcleanup_unix.cpp	136	remove	const char * G::Cleanup::strdup( const char * p )
gcleanup_unix.cpp	141	keep	const char * G::Cleanup::strdup( const std::string & s )
gcleanup_unix.cpp	148	keep	void G::CleanupImp::init()
gcleanup_unix.cpp	158	keep	void G::CleanupImp::add( bool (*fn)(SignalSafe,const char*) , const char * arg )
gcleanup_unix.cpp	173	keep	G::CleanupImp::Link * G::CleanupImp::new_link_ignore_leak()
gcleanup_unix.cpp	178	keep	void G::CleanupImp::installHandler( int signum )
gcleanup_unix.cpp	186	keep	bool G::CleanupImp::ignored( int signum )
gcleanup_unix.cpp	194	remove	void G::CleanupImp::installDefault( int signum )
gcleanup_unix.cpp	199	remove	void G::CleanupImp::installDefault( const G::SignalSafe & , int signum )
gcleanup_unix.cpp	204	keep	void G::CleanupImp::installIgnore( int signum )
gcleanup_unix.cpp	209	keep	void G::CleanupImp::install( int signum , Handler fn , bool do_throw )
gcleanup_unix.cpp	218	keep	void G::CleanupImp::atexit( bool active )
gcleanup_unix.cpp	228	keep	void G::CleanupImp::atexitHandler()
gcleanup_unix.cpp	234	keep	void G::CleanupImp::callHandlers()
gcleanup_unix.cpp	243	keep	bool G::CleanupImp::callHandlersOnce( SignalSafe )
gcleanup_unix.cpp	275	keep	void G::CleanupImp::block() noexcept
gcleanup_unix.cpp	286	keep	void G::CleanupImp::release() noexcept
gcleanup_unix.cpp	300	keep	const char * G::CleanupImp::strdup_ignore_leaks( const char * p )
gdaemon_unix.cpp	48	remove	void G::Daemon::detach()
gdaemon_unix.cpp	53	keep	void G::Daemon::detach( const G::Path & pid_file )
gdaemon_unix.cpp	70	keep	void G::Daemon::setsid()
gdate.cpp	28	keep	int G::Date::yearUpperLimit() noexcept
gdate.cpp	34	keep	int G::Date::yearLowerLimit() noexcept
gdate.cpp	39	remove	G::Date::Date()
gdate.cpp	45	remove	G::Date::Date( SystemTime t )
gdate.cpp	51	remove	G::Date::Date( SystemTime t , const LocalTime & )
gdate.cpp	57	keep	G::Date::Date( const BrokenDownTime & tm )
gdate.cpp	63	remove	G::Date::Date( const LocalTime & )
gdate.cpp	69	remove	G::Date::Date( int year , Date::Month month , int day_of_month , std::nothrow_t ) noexcept : m_day(day_of_month) , m_month(static_cast<int>(month)) , m_year(year)
gdate.cpp	79	remove	G::Date::Date( int year , Date::Month month , int day_of_month ) : m_day(day_of_month) , m_month(static_cast<int>(month)) , m_year(year)
gdate.cpp	87	keep	void G::Date::init( const BrokenDownTime & tm )
gdate.cpp	94	keep	void G::Date::check()
gdate.cpp	107	remove	std::string G::Date::str( Format format ) const
gdate.cpp	129	keep	int G::Date::monthday() const
gdate.cpp	134	keep	std::string G::Date::dd() const
gdate.cpp	139	keep	std::string G::Date::mm() const
gdate.cpp	144	keep	std::string G::Date::yyyy() const
gdate.cpp	149	keep	G::Date::Weekday G::Date::weekday() const
gdate.cpp	160	keep	std::string G::Date::weekdayName( bool brief ) const
gdate.cpp	174	keep	G::Date::Month G::Date::month() const
gdate.cpp	179	keep	std::string G::Date::monthName( bool brief ) const
gdate.cpp	198	keep	int G::Date::year() const
gdate.cpp	203	remove	G::Date G::Date::next() const
gdate.cpp	210	keep	G::Date & G::Date::operator++()
gdate.cpp	233	remove	G::Date G::Date::previous() const
gdate.cpp	240	keep	G::Date & G::Date::operator--()
gdate.cpp	270	keep	int G::Date::lastDay( int month , int year )
gdate.cpp	290	keep	bool G::Date::isLeapYear( int y )
gdate.cpp	295	keep	bool G::Date::operator==( const Date &other ) const
gdate.cpp	303	remove	bool G::Date::operator!=( const Date &other ) const
gdatetime.cpp	138	keep	G::BrokenDownTime::BrokenDownTime() : m_tm{}
gdatetime.cpp	144	remove	G::BrokenDownTime::BrokenDownTime( const struct std::tm & tm_in ) : m_tm(tm_in)
gdatetime.cpp	152	keep	G::BrokenDownTime::BrokenDownTime( int y , int mon , int d , int h , int min , int s ) : m_tm{}
gdatetime.cpp	166	remove	std::time_t G::BrokenDownTime::epochTimeFromLocal() const
gdatetime.cpp	171	keep	std::time_t G::BrokenDownTime::epochTimeFromUtc() const
gdatetime.cpp	195	remove	G::BrokenDownTime G::BrokenDownTime::null()
gdatetime.cpp	200	keep	G::BrokenDownTime G::BrokenDownTime::local( SystemTime t )
gdatetime.cpp	207	keep	G::BrokenDownTime G::BrokenDownTime::utc( SystemTime t )
gdatetime.cpp	214	keep	G::BrokenDownTime G::BrokenDownTime::midday( int year , int month , int day )
gdatetime.cpp	219	remove	G::BrokenDownTime G::BrokenDownTime::midnight( int year , int month , int day )
gdatetime.cpp	224	keep	bool G::BrokenDownTime::format( char * out , std::size_t out_size , const char * fmt ) const
gdatetime.cpp	238	keep	void G::BrokenDownTime::format( std::vector<char> & out , const char * fmt ) const
gdatetime.cpp	244	remove	std::string G::BrokenDownTime::str() const
gdatetime.cpp	249	keep	std::string G::BrokenDownTime::str( const char * fmt ) const
gdatetime.cpp	261	keep	int G::BrokenDownTime::hour() const
gdatetime.cpp	266	keep	int G::BrokenDownTime::min() const
gdatetime.cpp	271	keep	int G::BrokenDownTime::sec() const
gdatetime.cpp	276	keep	int G::BrokenDownTime::year() const
gdatetime.cpp	281	keep	int G::BrokenDownTime::month() const
gdatetime.cpp	286	keep	int G::BrokenDownTime::day() const
gdatetime.cpp	291	keep	int G::BrokenDownTime::wday() const
gdatetime.cpp	298	remove	bool G::BrokenDownTime::sameMinute( const BrokenDownTime & other ) const noexcept
gdatetime.cpp	305	keep	G::SystemTime::SystemTime( time_point_type tp ) : m_tp(tp)
gdatetime.cpp	310	keep	G::SystemTime::SystemTime( std::time_t t , unsigned long us ) noexcept
gdatetime.cpp	316	keep	G::SystemTime G::SystemTime::now()
gdatetime.cpp	321	keep	G::TimeInterval G::SystemTime::operator-( const SystemTime & start ) const
gdatetime.cpp	326	keep	G::TimeInterval G::SystemTime::interval( const SystemTime & end ) const
gdatetime.cpp	331	remove	G::SystemTime & G::SystemTime::add( unsigned long us )
gdatetime.cpp	337	keep	bool G::SystemTime::sameSecond( const SystemTime & t ) const noexcept
gdatetime.cpp	342	keep	G::BrokenDownTime G::SystemTime::local() const
gdatetime.cpp	347	keep	G::BrokenDownTime G::SystemTime::utc() const
gdatetime.cpp	352	remove	unsigned int G::SystemTime::ms() const
gdatetime.cpp	358	keep	unsigned int G::SystemTime::us() const
gdatetime.cpp	364	keep	std::time_t G::SystemTime::s() const noexcept
gdatetime.cpp	371	keep	G::SystemTime G::SystemTime::zero()
gdatetime.cpp	378	remove	bool G::SystemTime::isZero() const
gdatetime.cpp	383	keep	bool G::SystemTime::operator<( const SystemTime & other ) const
gdatetime.cpp	388	remove	bool G::SystemTime::operator<=( const SystemTime & other ) const
gdatetime.cpp	393	keep	bool G::SystemTime::operator==( const SystemTime & other ) const
gdatetime.cpp	398	keep	bool G::SystemTime::operator!=( const SystemTime & other ) const
gdatetime.cpp	403	remove	bool G::SystemTime::operator>( const SystemTime & other ) const
gdatetime.cpp	408	remove	bool G::SystemTime::operator>=( const SystemTime & other ) const
gdatetime.cpp	413	remove	G::SystemTime G::SystemTime::operator+( TimeInterval interval ) const
gdatetime.cpp	420	keep	void G::SystemTime::operator+=( TimeInterval i )
gdatetime.cpp	427	keep	void G::SystemTime::streamOut( std::ostream & stream ) const
gdatetime.cpp	438	keep	std::ostream & G::operator<<( std::ostream & stream , const SystemTime & t )
gdatetime.cpp	446	keep	G::TimerTime::TimerTime( time_point_type tp ) : m_tp(tp)
gdatetime.cpp	451	keep	G::TimerTime G::TimerTime::now()
gdatetime.cpp	458	keep	G::TimerTime G::TimerTime::zero()
gdatetime.cpp	463	keep	bool G::TimerTime::isZero() const noexcept
gdatetime.cpp	468	remove	G::TimerTime G::TimerTime::test( int s , int us )
gdatetime.cpp	474	keep	unsigned long G::TimerTime::s() const
gdatetime.cpp	480	keep	unsigned long G::TimerTime::us() const
gdatetime.cpp	486	remove	std::string G::TimerTime::str() const
gdatetime.cpp	493	keep	G::TimerTime G::TimerTime::operator+( const TimeInterval & interval ) const
gdatetime.cpp	500	keep	void G::TimerTime::operator+=( TimeInterval i )
gdatetime.cpp	507	remove	G::TimeInterval G::TimerTime::operator-( const TimerTime & start ) const
gdatetime.cpp	512	keep	G::TimeInterval G::TimerTime::interval( const TimerTime & end ) const
gdatetime.cpp	517	remove	bool G::TimerTime::sameSecond( const TimerTime & t ) const
gdatetime.cpp	525	keep	bool G::TimerTime::operator<=( const TimerTime & other ) const
gdatetime.cpp	530	keep	bool G::TimerTime::operator==( const TimerTime & other ) const
gdatetime.cpp	535	remove	bool G::TimerTime::operator!=( const TimerTime & other ) const
gdatetime.cpp	540	remove	bool G::TimerTime::operator>( const TimerTime & other ) const
gdatetime.cpp	545	remove	bool G::TimerTime::operator>=( const TimerTime & other ) const
gdatetime.cpp	552	keep	G::TimeInterval::TimeInterval( s_type s , us_type us ) : m_s(s) , m_us(us)
gdatetime.cpp	559	remove	G::TimeInterval::TimeInterval( const SystemTime & start , const SystemTime & end ) : m_s(0) , m_us(0)
gdatetime.cpp	569	keep	G::TimeInterval::TimeInterval( const TimerTime & start , const TimerTime & end ) : m_s(0) , m_us(0)
gdatetime.cpp	579	keep	void G::TimeInterval::normalise()
gdatetime.cpp	594	keep	G::TimeInterval G::TimeInterval::limit()
gdatetime.cpp	600	keep	G::TimeInterval G::TimeInterval::zero()
gdatetime.cpp	605	keep	G::TimeInterval::s_type G::TimeInterval::s() const
gdatetime.cpp	610	keep	G::TimeInterval::us_type G::TimeInterval::us() const
gdatetime.cpp	615	keep	bool G::TimeInterval::operator==( const TimeInterval & other ) const
gdatetime.cpp	620	remove	bool G::TimeInterval::operator!=( const TimeInterval & other ) const
gdatetime.cpp	625	keep	bool G::TimeInterval::operator<( const TimeInterval & other ) const
gdatetime.cpp	630	remove	bool G::TimeInterval::operator<=( const TimeInterval & other ) const
gdatetime.cpp	635	keep	bool G::TimeInterval::operator>( const TimeInterval & other ) const
gdatetime.cpp	640	remove	bool G::TimeInterval::operator>=( const TimeInterval & other ) const
gdatetime.cpp	645	remove	G::TimeInterval G::TimeInterval::operator+( const TimeInterval & other ) const
gdatetime.cpp	652	remove	G::TimeInterval G::TimeInterval::operator-( const TimeInterval & other ) const
gdatetime.cpp	659	keep	void G::TimeInterval::increase( unsigned int & s , unsigned int ds )
gdatetime.cpp	668	keep	void G::TimeInterval::operator+=( TimeInterval i )
gdatetime.cpp	680	keep	void G::TimeInterval::decrease( unsigned int & s , unsigned int ds )
gdatetime.cpp	687	keep	void G::TimeInterval::operator-=( TimeInterval i )
gdatetime.cpp	699	keep	void G::TimeInterval::streamOut( std::ostream & stream ) const
gdatetime.cpp	710	keep	std::ostream & G::operator<<( std::ostream & stream , const TimeInterval & ti )
gdatetime.cpp	718	keep	G::DateTime::Offset G::DateTime::offset( SystemTime t_in )
gdatetime.cpp	727	remove	std::string G::DateTime::offsetString( int tz )
gdatetime.cpp	736	keep	std::string G::DateTime::offsetString( Offset offset )
gdirectory.cpp	31	remove	G::Directory::Directory() : m_path(".")
gdirectory.cpp	36	keep	G::Directory::Directory( const Path & path ) : m_path(path)
gdirectory.cpp	41	remove	G::Directory::Directory( const std::string & path ) : m_path(path)
gdirectory.cpp	46	keep	G::Path G::Directory::path() const
gdirectory.cpp	51	keep	std::string G::Directory::tmp()
gdirectory.cpp	59	keep	bool G::Directory::valid( bool for_creation ) const
gdirectory.cpp	66	keep	G::DirectoryList::DirectoryList()
gdirectory.cpp	69	remove	void G::DirectoryList::readAll( const G::Path & dir , std::vector<G::DirectoryList::Item> & out )
gdirectory.cpp	76	keep	std::size_t G::DirectoryList::readAll( const G::Path & dir )
gdirectory.cpp	82	keep	std::size_t G::DirectoryList::readDirectories( const G::Path & dir , unsigned int limit )
gdirectory.cpp	88	keep	std::size_t G::DirectoryList::readType( const G::Path & dir , G::string_view suffix , unsigned int limit )
gdirectory.cpp	94	keep	void G::DirectoryList::readImp( const G::Path & dir , bool sub_dirs , G::string_view suffix , unsigned int limit )
gdirectory.cpp	118	keep	bool G::DirectoryList::more()
gdirectory.cpp	134	remove	bool G::DirectoryList::isLink() const
gdirectory.cpp	139	keep	bool G::DirectoryList::isDir() const
gdirectory.cpp	144	keep	G::Path G::DirectoryList::filePath() const
gdirectory.cpp	149	keep	std::string G::DirectoryList::fileName() const
gdirectory_unix.cpp	73	keep	int G::Directory::usable( bool for_creation ) const
gdirectory_unix.cpp	97	keep	bool G::Directory::writeable( const std::string & filename ) const
gdirectory_unix.cpp	105	keep	G::DirectoryIterator::DirectoryIterator( const Directory & dir ) : m_imp(std::make_unique<DirectoryIteratorImp>(dir))
gdirectory_unix.cpp	110	keep	G::DirectoryIterator::~DirectoryIterator()
gdirectory_unix.cpp	113	keep	bool G::DirectoryIterator::error() const
gdirectory_unix.cpp	118	keep	bool G::DirectoryIterator::more()
gdirectory_unix.cpp	123	keep	G::Path G::DirectoryIterator::filePath() const
gdirectory_unix.cpp	128	keep	std::string G::DirectoryIterator::fileName() const
gdirectory_unix.cpp	133	keep	bool G::DirectoryIterator::isLink() const
gdirectory_unix.cpp	138	keep	bool G::DirectoryIterator::isDir() const
gdirectory_unix.cpp	143	remove	std::string G::DirectoryIterator::sizeString() const
gdirectory_unix.cpp	150	keep	G::DirectoryIteratorImp::DirectoryIteratorImp( const Directory & dir ) : m_d(nullptr) , m_dp(nullptr) , m_dir(dir) , m_error(true) , m_is_dir(false) , m_is_link(false)
gdirectory_unix.cpp	162	keep	bool G::DirectoryIteratorImp::error() const
gdirectory_unix.cpp	167	keep	bool G::DirectoryIteratorImp::more()
gdirectory_unix.cpp	206	keep	G::Path G::DirectoryIteratorImp::filePath() const
gdirectory_unix.cpp	211	keep	std::string G::DirectoryIteratorImp::fileName() const
gdirectory_unix.cpp	216	keep	bool G::DirectoryIteratorImp::isDir() const
gdirectory_unix.cpp	221	keep	bool G::DirectoryIteratorImp::isLink() const
gdirectory_unix.cpp	226	keep	G::DirectoryIteratorImp::~DirectoryIteratorImp()
gdirectory_unix.cpp	232	keep	std::string G::DirectoryIteratorImp::sizeString() const
genvironment.cpp	27	keep	G::Environment::Environment()
genvironment.cpp	32	remove	G::Environment::Environment( const std::map<std::string,std::string> & map ) : m_map(map)
genvironment.cpp	38	keep	G::Environment::Environment( const Environment & other ) : m_map(other.m_map)
genvironment.cpp	44	keep	G::Environment::Environment( Environment && other ) noexcept : m_map(std::move(other.m_map)) , m_list(std::move(other.m_list)) , m_pointers(std::move(other.m_pointers)) , m_block(std::move(other.m_block))
genvironment.cpp	52	keep	void G::Environment::swap( Environment & other ) noexcept
genvironment.cpp	60	remove	bool G::Environment::valid() const
genvironment.cpp	68	keep	G::Environment & G::Environment::operator=( const Environment & other )
genvironment.cpp	74	remove	G::Environment & G::Environment::operator=( Environment && other ) noexcept
genvironment.cpp	80	keep	void G::Environment::setup()
genvironment.cpp	87	keep	void G::Environment::setList()
genvironment.cpp	99	keep	void G::Environment::setPointers()
genvironment.cpp	108	keep	void G::Environment::setBlock()
genvironment.cpp	122	keep	void G::Environment::add( const std::string & name , const std::string & value )
genvironment.cpp	130	remove	void G::Environment::set( const std::string & name , const std::string & value )
genvironment.cpp	136	keep	char ** G::Environment::v() const noexcept
genvironment.cpp	141	remove	const char * G::Environment::ptr() const noexcept
genvironment.cpp	146	keep	bool G::Environment::contains( const std::string & name ) const
genvironment.cpp	151	remove	std::string G::Environment::value( const std::string & name , const std::string & default_ ) const
genvironment_unix.cpp	27	keep	std::string G::Environment::get( const std::string & name , const std::string & default_ )
genvironment_unix.cpp	33	keep	char * G::Environment::stringdup( const std::string & s )
genvironment_unix.cpp	39	keep	void G::Environment::put( const std::string & name , const std::string & value )
gexception.cpp	25	keep	G::Exception::Exception( std::initializer_list<string_view> args ) : std::runtime_error(join(args))
gexception.cpp	30	keep	G::Exception::Exception( string_view what ) : Exception{what}
gexception.cpp	35	keep	G::Exception::Exception( string_view what , string_view more ) : Exception{what,more}
gexception.cpp	40	keep	G::Exception::Exception( string_view what , string_view more1 , string_view more2 ) : Exception{what,more1,more2}
gexception.cpp	45	keep	G::Exception::Exception( string_view what , string_view more1 , string_view more2 , string_view more3 ) : Exception{what,more1,more2,more3}
gexception.cpp	51	keep	G::Exception::Exception( string_view what , string_view more1 , string_view more2 , string_view more3 , string_view more4 ) : Exception{what,more1,more2,more3,more4}
gexception.cpp	57	keep	std::string G::Exception::join( std::initializer_list<string_view> args )
gexecutablecommand.cpp	28	remove	G::ExecutableCommand::ExecutableCommand( const std::string & s )
gexecutablecommand.cpp	48	keep	G::ExecutableCommand::ExecutableCommand( const G::Path & exe_ , const G::StringArray & args_ ) : m_exe(exe_) , m_args(args_)
gexecutablecommand.cpp	54	keep	G::Path G::ExecutableCommand::exe() const
gexecutablecommand.cpp	59	keep	G::StringArray G::ExecutableCommand::args() const
gexecutablecommand.cpp	64	keep	std::string G::ExecutableCommand::displayString() const
gexecutablecommand.cpp	72	keep	void G::ExecutableCommand::add( const std::string & arg )
gexecutablecommand.cpp	77	remove	void G::ExecutableCommand::insert( const G::StringArray & array )
gfile.cpp	29	keep	bool G::File::remove( const Path & path , std::nothrow_t ) noexcept
gfile.cpp	35	keep	void G::File::remove( const Path & path )
gfile.cpp	46	keep	bool G::File::rename( const Path & from , const Path & to , std::nothrow_t ) noexcept
gfile.cpp	51	keep	void G::File::rename( const Path & from , const Path & to , bool ignore_missing )
gfile.cpp	62	keep	bool G::File::rename( const char * from , const char * to , bool & enoent ) noexcept
gfile.cpp	70	remove	void G::File::copy( const Path & from , const Path & to )
gfile.cpp	77	keep	bool G::File::copy( const Path & from , const Path & to , std::nothrow_t )
gfile.cpp	82	remove	bool G::File::copyInto( const Path & from , const Path & to_dir , std::nothrow_t )
gfile.cpp	91	keep	std::string G::File::copy( const Path & from , const Path & to , int )
gfile.cpp	118	remove	void G::File::copy( std::istream & in , std::ostream & out , std::streamsize limit , std::string::size_type block )
gfile.cpp	145	keep	bool G::File::exists( const Path & path )
gfile.cpp	150	keep	bool G::File::exists( const Path & path , std::nothrow_t )
gfile.cpp	155	keep	bool G::File::exists( const Path & path , bool error_return_value , bool do_throw )
gfile.cpp	175	keep	bool G::File::isLink( const Path & path , std::nothrow_t )
gfile.cpp	181	keep	bool G::File::isDirectory( const Path & path , std::nothrow_t )
gfile.cpp	187	keep	bool G::File::isExecutable( const Path & path , std::nothrow_t )
gfile.cpp	193	remove	bool G::File::isEmpty( const Path & path , std::nothrow_t )
gfile.cpp	199	keep	std::string G::File::sizeString( const Path & path )
gfile.cpp	205	keep	G::SystemTime G::File::time( const Path & path )
gfile.cpp	213	remove	G::SystemTime G::File::time( const Path & path , std::nothrow_t )
gfile.cpp	221	keep	bool G::File::chmodx( const Path & path , std::nothrow_t )
gfile.cpp	226	remove	void G::File::chmodx( const Path & path )
gfile.cpp	231	keep	bool G::File::mkdir( const Path & dir , std::nothrow_t )
gfile.cpp	236	remove	void G::File::mkdir( const Path & dir )
gfile.cpp	243	keep	bool G::File::mkdirsr( const Path & path , int & e , int & limit )
gfile.cpp	267	remove	bool G::File::mkdirs( const Path & path , std::nothrow_t , int limit )
gfile.cpp	273	remove	void G::File::mkdirs( const Path & path , int limit )
gfile.cpp	280	remove	int G::File::compare( const Path & path_1 , const Path & path_2 , bool ignore_whitespace )
gfile_unix.cpp	55	keep	void G::File::open( std::ofstream & ofstream , const Path & path )
gfile_unix.cpp	60	keep	void G::File::open( std::ofstream & ofstream , const Path & path , Text )
gfile_unix.cpp	65	keep	void G::File::open( std::ofstream & ofstream , const Path & path , Append )
gfile_unix.cpp	70	keep	void G::File::open( std::ifstream & ifstream , const Path & path )
gfile_unix.cpp	75	remove	void G::File::open( std::ifstream & ifstream , const Path & path , Text )
gfile_unix.cpp	80	keep	std::filebuf * G::File::open( std::filebuf & fb , const Path & path , InOut inout )
gfile_unix.cpp	88	keep	int G::File::open( const char * path , InOutAppend mode ) noexcept
gfile_unix.cpp	98	remove	int G::File::open( const char * path , CreateExclusive ) noexcept
gfile_unix.cpp	103	remove	std::FILE * G::File::fopen( const char * path , const char * mode ) noexcept
gfile_unix.cpp	108	keep	bool G::File::probe( const char * path ) noexcept
gfile_unix.cpp	118	remove	void G::File::create( const Path & path )
gfile_unix.cpp	126	keep	bool G::File::renameOnto( const Path & from , const Path & to , std::nothrow_t ) noexcept
gfile_unix.cpp	131	keep	ssize_t G::File::read( int fd , char * p , std::size_t n ) noexcept
gfile_unix.cpp	136	keep	ssize_t G::File::write( int fd , const char * p , std::size_t n ) noexcept
gfile_unix.cpp	141	keep	void G::File::close( int fd ) noexcept
gfile_unix.cpp	146	keep	int G::File::mkdirImp( const Path & dir ) noexcept
gfile_unix.cpp	161	keep	G::File::Stat G::File::statImp( const char * path , bool link ) noexcept
gfile_unix.cpp	190	keep	bool G::File::existsImp( const char * path , bool & enoent , bool & eaccess ) noexcept
gfile_unix.cpp	201	keep	bool G::File::chmodx( const Path & path , bool do_throw )
gfile_unix.cpp	220	remove	void G::File::chmod( const Path & path , const std::string & spec )
gfile_unix.cpp	226	keep	bool G::File::chmod( const Path & path , const std::string & spec , std::nothrow_t )
gfile_unix.cpp	247	keep	std::pair<bool,mode_t> G::FileImp::newmode( mode_t mode , const std::string & spec_in )
gfile_unix.cpp	316	remove	void G::File::chgrp( const Path & path , const std::string & group )
gfile_unix.cpp	323	remove	bool G::File::chgrp( const Path & path , const std::string & group , std::nothrow_t )
gfile_unix.cpp	328	keep	bool G::File::hardlink( const Path & src , const Path & dst , std::nothrow_t )
gfile_unix.cpp	333	remove	void G::File::link( const Path & target , const Path & new_link )
gfile_unix.cpp	351	remove	bool G::File::link( const Path & target , const Path & new_link , std::nothrow_t )
gfile_unix.cpp	362	keep	int G::File::linkImp( const char * target , const char * new_link )
gfile_unix.cpp	369	remove	G::Path G::File::readlink( const Path & link )
gfile_unix.cpp	377	keep	G::Path G::File::readlink( const Path & link , std::nothrow_t )
gfile_unix.cpp	398	keep	bool G::File::linked( const Path & target , const Path & new_link )
gfile_unix.cpp	404	keep	std::streamoff G::File::seek( int fd , std::streamoff offset , Seek origin ) noexcept
gfile_unix.cpp	411	remove	void G::File::setNonBlocking( int fd ) noexcept
gformat.cpp	25	remove	G::format::format( const std::string & fmt ) : m_fmt(fmt)
gformat.cpp	30	keep	G::format::format( const char * fmt ) : m_fmt(fmt)
gformat.cpp	35	remove	G::format & G::format::parse( const std::string & fmt )
gformat.cpp	43	remove	G::format & G::format::parse( const char * fmt )
gformat.cpp	51	keep	bool G::format::isdigit( char c )
gformat.cpp	57	keep	std::string G::format::str() const
gformat.cpp	86	remove	std::size_t G::format::size() const
gformat.cpp	91	keep	void G::format::apply( const std::string & value )
gformat.cpp	96	keep	std::ostream & G::operator<<( std::ostream & stream , const format & f )
ggetopt.cpp	36	remove	G::GetOpt::GetOpt( const Arg & args_in , const std::string & spec , std::size_t ignore_non_options ) : m_spec(spec) , m_args(args_in)
ggetopt.cpp	43	keep	G::GetOpt::GetOpt( const Arg & args_in , const Options & spec , std::size_t ignore_non_options ) : m_spec(spec) , m_args(args_in)
ggetopt.cpp	50	remove	G::GetOpt::GetOpt( const StringArray & args_in , const std::string & spec , std::size_t ignore_non_options ) : m_spec(spec) , m_args(args_in)
ggetopt.cpp	57	remove	G::GetOpt::GetOpt( const StringArray & args_in , const Options & spec , std::size_t ignore_non_options ) : m_spec(spec) , m_args(args_in)
ggetopt.cpp	64	remove	void G::GetOpt::reload( const StringArray & args_in , std::size_t ignore_non_options )
ggetopt.cpp	72	keep	void G::GetOpt::parseArgs( std::size_t ignore_non_options )
ggetopt.cpp	79	remove	bool G::GetOpt::addOptionsFromFile( std::size_t n , const StringArray & blocklist )
ggetopt.cpp	92	remove	void G::GetOpt::addOptionsFromFile( std::size_t n , const std::string & varkey , const std::string & varvalue )
ggetopt.cpp	108	keep	G::StringArray G::GetOpt::readOptionsFromFile( const Path & filename )
ggetopt.cpp	113	keep	void G::GetOpt::addOptionsFromFile( const Path & filename )
ggetopt.cpp	118	keep	const std::vector<G::Option> & G::GetOpt::options() const
ggetopt.cpp	123	remove	const G::OptionMap & G::GetOpt::map() const
ggetopt.cpp	128	remove	G::StringArray G::GetOpt::errorList() const
ggetopt.cpp	133	keep	bool G::GetOpt::contains( char c ) const
ggetopt.cpp	138	keep	bool G::GetOpt::contains( string_view name ) const
ggetopt.cpp	143	remove	std::size_t G::GetOpt::count( string_view name ) const
ggetopt.cpp	148	remove	std::string G::GetOpt::value( char c , string_view default_ ) const
ggetopt.cpp	154	keep	std::string G::GetOpt::value( string_view name , string_view default_ ) const
ggetopt.cpp	159	keep	G::optional<std::string> G::GetOpt::optional( string_view name ) const
ggetopt.cpp	164	keep	G::Arg G::GetOpt::args() const
ggetopt.cpp	169	keep	bool G::GetOpt::hasErrors() const
ggetopt.cpp	174	keep	void G::GetOpt::showErrors( std::ostream & stream ) const
ggetopt.cpp	179	keep	void G::GetOpt::showErrors( std::ostream & stream , const std::string & prefix_1 , const std::string & prefix_2 ) const
ggettext_none.cpp	24	keep	void G::gettext_init( const std::string & , const std::string & )
ggettext_none.cpp	28	keep	const char * G::gettext( const char * p ) noexcept
ghash.cpp	26	keep	std::string G::Hash::xor_( const std::string & s1 , const std::string & s2 )
ghash.cpp	43	keep	std::string G::Hash::ipad( std::size_t blocksize )
ghash.cpp	48	keep	std::string G::Hash::opad( std::size_t blocksize )
ghash.cpp	53	keep	std::string G::Hash::printable( const std::string & input )
ghostname_unix.cpp	27	keep	std::string G::hostname()
gidentity_unix.cpp	42	keep	G::Identity::Identity( uid_t uid , gid_t gid ) : m_uid(uid) , m_gid(gid)
gidentity_unix.cpp	48	keep	G::Identity::Identity() noexcept : // invalid() m_uid(static_cast<uid_t>(-1)) , m_gid(static_cast<gid_t>(-1))
gidentity_unix.cpp	54	keep	G::Identity::Identity( SignalSafe ) noexcept : // invalid() Identity()
gidentity_unix.cpp	59	keep	G::Identity::Identity( const std::string & name_in , const std::string & group ) : Identity()
gidentity_unix.cpp	70	keep	G::Identity G::Identity::effective() noexcept
gidentity_unix.cpp	75	keep	G::Identity G::Identity::real() noexcept
gidentity_unix.cpp	80	keep	G::Identity G::Identity::invalid() noexcept
gidentity_unix.cpp	85	remove	G::Identity G::Identity::invalid( SignalSafe safe ) noexcept
gidentity_unix.cpp	90	keep	G::Identity G::Identity::root() noexcept
gidentity_unix.cpp	95	remove	std::string G::Identity::str() const
gidentity_unix.cpp	102	keep	uid_t G::Identity::userid() const noexcept
gidentity_unix.cpp	107	keep	gid_t G::Identity::groupid() const noexcept
gidentity_unix.cpp	112	keep	bool G::Identity::isRoot() const noexcept
gidentity_unix.cpp	117	keep	bool G::Identity::operator==( const Identity & other ) const noexcept
gidentity_unix.cpp	122	keep	bool G::Identity::operator!=( const Identity & other ) const noexcept
gidentity_unix.cpp	127	remove	std::pair<G::Identity,std::string> G::Identity::lookup( const std::string & name_in )
gidentity_unix.cpp	136	keep	std::pair<G::Identity,std::string> G::Identity::lookup( const std::string & name_in , std::nothrow_t )
gidentity_unix.cpp	144	keep	gid_t G::Identity::lookupGroup( const std::string & group )
gidentity_unix.cpp	151	keep	bool G::Identity::match( std::pair<int,int> uid_range ) const
gidentity_unix.cpp	158	keep	bool G::IdentityImp::lookupUser( std::string & name , uid_t & uid , gid_t & gid )
gidentity_unix.cpp	202	keep	bool G::IdentityImp::lookupGroup( const std::string & group , gid_t & gid )
gidentity_unix.cpp	228	keep	int G::IdentityImp::sysconf_( int key )
glog.cpp	25	keep	G::Log::Log( Severity severity , const char * file , int line ) noexcept : m_severity(severity) , m_file(file) , m_line(line) , m_logstream(LogOutput::start(m_severity,m_file,m_line))
glog.cpp	34	keep	G::Log::~Log()
glog.cpp	40	keep	bool G::Log::at( Severity s ) noexcept
glog.cpp	49	keep	G::LogStream & G::Log::operator<<( const char * s ) noexcept
glog.cpp	56	remove	G::LogStream & G::Log::operator<<( const std::string & s ) noexcept
glogoutput.cpp	96	keep	G::LogOutput::LogOutput( const std::string & exename , const Config & config , const std::string & path ) : m_exename(exename) , m_config(config) , m_path(path)
glogoutput.cpp	110	remove	G::LogOutput::LogOutput( bool output_enabled_and_summary_info , bool verbose_info_and_debug , const std::string & path ) : m_path(path)
glogoutput.cpp	129	keep	G::LogOutput::Config G::LogOutput::config() const
glogoutput.cpp	134	keep	void G::LogOutput::configure( const Config & config )
glogoutput.cpp	139	keep	G::LogOutput::~LogOutput()
glogoutput.cpp	148	keep	G::LogOutput * G::LogOutput::instance() noexcept
glogoutput.cpp	153	keep	void G::LogOutput::context( std::string (*fn)(void *) , void * fn_arg ) noexcept
glogoutput.cpp	163	keep	void * G::LogOutput::contextarg() noexcept
glogoutput.cpp	169	keep	bool G::LogOutput::at( Log::Severity severity ) const noexcept
glogoutput.cpp	183	keep	G::LogStream & G::LogOutput::start( Log::Severity severity , const char * , int ) noexcept
glogoutput.cpp	198	keep	void G::LogOutput::output( LogStream & s ) noexcept
glogoutput.cpp	210	keep	bool G::LogOutput::updatePath( const std::string & path_in , std::string & path_out ) const
glogoutput.cpp	222	keep	std::string G::LogOutput::makePath( const std::string & path_in ) const
glogoutput.cpp	240	keep	void G::LogOutput::open( const std::string & path , bool do_throw )
glogoutput.cpp	265	keep	G::LogStream & G::LogOutput::start( Log::Severity severity )
glogoutput.cpp	290	keep	void G::LogOutput::output( LogStream & logstream , int )
glogoutput.cpp	357	keep	bool G::LogOutput::updateTime()
glogoutput.cpp	377	keep	void G::LogOutput::appendTimeTo( LogStream & logstream )
glogoutput.cpp	387	keep	const char * G::LogOutput::basename( const char * file ) noexcept
glogoutput.cpp	395	keep	G::string_view G::LogOutput::levelString( Log::Severity s ) noexcept
glogoutput.cpp	410	keep	G::LogOutput::Config::Config()
glogoutput.cpp	413	keep	G::LogOutput::Config & G::LogOutput::Config::set_output_enabled( bool value )
glogoutput.cpp	419	keep	G::LogOutput::Config & G::LogOutput::Config::set_summary_info( bool value )
glogoutput.cpp	425	keep	G::LogOutput::Config & G::LogOutput::Config::set_verbose_info( bool value )
glogoutput.cpp	431	keep	G::LogOutput::Config & G::LogOutput::Config::set_more_verbose_info( bool value )
glogoutput.cpp	437	keep	G::LogOutput::Config & G::LogOutput::Config::set_debug( bool value )
glogoutput.cpp	443	keep	G::LogOutput::Config & G::LogOutput::Config::set_with_level( bool value )
glogoutput.cpp	449	keep	G::LogOutput::Config & G::LogOutput::Config::set_with_timestamp( bool value )
glogoutput.cpp	455	keep	G::LogOutput::Config & G::LogOutput::Config::set_with_context( bool value )
glogoutput.cpp	461	keep	G::LogOutput::Config & G::LogOutput::Config::set_strip( bool value )
glogoutput.cpp	467	keep	G::LogOutput::Config & G::LogOutput::Config::set_quiet_stderr( bool value )
glogoutput.cpp	473	keep	G::LogOutput::Config & G::LogOutput::Config::set_use_syslog( bool value )
glogoutput.cpp	479	keep	G::LogOutput::Config & G::LogOutput::Config::set_allow_bad_syslog( bool value )
glogoutput.cpp	485	keep	G::LogOutput::Config & G::LogOutput::Config::set_facility( SyslogFacility facility )
glogoutput.cpp	491	keep	G::LogOutput::Config & G::LogOutput::Config::set_umask( Process::Umask::Mode umask )
glogoutput_unix.cpp	62	keep	void G::LogOutput::osoutput( int fd , G::Log::Severity severity , char * message , std::size_t n )
glogoutput_unix.cpp	84	keep	void G::LogOutput::osinit()
glogoutput_unix.cpp	91	remove	void G::LogOutput::register_( const std::string & )
glogoutput_unix.cpp	95	keep	void G::LogOutput::oscleanup() const noexcept
glogstream.cpp	25	keep	G::LogStream & G::operator<<( LogStream & s , const std::string & value ) noexcept
glogstream.cpp	37	keep	G::LogStream & G::operator<<( LogStream & s , const char * value ) noexcept
glogstream.cpp	49	keep	G::LogStream & G::operator<<( LogStream & s , char value ) noexcept
glogstream.cpp	61	remove	G::LogStream & G::operator<<( LogStream & s , unsigned char value ) noexcept
glogstream.cpp	73	keep	G::LogStream & G::operator<<( LogStream & s , int value ) noexcept
glogstream.cpp	85	keep	G::LogStream & G::operator<<( LogStream & s , unsigned int value ) noexcept
glogstream.cpp	97	keep	G::LogStream & G::operator<<( LogStream & s , long value ) noexcept
glogstream.cpp	109	keep	G::LogStream & G::operator<<( LogStream & s , unsigned long value ) noexcept
gmd5.cpp	185	keep	G::Md5Imp::digest::digest() : digest_state{}
gmd5.cpp	191	keep	G::Md5Imp::digest::digest( const std::string & s ) : digest_state{}
gmd5.cpp	203	keep	G::Md5Imp::digest::digest( string_view sv ) : digest_state{}
gmd5.cpp	215	keep	G::Md5Imp::digest::digest( digest_state d_in ) : digest_state{}
gmd5.cpp	224	keep	void G::Md5Imp::digest::init()
gmd5.cpp	232	keep	G::Md5Imp::digest::digest_state G::Md5Imp::digest::state() const
gmd5.cpp	246	keep	void G::Md5Imp::digest::add( const block & blk )
gmd5.cpp	256	keep	void G::Md5Imp::digest::add( const digest & other )
gmd5.cpp	264	keep	void G::Md5Imp::digest::round1( const block & m )
gmd5.cpp	273	keep	void G::Md5Imp::digest::round2( const block & m )
gmd5.cpp	282	keep	void G::Md5Imp::digest::round3( const block & m )
gmd5.cpp	291	keep	void G::Md5Imp::digest::round4( const block & m )
gmd5.cpp	300	keep	void G::Md5Imp::digest::operator()( const block & m , aux_fn_t aux , Permutation p , small_t k , small_t s , small_t i )
gmd5.cpp	309	keep	G::Md5Imp::big_t G::Md5Imp::digest::op( const block & m , aux_fn_t aux , big_t a , big_t b , big_t c , big_t d , small_t k , small_t s , small_t i )
gmd5.cpp	315	keep	G::Md5Imp::big_t G::Md5Imp::digest::rot32( small_t places , big_t n )
gmd5.cpp	323	keep	G::Md5Imp::big_t G::Md5Imp::digest::F( big_t x , big_t y , big_t z )
gmd5.cpp	328	keep	G::Md5Imp::big_t G::Md5Imp::digest::G( big_t x , big_t y , big_t z )
gmd5.cpp	333	keep	G::Md5Imp::big_t G::Md5Imp::digest::H( big_t x , big_t y , big_t z )
gmd5.cpp	338	keep	G::Md5Imp::big_t G::Md5Imp::digest::I( big_t x , big_t y , big_t z )
gmd5.cpp	343	keep	G::Md5Imp::big_t G::Md5Imp::digest::T( small_t i )
gmd5.cpp	418	keep	std::string G::Md5Imp::format::encode( const digest_state & state )
gmd5.cpp	424	keep	std::string G::Md5Imp::format::encode( const digest_state & state , big_t n )
gmd5.cpp	430	keep	G::Md5Imp::digest_state G::Md5Imp::format::decode( const std::string & str , small_t & n )
gmd5.cpp	444	keep	G::Md5Imp::block::block( const char * data_p , std::size_t data_n , small_t block_in , big_t end_value ) : m_p(data_p) , m_n(data_n) , m_block(block_in) , m_end_value(end_value)
gmd5.cpp	452	keep	G::Md5Imp::big_t G::Md5Imp::block::end( small_t length )
gmd5.cpp	459	keep	G::Md5Imp::small_t G::Md5Imp::block::rounded( small_t raw_byte_count )
gmd5.cpp	465	keep	G::Md5Imp::small_t G::Md5Imp::block::blocks( small_t raw_byte_count )
gmd5.cpp	471	keep	G::Md5Imp::big_t G::Md5Imp::block::X( small_t dword_index ) const
gmd5.cpp	481	keep	G::Md5Imp::small_t G::Md5Imp::block::x( small_t i ) const
gmd5.cpp	511	keep	G::Md5::Md5() : m_d(Md5Imp::digest().state())
gmd5.cpp	516	keep	G::Md5::Md5( const std::string & str_state ) : m_d(Md5Imp::format::decode(str_state,m_n))
gmd5.cpp	522	keep	std::string G::Md5::state() const
gmd5.cpp	528	keep	void G::Md5::add( const char * data_p , std::size_t data_n )
gmd5.cpp	535	keep	void G::Md5::add( const std::string & data )
gmd5.cpp	542	keep	void G::Md5::consume()
gmd5.cpp	555	keep	std::string G::Md5::value()
gmd5.cpp	565	remove	std::string G::Md5::digest( const std::string & input )
gmd5.cpp	571	remove	std::string G::Md5::digest( string_view input )
gmd5.cpp	577	keep	std::string G::Md5::digest( const std::string & input_1 , const std::string & input_2 )
gmd5.cpp	585	keep	std::string G::Md5::digest( G::string_view input_1 , G::string_view input_2 )
gmd5.cpp	593	keep	std::string G::Md5::digest2( const std::string & input_1 , const std::string & input_2 )
gmd5.cpp	598	keep	std::string G::Md5::predigest( const std::string & input )
gmd5.cpp	606	keep	std::string G::Md5::postdigest( const std::string & state_pair , const std::string & message )
gmd5.cpp	624	keep	std::size_t G::Md5::blocksize()
gmd5.cpp	629	keep	std::size_t G::Md5::valuesize()
gmd5.cpp	634	remove	std::size_t G::Md5::statesize()
gmsg_unix.cpp	45	keep	ssize_t G::Msg::send( int fd , const void * buffer , std::size_t size , int flags ) noexcept
gmsg_unix.cpp	50	keep	ssize_t G::Msg::sendto( int fd , const void * buffer , std::size_t size , int flags , const sockaddr * address_p , socklen_t address_n ) noexcept
gmsg_unix.cpp	57	keep	ssize_t G::Msg::sendto( int fd , const std::vector<string_view> & data , int flags , const sockaddr * address_p , socklen_t address_n )
gmsg_unix.cpp	93	remove	ssize_t G::Msg::sendto( int fd , const void * buffer , std::size_t size , int flags , const sockaddr * address_p , socklen_t address_n , int fd_to_send )
gmsg_unix.cpp	109	keep	ssize_t G::MsgImp::sendmsg( int fd , const ::iovec * iovec_p , std::size_t iovec_n , int flags , const sockaddr * address_p , socklen_t address_n , int fd_to_send ) noexcept
gmsg_unix.cpp	141	keep	ssize_t G::Msg::recv( int fd , void * buffer , std::size_t size , int flags ) noexcept
gmsg_unix.cpp	146	keep	ssize_t G::Msg::recvfrom( int fd , void * buffer , std::size_t size , int flags , sockaddr * address_p , socklen_t * address_np ) noexcept
gmsg_unix.cpp	152	remove	ssize_t G::Msg::recvfrom( int fd , void * buffer , std::size_t size , int flags , sockaddr * address_p , socklen_t * address_np , int * fd_received_p )
gmsg_unix.cpp	191	remove	bool G::Msg::fatal( int error ) noexcept
gmsg_unix.cpp	202	remove	template <typename Tin, typename Tout, typename Fn1, typename Fn2> std::size_t G::MsgImp::copy( Tin in_begin , Tin in_end , Tout out_begin , Tout /*out_end*/ , Fn1 fn_convert , Fn2 fn_empty )
gnewprocess_unix.cpp	107	keep	G::NewProcess::NewProcess( const Path & exe , const StringArray & args , const Config & config ) : m_imp(std::make_unique<NewProcessImp>(exe,args,config))
gnewprocess_unix.cpp	112	keep	G::NewProcess::~NewProcess()
gnewprocess_unix.cpp	115	keep	G::NewProcessWaitable & G::NewProcess::waitable() noexcept
gnewprocess_unix.cpp	120	keep	std::pair<bool,pid_t> G::NewProcess::fork()
gnewprocess_unix.cpp	125	keep	int G::NewProcess::id() const noexcept
gnewprocess_unix.cpp	130	keep	void G::NewProcess::kill( bool yield ) noexcept
gnewprocess_unix.cpp	143	keep	G::NewProcessImp::NewProcessImp( const Path & exe , const StringArray & args , const NewProcess::Config & config )
gnewprocess_unix.cpp	221	keep	std::pair<bool,pid_t> G::NewProcessImp::fork()
gnewprocess_unix.cpp	233	keep	void G::NewProcessImp::printError( int stdxxx , const std::string & s )
gnewprocess_unix.cpp	240	keep	int G::NewProcessImp::run( const G::Path & exe , const StringArray & args , const Environment & env , bool strict_exe )
gnewprocess_unix.cpp	283	keep	int G::NewProcessImp::id() const noexcept
gnewprocess_unix.cpp	288	keep	G::NewProcessWaitable & G::NewProcessImp::waitable() noexcept
gnewprocess_unix.cpp	293	keep	void G::NewProcessImp::kill() noexcept
gnewprocess_unix.cpp	303	keep	std::string G::NewProcessImp::execErrorFormat( const std::string & format , int errno_ )
gnewprocess_unix.cpp	311	keep	bool G::NewProcessImp::duplicate( Fd fd , int fd_std )
gnewprocess_unix.cpp	336	keep	G::Pipe::Pipe()
gnewprocess_unix.cpp	343	keep	G::Pipe::~Pipe()
gnewprocess_unix.cpp	349	keep	void G::Pipe::inChild()
gnewprocess_unix.cpp	356	keep	void G::Pipe::inParent()
gnewprocess_unix.cpp	363	keep	int G::Pipe::fd() const
gnewprocess_unix.cpp	368	keep	void G::Pipe::dupTo( int fd_std )
gnewprocess_unix.cpp	379	keep	G::NewProcessWaitable::NewProcessWaitable() : m_test_mode(G::Test::enabled("waitpid-slow"))
gnewprocess_unix.cpp	384	remove	G::NewProcessWaitable::NewProcessWaitable( pid_t pid , int fd ) : m_buffer(1024U) , m_pid(pid) , m_fd(fd) , m_test_mode(G::Test::enabled("waitpid-slow"))
gnewprocess_unix.cpp	392	keep	void G::NewProcessWaitable::assign( pid_t pid , int fd )
gnewprocess_unix.cpp	405	remove	void G::NewProcessWaitable::waitp( std::promise<std::pair<int,std::string>> p ) noexcept
gnewprocess_unix.cpp	419	keep	G::NewProcessWaitable & G::NewProcessWaitable::wait()
gnewprocess_unix.cpp	475	keep	int G::NewProcessWaitable::get() const
gnewprocess_unix.cpp	509	keep	int G::NewProcessWaitable::get( std::nothrow_t , int ec ) const noexcept
gnewprocess_unix.cpp	524	keep	std::string G::NewProcessWaitable::output() const
goption.cpp	24	keep	G::Option::Option( char c_in , const std::string & name_in , const std::string & description_in , const std::string & description_extra_in , Multiplicity value_multiplicity_in , const std::string & vd_in , unsigned int level_in ) : c(c_in) , name(name_in) , description(description_in) , description_extra(description_extra_in) , value_multiplicity(value_multiplicity_in) , hidden(description_in.empty()||level_in==0U) , value_description(vd_in) , level(level_in) , main_tag(0U) , tag_bits(0U)
goption.cpp	40	keep	G::Option::Option( char c_in , const char * name_in , const char * description_in , const char * description_extra_in , Multiplicity value_multiplicity_in , const char * vd_in , unsigned int level_in , unsigned int main_tag_in , unsigned int tag_bits_in ) : c(c_in) , name(name_in) , description(description_in) , description_extra(description_extra_in) , value_multiplicity(value_multiplicity_in) , hidden(*description_in=='\0'||level_in==0U) , value_description(vd_in) , level(level_in) , main_tag(main_tag_in) , tag_bits(main_tag_in|tag_bits_in)
goption.cpp	57	keep	G::Option::Multiplicity G::Option::decode( const std::string & s )
goptionmap.cpp	26	keep	void G::OptionMap::insert( const Map::value_type & value )
goptionmap.cpp	31	keep	G::OptionMap::Range G::OptionMap::findRange( string_view key ) const
goptionmap.cpp	36	keep	G::OptionMap::Map::iterator G::OptionMap::findFirst( string_view key )
goptionmap.cpp	41	keep	G::OptionMap::const_iterator G::OptionMap::find( string_view key ) const
goptionmap.cpp	47	remove	void G::OptionMap::replace( string_view key , const std::string & value )
goptionmap.cpp	55	keep	void G::OptionMap::increment( string_view key )
goptionmap.cpp	62	keep	G::OptionMap::const_iterator G::OptionMap::begin() const
goptionmap.cpp	67	remove	G::OptionMap::const_iterator G::OptionMap::cbegin() const
goptionmap.cpp	72	keep	G::OptionMap::const_iterator G::OptionMap::end() const
goptionmap.cpp	77	remove	G::OptionMap::const_iterator G::OptionMap::cend() const
goptionmap.cpp	82	keep	void G::OptionMap::clear()
goptionmap.cpp	87	keep	bool G::OptionMap::contains( string_view key ) const
goptionmap.cpp	99	keep	bool G::OptionMap::contains( const char * key ) const
goptionmap.cpp	104	keep	bool G::OptionMap::contains( const std::string & key ) const
goptionmap.cpp	109	keep	std::size_t G::OptionMap::count( string_view key ) const
goptionmap.cpp	118	keep	std::string G::OptionMap::value( string_view key , string_view default_ ) const
goptionmap.cpp	127	keep	std::string G::OptionMap::join( Map::const_iterator p , Map::const_iterator end , string_view off_value ) const
goptionmap.cpp	143	keep	unsigned int G::OptionMap::number( string_view key , unsigned int default_ ) const
goptionparser.cpp	32	remove	G::OptionParser::OptionParser( const Options & spec , OptionMap & values_out , StringArray & errors_out ) : m_spec(spec) , m_map(values_out) , m_errors(&errors_out)
goptionparser.cpp	39	keep	G::OptionParser::OptionParser( const Options & spec , OptionMap & values_out , StringArray * errors_out ) : m_spec(spec) , m_map(values_out) , m_errors(errors_out)
goptionparser.cpp	46	keep	G::StringArray G::OptionParser::parse( const StringArray & args_in , const Options & spec , OptionMap & map_out , StringArray * errors_out , std::size_t start_position , std::size_t ignore_non_options , std::function<std::string(const std::string&,bool)> callback_fn )
goptionparser.cpp	54	keep	G::StringArray G::OptionParser::parse( const StringArray & args_in , std::size_t start , std::size_t ignore_non_options , std::function<std::string(const std::string&,bool)> callback_fn )
goptionparser.cpp	134	keep	void G::OptionParser::processOptionOn( const std::string & name )
goptionparser.cpp	148	keep	void G::OptionParser::processOptionOff( const std::string & name )
goptionparser.cpp	162	keep	void G::OptionParser::processOption( const std::string & name , const std::string & value , bool fail_if_dubious_value )
goptionparser.cpp	181	keep	void G::OptionParser::processOptionOn( char c )
goptionparser.cpp	196	keep	void G::OptionParser::processOption( char c , const std::string & value )
goptionparser.cpp	213	keep	std::string::size_type G::OptionParser::eqPos( const std::string & s )
goptionparser.cpp	219	keep	std::string G::OptionParser::eqValue( const std::string & s , std::string::size_type pos )
goptionparser.cpp	224	keep	bool G::OptionParser::isOldOption( const std::string & arg )
goptionparser.cpp	231	keep	bool G::OptionParser::isNewOption( const std::string & arg )
goptionparser.cpp	236	keep	bool G::OptionParser::isAnOptionSet( const std::string & arg )
goptionparser.cpp	241	keep	void G::OptionParser::errorDubiousValue( const std::string & name , const std::string & value )
goptionparser.cpp	251	keep	void G::OptionParser::errorDuplicate( char c )
goptionparser.cpp	256	keep	void G::OptionParser::errorDuplicate( const std::string & name )
goptionparser.cpp	261	remove	void G::OptionParser::errorExtraValue( char c , const std::string & )
goptionparser.cpp	266	keep	void G::OptionParser::errorExtraValue( const std::string & name , const std::string & value )
goptionparser.cpp	271	keep	void G::OptionParser::errorNoValue( char c )
goptionparser.cpp	276	keep	void G::OptionParser::errorNoValue( const std::string & name )
goptionparser.cpp	281	keep	void G::OptionParser::errorUnknownOption( char c )
goptionparser.cpp	286	keep	void G::OptionParser::errorUnknownOption( const std::string & name )
goptionparser.cpp	291	keep	void G::OptionParser::errorConflict( const std::string & name )
goptionparser.cpp	296	keep	void G::OptionParser::error( const std::string & s )
goptionparser.cpp	302	keep	bool G::OptionParser::haveSeenOn( const std::string & name ) const
goptionparser.cpp	308	keep	bool G::OptionParser::haveSeenOff( const std::string & name ) const
goptionparser.cpp	314	keep	bool G::OptionParser::haveSeen( const std::string & name ) const
goptionparser.cpp	319	keep	bool G::OptionParser::haveSeenSame( const std::string & name , const std::string & value ) const
goptionparser.cpp	325	keep	std::size_t G::OptionParser::valueCount( const std::string & s )
goptionreader.cpp	30	keep	G::StringArray G::OptionReader::read( const Path & filename , std::size_t limit )
goptionreader.cpp	37	keep	std::size_t G::OptionReader::add( StringArray & out , const Path & filename , std::size_t limit )
goptions.cpp	27	keep	G::Options::Options()
goptions.cpp	30	keep	G::Options::Options( const std::string & spec , char sep_major , char sep_minor , char escape )
goptions.cpp	35	keep	void G::Options::parseSpec( const std::string & spec , char sep_major , char sep_minor , char escape )
goptions.cpp	69	keep	void G::Options::add( Options & options , char c , const char * name , const char * text , const char * more , Option::Multiplicity m , const char * argname , unsigned int level , unsigned int main_tag , unsigned int tag_bits )
goptions.cpp	76	keep	void G::Options::add( const Option & opt , char sep , char escape )
goptions.cpp	81	keep	void G::Options::addOption( Option opt , char sep , char escape )
goptions.cpp	111	keep	bool G::Options::defaulting( const std::string & name ) const
goptions.cpp	117	keep	bool G::Options::valued( char c ) const
goptions.cpp	122	keep	bool G::Options::valued( const std::string & name ) const
goptions.cpp	128	keep	bool G::Options::unvalued( const std::string & name ) const
goptions.cpp	133	keep	bool G::Options::multivalued( char c ) const
goptions.cpp	138	keep	bool G::Options::multivalued( const std::string & name ) const
goptions.cpp	144	keep	bool G::Options::visible( const std::string & name , unsigned int level , bool level_exact ) const
goptions.cpp	150	remove	bool G::Options::visible( const std::string & name ) const
goptions.cpp	155	keep	bool G::Options::valid( const std::string & name ) const
goptions.cpp	160	keep	std::string G::Options::lookup( char c ) const
goptions.cpp	170	keep	const G::Option * G::Options::find( const std::string & name ) const
goptions.cpp	180	keep	const std::vector<G::Option> & G::Options::list() const
goptionsusage.cpp	32	keep	G::OptionsUsage::OptionsUsage( const std::vector<Option> & options , std::function<bool(const Option&,const Option&)> sort_fn ) : m_options(options)
goptionsusage.cpp	49	keep	std::string G::OptionsUsage::summary( const Config & config_in , const std::string & exe , const std::string & args ) const
goptionsusage.cpp	69	keep	std::string G::OptionsUsage::help( const Config & config_in , bool * overflow_p ) const
goptionsusage.cpp	90	keep	void G::OptionsUsage::output( const Config & config , std::ostream & stream , const std::string & exe , const std::string & args ) const
goptionsusage.cpp	99	keep	std::string G::OptionsUsage::summaryPartOne( const Config & config ) const
goptionsusage.cpp	120	keep	std::string G::OptionsUsage::summaryPartTwo( const Config & config ) const
goptionsusage.cpp	151	keep	std::string G::OptionsUsage::helpImp( const Config & config , bool overflow , bool & overflow_out ) const
goptionsusage.cpp	164	keep	std::string G::OptionsUsage::optionHelp( const Config & config , const Option & option , bool overflow , bool & overflow_out ) const
goptionsusage.cpp	190	keep	std::string G::OptionsUsage::helpWrap( const Config & config , const std::string & syntax_simple , const std::string & syntax_aligned , const std::string & separator , const std::string & description , bool overflow_in , bool & overflow_out ) const
goptionsusage.cpp	232	keep	std::string G::OptionsUsage::helpSyntax( const Option & option , bool with_non_space , char non_space ) const
goptionsusage.cpp	264	keep	std::string G::OptionsUsage::helpDescription( const Option & option , bool config_extra ) const
goptionsusage.cpp	272	keep	std::string G::OptionsUsage::helpSeparator( const Config & config , std::size_t syntax_length ) const
goptionsusage.cpp	282	keep	std::string G::OptionsUsage::helpPadding( const Config & config ) const
goptionsusage.cpp	288	keep	G::OptionsUsage::SortFn G::OptionsUsage::sort()
goptionsusage.cpp	298	keep	G::OptionsUsage::Config & G::OptionsUsage::Config::setDefaults()
goptionsusage.cpp	307	keep	G::OptionsUsage::Config & G::OptionsUsage::Config::setWidthsWrtMargin()
gpam_linux.cpp	101	keep	G::PamImp::PamImp( G::Pam & pam , const std::string & application , const std::string & user , bool silent ) : m_pam(pam) , m_magic(MAGIC) , m_rc(PAM_SUCCESS) , m_hpam(nullptr) , m_conv{} , m_silent(silent)
gpam_linux.cpp	130	keep	G::PamImp::~PamImp()
gpam_linux.cpp	143	keep	G::PamImp::Handle G::PamImp::hpam() const
gpam_linux.cpp	148	keep	bool G::PamImp::silent() const
gpam_linux.cpp	153	keep	std::string G::PamImp::decodeStyle( int pam_style )
gpam_linux.cpp	163	keep	bool G::PamImp::authenticate( bool require_token )
gpam_linux.cpp	178	keep	std::string G::PamImp::name() const
gpam_linux.cpp	187	keep	void G::PamImp::setCredentials( int flag )
gpam_linux.cpp	196	keep	void G::PamImp::checkAccount( bool require_token )
gpam_linux.cpp	205	keep	void G::PamImp::release( struct pam_response * rsp , std::size_t n )
gpam_linux.cpp	218	keep	int G::PamImp::converseCallback( int n_in , G_PAM_CONST struct pam_message ** in , struct pam_response ** out , void * vp )
gpam_linux.cpp	303	keep	void G::PamImp::delayCallback( int status , unsigned delay_usec , void * pam_vp )
gpam_linux.cpp	324	keep	void G::PamImp::openSession()
gpam_linux.cpp	332	keep	void G::PamImp::closeSession()
gpam_linux.cpp	340	keep	bool G::PamImp::success( int rc )
gpam_linux.cpp	345	keep	void G::PamImp::check( const std::string & op , int rc ) const
gpam_linux.cpp	351	keep	char * G::PamImp::strdup_( const char * p )
gpam_linux.cpp	362	keep	G::Pam::Pam( const std::string & application , const std::string & user , bool silent ) : m_imp(std::make_unique<PamImp>(*this,application,user,silent))
gpam_linux.cpp	367	keep	G::Pam::~Pam()
gpam_linux.cpp	370	keep	bool G::Pam::authenticate( bool require_token )
gpam_linux.cpp	376	remove	void G::Pam::checkAccount( bool require_token )
gpam_linux.cpp	382	remove	void G::Pam::establishCredentials()
gpam_linux.cpp	388	remove	void G::Pam::openSession()
gpam_linux.cpp	394	remove	void G::Pam::closeSession()
gpam_linux.cpp	400	remove	void G::Pam::deleteCredentials()
gpam_linux.cpp	405	remove	void G::Pam::reinitialiseCredentials()
gpam_linux.cpp	410	remove	void G::Pam::refreshCredentials()
gpam_linux.cpp	415	remove	void G::Pam::delay( unsigned int usec )
gpam_linux.cpp	429	remove	std::string G::Pam::name() const
gpath.cpp	42	keep	template <> struct G::PathImp::PathPlatform<G::PathImp::Platform::Windows>
gpath.cpp	251	remove	void G::Path::setPosixStyle()
gpath.cpp	256	remove	void G::Path::setWindowsStyle()
gpath.cpp	261	keep	G::Path::Path()
gpath.cpp	264	keep	G::Path::Path( const std::string & path ) : m_str(path)
gpath.cpp	270	keep	G::Path::Path( const char * path ) : m_str(path)
gpath.cpp	276	keep	G::Path::Path( string_view path ) : m_str(sv_to_string(path))
gpath.cpp	282	keep	G::Path::Path( const Path & path , const std::string & tail ) : m_str(path.m_str)
gpath.cpp	289	remove	G::Path::Path( const Path & path , const std::string & tail_1 , const std::string & tail_2 ) : m_str(path.m_str)
gpath.cpp	297	remove	G::Path::Path( const Path & path , const std::string & tail_1 , const std::string & tail_2 , const std::string & tail_3 ) : m_str(path.m_str)
gpath.cpp	307	keep	G::Path::Path( std::initializer_list<std::string> args )
gpath.cpp	318	keep	G::Path G::Path::nullDevice()
gpath.cpp	323	keep	bool G::Path::simple() const
gpath.cpp	328	keep	bool G::Path::isAbsolute() const noexcept
gpath.cpp	333	keep	bool G::Path::isRelative() const noexcept
gpath.cpp	338	keep	std::string G::Path::basename() const
gpath.cpp	346	keep	G::Path G::Path::dirname() const
gpath.cpp	356	keep	G::Path G::Path::withoutExtension() const
gpath.cpp	374	keep	G::Path G::Path::withExtension( const std::string & ext ) const
gpath.cpp	385	remove	G::Path G::Path::withoutRoot() const
gpath.cpp	401	keep	G::Path & G::Path::pathAppend( const std::string & tail )
gpath.cpp	418	keep	std::string G::Path::extension() const
gpath.cpp	427	keep	G::StringArray G::Path::split() const
gpath.cpp	435	keep	G::Path G::Path::join( const G::StringArray & a )
gpath.cpp	441	keep	G::Path G::Path::join( const G::Path & p1 , const G::Path & p2 )
gpath.cpp	460	keep	G::Path G::Path::collapsed() const
gpath.cpp	497	keep	bool G::Path::operator==( const Path & other ) const
gpath.cpp	502	keep	bool G::Path::operator!=( const Path & other ) const
gpath.cpp	507	keep	void G::Path::swap( Path & other ) noexcept
gpath.cpp	513	remove	bool G::Path::less( const G::Path & a , const G::Path & b )
gpath.cpp	523	remove	G::Path G::Path::difference( const G::Path & root_in , const G::Path & path_in )
gpidfile.cpp	33	remove	G::PidFile::PidFile()
gpidfile.cpp	36	keep	G::PidFile::PidFile( const Path & path ) : m_path((!path.empty()&&path.isRelative())?Path::join(Process::cwd(),path):path)
gpidfile.cpp	41	keep	G::PidFile::~PidFile()
gpidfile.cpp	54	keep	void G::PidFile::mkdir()
gpidfile.cpp	60	keep	void G::PidFile::create( const Path & pid_file )
gpidfile.cpp	89	keep	G::Process::Id G::PidFile::read( SignalSafe , const char * path ) noexcept
gpidfile.cpp	107	keep	bool G::PidFile::cleanup( SignalSafe safe , const char * path ) noexcept
gpidfile.cpp	127	keep	void G::PidFile::commit()
gpidfile.cpp	136	keep	bool G::PidFile::committed() const
gpidfile.cpp	141	keep	G::Path G::PidFile::path() const
gprocess_unix.cpp	73	keep	void G::Process::cd( const Path & dir )
gprocess_unix.cpp	79	keep	bool G::Process::cd( const Path & dir , std::nothrow_t )
gprocess_unix.cpp	84	keep	void G::Process::closeStderr()
gprocess_unix.cpp	89	keep	void G::Process::closeFiles( bool keep_stderr )
gprocess_unix.cpp	102	keep	void G::Process::closeOtherFiles( int fd_keep )
gprocess_unix.cpp	119	keep	int G::Process::errno_( const SignalSafe & ) noexcept
gprocess_unix.cpp	124	keep	void G::Process::errno_( int e_new ) noexcept
gprocess_unix.cpp	129	keep	int G::Process::errno_( const SignalSafe & , int e_new ) noexcept
gprocess_unix.cpp	136	keep	std::string G::Process::strerror( int errno_ )
gprocess_unix.cpp	144	keep	void G::Process::beSpecial( Identity special_identity , bool change_group )
gprocess_unix.cpp	149	keep	void G::Process::beSpecialForExit( SignalSafe , Identity special_identity ) noexcept
gprocess_unix.cpp	154	keep	std::pair<G::Identity,G::Identity> G::Process::beOrdinaryAtStartup( const std::string & ordinary_name , bool change_group )
gprocess_unix.cpp	173	keep	void G::Process::beOrdinary( Identity ordinary_id , bool change_group )
gprocess_unix.cpp	178	keep	void G::Process::beOrdinaryForExec( Identity run_as_id ) noexcept
gprocess_unix.cpp	183	remove	void G::Process::setEffectiveUser( Identity id )
gprocess_unix.cpp	188	remove	void G::Process::setEffectiveGroup( Identity id )
gprocess_unix.cpp	193	keep	std::string G::Process::cwd( bool no_throw )
gprocess_unix.cpp	238	keep	std::string G::Process::exe()
gprocess_unix.cpp	251	keep	G::Process::Id::Id() noexcept : m_pid(::getpid())
gprocess_unix.cpp	256	keep	std::string G::Process::Id::str() const
gprocess_unix.cpp	263	remove	bool G::Process::Id::operator==( const Id & other ) const noexcept
gprocess_unix.cpp	268	keep	bool G::Process::Id::operator!=( const Id & other ) const noexcept
gprocess_unix.cpp	275	keep	void G::Process::UmaskImp::set( mode_t mode ) noexcept
gprocess_unix.cpp	280	keep	mode_t G::Process::UmaskImp::set( Umask::Mode mode ) noexcept
gprocess_unix.cpp	302	keep	G::Process::Umask::Umask( Mode mode ) : m_imp(std::make_unique<UmaskImp>())
gprocess_unix.cpp	308	keep	G::Process::Umask::~Umask()
gprocess_unix.cpp	313	keep	void G::Process::Umask::set( Mode mode )
gprocess_unix.cpp	318	remove	void G::Process::Umask::tightenOther()
gprocess_unix.cpp	323	remove	void G::Process::Umask::loosenGroup()
gprocess_unix.cpp	330	keep	void G::ProcessImp::noCloseOnExec( int fd ) noexcept
gprocess_unix.cpp	335	keep	void G::ProcessImp::reopen( int fd , int mode )
gprocess_unix.cpp	343	remove	mode_t G::ProcessImp::umaskValue( Process::Umask::Mode mode )
gprocess_unix.cpp	353	keep	bool G::ProcessImp::readlink_( string_view path , std::string & value )
gprocess_unix.cpp	362	keep	G::Identity G::ProcessImp::beOrdinary( Identity nobody_id , bool change_group )
gprocess_unix.cpp	398	keep	void G::ProcessImp::beOrdinaryForExec( Identity run_as_id ) noexcept
gprocess_unix.cpp	410	keep	void G::ProcessImp::beSpecial( Identity special_identity , bool change_group )
gprocess_unix.cpp	417	keep	void G::ProcessImp::beSpecialForExit( SignalSafe , Identity special_identity ) noexcept
gprocess_unix.cpp	424	keep	void G::ProcessImp::revokeExtraGroups()
gprocess_unix.cpp	434	keep	bool G::ProcessImp::setRealUser( Identity id , std::nothrow_t ) noexcept
gprocess_unix.cpp	439	keep	void G::ProcessImp::setEffectiveUser( Identity id )
gprocess_unix.cpp	448	keep	bool G::ProcessImp::setEffectiveUser( Identity id , std::nothrow_t ) noexcept
gprocess_unix.cpp	453	keep	bool G::ProcessImp::setRealGroup( Identity id , std::nothrow_t ) noexcept
gprocess_unix.cpp	458	keep	void G::ProcessImp::setEffectiveGroup( Identity id )
gprocess_unix.cpp	467	keep	bool G::ProcessImp::setEffectiveGroup( Identity id , std::nothrow_t ) noexcept
gprocess_unix.cpp	472	keep	void G::ProcessImp::throwError()
grandom.cpp	28	keep	unsigned int G::Random::rand( unsigned int start , unsigned int end )
groot.cpp	35	keep	G::Root::Root() : m_change_group(!m_fixed_group)
groot.cpp	46	keep	G::Root::Root( bool change_group ) : m_change_group(m_fixed_group?false:change_group)
groot.cpp	57	keep	G::Root::~Root() // NOLINT bugprone-exception-escape
groot.cpp	68	keep	void G::Root::atExit() noexcept
groot.cpp	74	keep	void G::Root::atExit( SignalSafe safe ) noexcept
groot.cpp	80	keep	void G::Root::init( const std::string & nobody , bool fixed_group )
groot.cpp	89	keep	G::Identity G::Root::nobody()
groot.cpp	94	keep	void G::Root::check()
gstatemachine.cpp	25	keep	void G::StateMachineImp::throwError()
gstr.cpp	77	keep	bool G::StrImp::allOf( string_view s , bool (*fn)(char) ) noexcept
gstr.cpp	82	remove	std::string G::Str::escaped( string_view s_in )
gstr.cpp	90	keep	std::string G::Str::escaped( string_view s_in , char c_escape , string_view specials_in , string_view specials_out )
gstr.cpp	98	keep	void G::Str::escape( std::string & s , char c_escape , string_view specials_in , string_view specials_out )
gstr.cpp	121	keep	void G::Str::escape( std::string & s )
gstr.cpp	126	keep	std::string G::Str::dequote( const std::string & s , char qq , char esc , string_view ws , string_view nbws )
gstr.cpp	173	keep	void G::Str::unescape( std::string & s )
gstr.cpp	178	keep	void G::Str::unescape( std::string & s , char c_escape , string_view specials_in , string_view specials_out )
gstr.cpp	200	remove	std::string G::Str::unescaped( const std::string & s_in )
gstr.cpp	207	keep	void G::Str::replace( std::string & s , char from , char to )
gstr.cpp	216	keep	void G::Str::replace( StringArray & a , char from , char to )
gstr.cpp	222	keep	bool G::Str::replace( std::string & s , string_view from , string_view to , std::size_t * pos_p )
gstr.cpp	243	keep	unsigned int G::Str::replaceAll( std::string & s , string_view from , string_view to )
gstr.cpp	251	keep	std::string G::Str::replaced( const std::string & s , char from , char to )
gstr.cpp	258	keep	void G::Str::removeAll( std::string & s , char c )
gstr.cpp	263	remove	std::string G::Str::removedAll( const std::string & s_in , char c )
gstr.cpp	270	keep	std::string G::Str::only( string_view chars , string_view s )
gstr.cpp	282	keep	std::string & G::Str::trimLeft( std::string & s , string_view ws , std::size_t limit )
gstr.cpp	294	keep	G::string_view G::Str::trimLeftView( string_view sv , string_view ws , std::size_t limit ) noexcept
gstr.cpp	307	keep	std::string & G::Str::trimRight( std::string & s , string_view ws , std::size_t limit )
gstr.cpp	319	keep	G::string_view G::Str::trimRightView( string_view sv , string_view ws , std::size_t limit ) noexcept
gstr.cpp	332	keep	std::string & G::Str::trim( std::string & s , string_view ws )
gstr.cpp	337	keep	std::string G::Str::trimmed( const std::string & s_in , string_view ws )
gstr.cpp	343	keep	std::string G::Str::trimmed( std::string && s , string_view ws )
gstr.cpp	348	keep	G::string_view G::Str::trimmedView( string_view s , string_view ws ) noexcept
gstr.cpp	353	keep	bool G::StrImp::isDigit( char c ) noexcept
gstr.cpp	359	keep	bool G::StrImp::isHex( char c ) noexcept
gstr.cpp	365	keep	bool G::StrImp::isPrintableAscii( char c ) noexcept
gstr.cpp	371	keep	bool G::StrImp::isPrintable( char c ) noexcept
gstr.cpp	377	keep	bool G::StrImp::isSimple( char c ) noexcept
gstr.cpp	385	keep	char G::StrImp::toLower( char c ) noexcept
gstr.cpp	391	keep	char G::StrImp::toUpper( char c ) noexcept
gstr.cpp	397	keep	bool G::Str::isNumeric( string_view s , bool allow_minus_sign ) noexcept
gstr.cpp	403	remove	bool G::Str::isHex( string_view s ) noexcept
gstr.cpp	408	keep	bool G::Str::isPrintableAscii( string_view s ) noexcept
gstr.cpp	413	keep	bool G::Str::isPrintable( string_view s ) noexcept
gstr.cpp	418	remove	bool G::Str::isSimple( string_view s ) noexcept
gstr.cpp	423	keep	bool G::Str::isInt( string_view s ) noexcept
gstr.cpp	431	remove	bool G::Str::isUShort( string_view s ) noexcept
gstr.cpp	439	keep	bool G::Str::isUInt( string_view s ) noexcept
gstr.cpp	447	keep	bool G::Str::isULong( string_view s ) noexcept
gstr.cpp	455	remove	std::string G::Str::fromBool( bool b )
gstr.cpp	460	remove	std::string G::Str::fromDouble( double d )
gstr.cpp	469	remove	bool G::Str::toBool( string_view s )
gstr.cpp	481	remove	double G::Str::toDouble( const std::string & s )
gstr.cpp	501	remove	float G::Str::toFloat( const std::string & s )
gstr.cpp	521	keep	int G::Str::toInt( string_view s )
gstr.cpp	533	remove	int G::Str::toInt( string_view s1 , string_view s2 )
gstr.cpp	538	keep	int G::StrImp::toInt( string_view s , bool & overflow , bool & invalid ) noexcept
gstr.cpp	547	remove	long G::Str::toLong( string_view s )
gstr.cpp	559	keep	long G::StrImp::toLong( string_view s , bool & overflow , bool & invalid ) noexcept
gstr.cpp	578	remove	short G::Str::toShort( string_view s )
gstr.cpp	590	keep	short G::StrImp::toShort( string_view s , bool & overflow , bool & invalid ) noexcept
gstr.cpp	599	keep	unsigned int G::Str::toUInt( string_view s1 , string_view s2 )
gstr.cpp	604	remove	unsigned int G::Str::toUInt( string_view s , unsigned int default_ )
gstr.cpp	609	remove	unsigned int G::Str::toUInt( string_view s , Limited )
gstr.cpp	621	keep	unsigned int G::Str::toUInt( string_view s )
gstr.cpp	633	keep	unsigned int G::StrImp::toUInt( string_view s , bool & overflow , bool & invalid ) noexcept
gstr.cpp	642	keep	unsigned long G::Str::toULong( string_view s , Limited )
gstr.cpp	654	remove	unsigned long G::Str::toULong( string_view s , Hex , Limited )
gstr.cpp	659	remove	unsigned long G::Str::toULong( string_view s , Hex )
gstr.cpp	664	keep	unsigned long G::StrImp::toULongHex( string_view s , bool limited )
gstr.cpp	688	keep	unsigned long G::Str::toULong( string_view s )
gstr.cpp	700	remove	unsigned long G::Str::toULong( string_view s1 , string_view s2 )
gstr.cpp	705	keep	unsigned long G::StrImp::toULong( string_view s , bool & overflow , bool & invalid ) noexcept
gstr.cpp	716	remove	unsigned short G::Str::toUShort( string_view s , Limited )
gstr.cpp	728	remove	unsigned short G::Str::toUShort( string_view s )
gstr.cpp	740	keep	unsigned short G::StrImp::toUShort( string_view s , bool & overflow , bool & invalid ) noexcept
gstr.cpp	749	remove	G::string_view G::Str::fromULongToHex( unsigned long u , char * out_p ) noexcept
gstr.cpp	754	remove	G::string_view G::Str::fromULongLongToHex( unsigned long long u , char * out_p ) noexcept
gstr.cpp	759	keep	template <typename U> G::string_view G::StrImp::fromUnsignedToHex( U u , char * out_p ) noexcept
gstr.cpp	778	keep	void G::Str::toLower( std::string & s )
gstr.cpp	783	keep	std::string G::Str::lower( G::string_view in )
gstr.cpp	790	keep	void G::Str::toUpper( std::string & s )
gstr.cpp	795	keep	std::string G::Str::upper( G::string_view in )
gstr.cpp	802	keep	G::string_view G::StrImp::hexmap() noexcept
gstr.cpp	809	keep	template <typename Tout> std::size_t G::StrImp::outputHex( Tout out , char c )
gstr.cpp	819	keep	template <typename Tout> std::size_t G::StrImp::outputHex( Tout out , wchar_t c )
gstr.cpp	832	keep	template <typename Tout, typename Tchar> std::size_t G::StrImp::outputPrintable( Tout out , Tchar c , Tchar escape_in , char escape_out , bool eight_bit )
gstr.cpp	872	keep	std::string G::Str::printable( const std::string & in , char escape )
gstr.cpp	881	keep	std::string G::Str::printable( G::string_view in , char escape )
gstr.cpp	890	keep	std::string G::Str::toPrintableAscii( const std::string & in , char escape )
gstr.cpp	899	remove	std::string G::Str::toPrintableAscii( const std::wstring & in , wchar_t escape )
gstr.cpp	908	keep	std::string G::Str::readLineFrom( std::istream & stream , string_view eol )
gstr.cpp	915	keep	std::istream & G::Str::readLine( std::istream & stream , std::string & line , string_view eol , bool pre_erase , std::size_t limit )
gstr.cpp	951	keep	std::istream & G::Str::readLine( std::istream & stream , std::string & line , Eol eol , bool pre_erase , std::size_t limit )
gstr.cpp	979	keep	template <typename Tstring, typename Fn> bool G::StrImp::readLine( std::istream & stream , Tstring & line , char * next_p , std::size_t limit , Fn eol_fn )
gstr.cpp	1022	keep	template <typename S, typename T, typename SV> void G::StrImp::splitIntoTokens( const S & in , T & out , const SV & ws )
gstr.cpp	1038	keep	template <typename S, typename T> void G::StrImp::splitIntoTokens( const S & in , T & out , const S & ws , typename S::value_type esc )
gstr.cpp	1076	keep	void G::Str::splitIntoTokens( const std::string & in , StringArray & out , string_view ws , char esc )
gstr.cpp	1084	keep	G::StringArray G::Str::splitIntoTokens( const std::string & in , string_view ws , char esc )
gstr.cpp	1091	keep	template <typename T> void G::StrImp::splitIntoFields( string_view in , T & out , string_view ws )
gstr.cpp	1111	keep	template <typename T> void G::StrImp::splitIntoFields( string_view in_in , T & out , string_view ws , char escape , bool remove_escapes )
gstr.cpp	1148	keep	void G::Str::splitIntoFields( string_view in , StringArray & out , char sep , char escape , bool remove_escapes )
gstr.cpp	1154	keep	G::StringArray G::Str::splitIntoFields( string_view in , char sep )
gstr.cpp	1161	remove	std::string G::Str::join( string_view sep , const StringMap & map , string_view pre , string_view post )
gstr.cpp	1176	keep	std::string G::Str::join( string_view sep , const StringArray & strings )
gstr.cpp	1187	keep	std::string G::Str::join( string_view sep , string_view s1 , string_view s2 , string_view s3 , string_view s4 , string_view s5 , string_view s6 , string_view s7 , string_view s8 , string_view s9 )
gstr.cpp	1204	keep	void G::StrImp::join( string_view sep , std::string & result , string_view s )
gstr.cpp	1211	keep	G::StringArray G::Str::keys( const StringMap & map )
gstr.cpp	1220	keep	G::string_view G::Str::ws() noexcept
gstr.cpp	1227	remove	G::string_view G::Str::alnum() noexcept
gstr.cpp	1232	keep	G::string_view G::Str::alnum_() noexcept
gstr.cpp	1239	remove	G::string_view G::Str::meta() noexcept
gstr.cpp	1245	keep	std::string G::Str::head( string_view in , std::size_t pos , string_view default_ )
gstr.cpp	1253	keep	std::string G::Str::head( string_view in , string_view sep , bool default_empty )
gstr.cpp	1259	keep	G::string_view G::Str::headView( string_view in , std::size_t pos , string_view default_ ) noexcept
gstr.cpp	1267	keep	G::string_view G::Str::headView( string_view in , string_view sep , bool default_empty ) noexcept
gstr.cpp	1273	keep	std::string G::Str::tail( string_view in , std::size_t pos , string_view default_ )
gstr.cpp	1281	keep	std::string G::Str::tail( string_view in , string_view sep , bool default_empty )
gstr.cpp	1288	keep	G::string_view G::Str::tailView( string_view in , std::size_t pos , string_view default_ ) noexcept
gstr.cpp	1296	keep	G::string_view G::Str::tailView( string_view in , string_view sep , bool default_empty ) noexcept
gstr.cpp	1303	keep	bool G::Str::tailMatch( const std::string & in , string_view tail ) noexcept
gstr.cpp	1310	keep	bool G::Str::headMatch( const std::string & in , string_view head ) noexcept
gstr.cpp	1317	keep	std::string G::Str::positive()
gstr.cpp	1322	keep	std::string G::Str::negative()
gstr.cpp	1327	keep	bool G::Str::isPositive( string_view s_in ) noexcept
gstr.cpp	1335	keep	bool G::Str::isNegative( string_view s_in ) noexcept
gstr.cpp	1343	keep	bool G::Str::match( string_view a , string_view b ) noexcept
gstr.cpp	1348	keep	bool G::StrImp::ilessc( char c1 , char c2 ) noexcept
gstr.cpp	1355	keep	bool G::Str::iless( string_view a , string_view b ) noexcept
gstr.cpp	1360	keep	bool G::StrImp::imatchc( char c1 , char c2 ) noexcept
gstr.cpp	1365	remove	bool G::Str::imatch( char c1 , char c2 ) noexcept
gstr.cpp	1370	keep	bool G::Str::imatch( string_view a , string_view b ) noexcept
gstr.cpp	1375	remove	bool G::StrImp::imatch( const std::string & a , const std::string & b )
gstr.cpp	1380	keep	std::size_t G::Str::ifind( string_view s , string_view key )
gstr.cpp	1385	keep	std::size_t G::Str::ifindat( string_view s , string_view key , std::size_t pos )
gstr.cpp	1392	keep	template <typename T, typename V> T G::StrImp::unique( T in , T end , V repeat , V replacement )
gstr.cpp	1414	keep	std::string G::Str::unique( const std::string & s_in , char c , char r )
gstr.cpp	1421	keep	std::string G::Str::unique( const std::string & s , char c )
gstr.cpp	1426	keep	void G::StrImp::strncpy( char * dst , const char * src , std::size_t n ) noexcept
gstr.cpp	1437	keep	errno_t G::Str::strncpy_s( char * dst , std::size_t n_dst , const char * src , std::size_t count ) noexcept
gstringlist.cpp	41	keep	bool G::StringListImp::inList( StringArray::const_iterator begin , StringArray::const_iterator end , const std::string & s , bool ignore )
gstringlist.cpp	48	keep	bool G::StringListImp::notInList( StringArray::const_iterator begin , StringArray::const_iterator end , const std::string & s , bool ignore_case )
gstringlist.cpp	54	keep	bool G::StringListImp::match( const std::string & a , const std::string & b , bool ignore_case )
gstringlist.cpp	59	keep	void G::StringList::keepMatch( StringArray & list , const StringArray & match_list , Ignore ignore )
gstringlist.cpp	69	keep	void G::StringList::removeMatch( StringArray & list , const StringArray & deny_list , Ignore ignore )
gstringlist.cpp	78	keep	bool G::StringList::headMatch( const StringArray & in , string_view head )
gstringlist.cpp	84	remove	bool G::StringList::tailMatch( const StringArray & in , string_view tail )
gstringlist.cpp	90	keep	std::string G::StringList::headMatchResidue( const StringArray & in , string_view head )
gstringlist.cpp	101	keep	bool G::StringList::match( const StringArray & a , const std::string & b )
gstringlist.cpp	106	keep	bool G::StringList::imatch( const StringArray & a , const std::string & b )
gstringview.cpp	24	keep	bool G::sv_imatch( string_view a , string_view b ) noexcept
gstringview.cpp	41	keep	G::string_view G::sv_substr( string_view sv , std::size_t pos , std::size_t count ) noexcept
gstringview.cpp	51	keep	int G::string_view::compare( const string_view & other ) const noexcept
gstringview.cpp	57	keep	G::string_view G::string_view::substr( std::size_t pos , std::size_t count ) const
gstringview.cpp	67	keep	std::size_t G::string_view::find( char c , std::size_t pos ) const noexcept
gstringview.cpp	80	keep	std::size_t G::string_view::find( const char * substr_p , std::size_t pos , std::size_t substr_n ) const
gstringview.cpp	85	keep	std::size_t G::string_view::find( string_view substr , std::size_t pos ) const
gstringview.cpp	94	keep	std::size_t G::string_view::find_first_of( const char * chars , std::size_t pos , std::size_t chars_size ) const noexcept
gstringview.cpp	99	keep	std::size_t G::string_view::find_first_of( string_view chars , std::size_t pos ) const noexcept
gstringview.cpp	116	keep	std::size_t G::string_view::find_first_not_of( char c , std::size_t pos ) const noexcept
gstringview.cpp	129	keep	std::size_t G::string_view::find_first_not_of( const char * chars , std::size_t pos , std::size_t chars_size ) const noexcept
gstringview.cpp	134	keep	std::size_t G::string_view::find_first_not_of( string_view chars , std::size_t pos ) const noexcept
gstringview.cpp	154	remove	std::size_t G::string_view::find_last_of( const char * chars , std::size_t pos , std::size_t chars_size ) const noexcept
gstringview.cpp	159	keep	std::size_t G::string_view::find_last_of( string_view chars , std::size_t pos ) const noexcept
gstringview.cpp	180	remove	std::size_t G::string_view::find_last_not_of( const char * chars , std::size_t pos , std::size_t chars_size ) const noexcept
gstringview.cpp	185	keep	std::size_t G::string_view::find_last_not_of( string_view chars , std::size_t pos ) const noexcept
gstringview.cpp	206	keep	std::size_t G::string_view::rfind( char c , std::size_t pos ) const noexcept
gstringwrap.cpp	70	keep	G::StringWrap::WordWrapper::WordWrapper( std::ostream & out , Config config , const std::locale & loc ) : m_out(out) , m_config(config) , m_loc(loc)
gstringwrap.cpp	77	keep	G::string_view G::StringWrap::WordWrapper::prefix() const
gstringwrap.cpp	82	keep	void G::StringWrap::WordWrapper::emit( const std::string & word , std::size_t newlines , const std::string & prespace )
gstringwrap.cpp	118	keep	std::string G::StringWrap::wrap( const std::string & text_in , const std::string & prefix_first , const std::string & prefix_other , std::size_t width_first , std::size_t width_other , bool preserve_spaces , const std::locale & loc )
gstringwrap.cpp	142	keep	void G::StringWrap::wrap( std::istream & in , WordWrapper & ww )
gstringwrap.cpp	184	keep	std::locale G::StringWrap::defaultLocale()
gstringwrap.cpp	197	keep	std::size_t G::StringWrap::wordsize( const std::string & s , const std::locale & loc )
gstringwrap.cpp	202	keep	std::size_t G::StringWrap::wordsize( G::string_view s , const std::locale & loc )
gthread.cpp	31	keep	bool G::threading::works()
gtime.cpp	27	keep	G::Time::Time( int hh , int mm , int ss ) : m_hh(std::min(23,std::max(0,hh))) , m_mm(std::min(59,std::max(0,mm))) , m_ss(std::min((hh==23&&mm==59)?60:59,std::max(0,ss)))
gtime.cpp	34	keep	G::Time::Time( const BrokenDownTime & tm ) : Time(tm.hour(),tm.min(),tm.sec())
gtime.cpp	39	remove	G::Time::Time() : Time(SystemTime::now().utc())
gtime.cpp	44	remove	G::Time::Time( SystemTime t ) : Time(t.utc())
gtime.cpp	49	remove	G::Time::Time( const LocalTime & ) : Time(SystemTime::now().local())
gtime.cpp	54	remove	G::Time::Time( SystemTime t , const LocalTime & ) : Time(t.local())
gtime.cpp	59	remove	int G::Time::hours() const
gtime.cpp	64	remove	int G::Time::minutes() const
gtime.cpp	69	remove	int G::Time::seconds() const
gtime.cpp	74	keep	std::string G::Time::xx( int n )
gtime.cpp	79	keep	std::string G::Time::hhmmss( const char * sep ) const
gtime.cpp	85	remove	std::string G::Time::hhmm( const char * sep ) const
gtime.cpp	91	remove	std::string G::Time::ss() const
gtime.cpp	96	remove	unsigned int G::Time::value() const
gtime.cpp	104	remove	G::Time G::Time::at( unsigned int s )
gtime.cpp	114	keep	bool G::Time::operator==( const Time & other ) const
gtime.cpp	119	remove	bool G::Time::operator!=( const Time & other ) const
gxtext.cpp	77	keep	bool G::Xtext::valid( string_view s , bool strict )
gxtext.cpp	97	keep	std::string G::Xtext::encode( string_view s )
gxtext.cpp	119	keep	std::string G::Xtext::decode( string_view s )
gssl.cpp	30	keep	GSsl::Library::Library( bool active , const std::string & library_config , LogFn log_fn , bool verbose )
gssl.cpp	45	keep	GSsl::Library::~Library()
gssl.cpp	51	remove	bool GSsl::Library::real()
gssl.cpp	56	keep	GSsl::Library * GSsl::Library::instance()
gssl.cpp	61	keep	bool GSsl::Library::enabled() const
gssl.cpp	66	remove	std::string GSsl::Library::id() const
gssl.cpp	71	keep	void GSsl::Library::addProfile( const std::string & profile_name , bool is_server_profile , const std::string & key_file , const std::string & cert_file , const std::string & ca_file , const std::string & default_peer_certificate_name , const std::string & default_peer_host_name , const std::string & profile_config )
gssl.cpp	81	keep	bool GSsl::Library::hasProfile( const std::string & profile_name ) const
gssl.cpp	86	keep	const GSsl::Profile & GSsl::Library::profile( const std::string & profile_name ) const
gssl.cpp	93	keep	bool GSsl::Library::enabledAs( const std::string & profile_name )
gssl.cpp	98	keep	GSsl::LibraryImpBase & GSsl::Library::impstance()
gssl.cpp	105	keep	GSsl::LibraryImpBase & GSsl::Library::imp()
gssl.cpp	112	keep	const GSsl::LibraryImpBase & GSsl::Library::imp() const
gssl.cpp	119	keep	void GSsl::Library::log( int level , const std::string & log_line )
gssl.cpp	129	keep	G::StringArray GSsl::Library::digesters( bool require_state )
gssl.cpp	134	keep	GSsl::Digester GSsl::Library::digester( const std::string & hash_function , const std::string & state , bool need_state ) const
gssl.cpp	141	keep	GSsl::Protocol::Protocol( const Profile & profile , const std::string & peer_certificate_name , const std::string & peer_host_name ) : m_imp( profile.newProtocol(peer_certificate_name,peer_host_name) )
gssl.cpp	146	keep	GSsl::Protocol::~Protocol()
gssl.cpp	149	keep	std::string GSsl::Protocol::peerCertificate() const
gssl.cpp	154	remove	std::string GSsl::Protocol::peerCertificateChain() const
gssl.cpp	159	keep	std::string GSsl::Protocol::protocol() const
gssl.cpp	164	keep	std::string GSsl::Protocol::cipher() const
gssl.cpp	169	remove	bool GSsl::Protocol::verified() const
gssl.cpp	174	keep	std::string GSsl::Protocol::str( Result result )
gssl.cpp	183	keep	GSsl::Protocol::Result GSsl::Protocol::connect( G::ReadWrite & io )
gssl.cpp	188	keep	GSsl::Protocol::Result GSsl::Protocol::accept( G::ReadWrite & io )
gssl.cpp	193	keep	GSsl::Protocol::Result GSsl::Protocol::read( char * buffer , std::size_t buffer_size_in , ssize_t & data_size_out )
gssl.cpp	198	keep	GSsl::Protocol::Result GSsl::Protocol::write( const char * buffer , std::size_t data_size_in , ssize_t & data_size_out)
gssl.cpp	203	keep	GSsl::Protocol::Result GSsl::Protocol::shutdown()
gssl.cpp	210	keep	GSsl::Digester::Digester( std::unique_ptr<DigesterImpBase> p ) : m_imp(p.release())
gssl.cpp	215	keep	void GSsl::Digester::add( G::string_view sv )
gssl.cpp	220	keep	std::string GSsl::Digester::value()
gssl.cpp	225	keep	std::string GSsl::Digester::state()
gssl.cpp	230	keep	std::size_t GSsl::Digester::blocksize() const noexcept
gssl.cpp	235	keep	std::size_t GSsl::Digester::valuesize() const noexcept
gssl.cpp	240	keep	std::size_t GSsl::Digester::statesize() const noexcept
gssl.cpp	247	keep	bool GSsl::LibraryImpBase::consume( G::StringArray & list , G::string_view key )
gssl_mbedtls.cpp	68	keep	GSsl::MbedTls::LibraryImp::LibraryImp( G::StringArray & library_config , Library::LogFn log_fn , bool verbose ) : m_log_fn(log_fn) , m_config(library_config)
gssl_mbedtls.cpp	75	keep	GSsl::MbedTls::LibraryImp::~LibraryImp()
gssl_mbedtls.cpp	78	keep	const GSsl::MbedTls::Rng & GSsl::MbedTls::LibraryImp::rng() const
gssl_mbedtls.cpp	83	keep	void GSsl::MbedTls::LibraryImp::addProfile( const std::string & profile_name , bool is_server_profile , const std::string & key_file , const std::string & cert_file , const std::string & ca_file , const std::string & default_peer_certificate_name , const std::string & default_peer_host_name , const std::string & profile_config )
gssl_mbedtls.cpp	94	keep	bool GSsl::MbedTls::LibraryImp::hasProfile( const std::string & profile_name ) const
gssl_mbedtls.cpp	100	keep	const GSsl::Profile & GSsl::MbedTls::LibraryImp::profile( const std::string & profile_name ) const
gssl_mbedtls.cpp	107	keep	GSsl::Library::LogFn GSsl::MbedTls::LibraryImp::log() const
gssl_mbedtls.cpp	112	keep	std::string GSsl::MbedTls::LibraryImp::version()
gssl_mbedtls.cpp	121	keep	std::string GSsl::MbedTls::LibraryImp::sid()
gssl_mbedtls.cpp	130	keep	std::string GSsl::MbedTls::LibraryImp::id() const
gssl_mbedtls.cpp	135	keep	GSsl::MbedTls::Config GSsl::MbedTls::LibraryImp::config() const
gssl_mbedtls.cpp	140	keep	std::string GSsl::MbedTls::LibraryImp::credit( const std::string & prefix , const std::string & eol , const std::string & eot )
gssl_mbedtls.cpp	150	keep	G::StringArray GSsl::MbedTls::LibraryImp::digesters( bool ) const
gssl_mbedtls.cpp	155	keep	GSsl::Digester GSsl::MbedTls::LibraryImp::digester( const std::string & hash_type , const std::string & state , bool need_state ) const
gssl_mbedtls.cpp	162	keep	GSsl::MbedTls::Config::Config( G::StringArray & config ) : m_noverify(consume(config,"noverify")), m_clientnoverify(consume(config,"clientnoverify")), m_servernoverify(consume(config,"servernoverify")), m_min(-1), m_max(-1)
gssl_mbedtls.cpp	206	keep	int GSsl::MbedTls::Config::min_() const noexcept
gssl_mbedtls.cpp	211	keep	int GSsl::MbedTls::Config::max_() const noexcept
gssl_mbedtls.cpp	216	keep	bool GSsl::MbedTls::Config::noverify() const noexcept
gssl_mbedtls.cpp	221	keep	bool GSsl::MbedTls::Config::clientnoverify() const noexcept
gssl_mbedtls.cpp	226	keep	bool GSsl::MbedTls::Config::servernoverify() const noexcept
gssl_mbedtls.cpp	231	keep	bool GSsl::MbedTls::Config::consume( G::StringArray & list , G::string_view item )
gssl_mbedtls.cpp	238	keep	GSsl::MbedTls::DigesterImp::DigesterImp( const std::string & hash_name , const std::string & state , bool need_state )
gssl_mbedtls.cpp	309	keep	GSsl::MbedTls::DigesterImp::~DigesterImp()
gssl_mbedtls.cpp	319	keep	void GSsl::MbedTls::DigesterImp::add( G::string_view sv )
gssl_mbedtls.cpp	329	keep	std::string GSsl::MbedTls::DigesterImp::value()
gssl_mbedtls.cpp	355	keep	std::string GSsl::MbedTls::DigesterImp::state()
gssl_mbedtls.cpp	371	keep	std::size_t GSsl::MbedTls::DigesterImp::blocksize() const noexcept
gssl_mbedtls.cpp	376	keep	std::size_t GSsl::MbedTls::DigesterImp::valuesize() const noexcept
gssl_mbedtls.cpp	381	keep	std::size_t GSsl::MbedTls::DigesterImp::statesize() const noexcept
gssl_mbedtls.cpp	388	keep	GSsl::MbedTls::ProfileImp::ProfileImp( const LibraryImp & library_imp , bool is_server_profile , const std::string & key_file , const std::string & cert_file , const std::string & ca_path , const std::string & default_peer_certificate_name , const std::string & default_peer_host_name , const std::string & profile_config ) : m_library_imp(library_imp) , m_default_peer_certificate_name(default_peer_certificate_name) , m_default_peer_host_name(default_peer_host_name) , m_config{} , m_authmode(0)
gssl_mbedtls.cpp	498	keep	GSsl::MbedTls::ProfileImp::~ProfileImp()
gssl_mbedtls.cpp	503	keep	std::unique_ptr<GSsl::ProtocolImpBase> GSsl::MbedTls::ProfileImp::newProtocol( const std::string & peer_certificate_name , const std::string & peer_host_name ) const
gssl_mbedtls.cpp	511	keep	mbedtls_x509_crl * GSsl::MbedTls::ProfileImp::crl() const
gssl_mbedtls.cpp	517	keep	const mbedtls_ssl_config * GSsl::MbedTls::ProfileImp::config() const
gssl_mbedtls.cpp	522	keep	void GSsl::MbedTls::ProfileImp::onDebug( void * This , int level_in , const char * file , int line , const char * message )
gssl_mbedtls.cpp	533	keep	void GSsl::MbedTls::ProfileImp::doDebug( int level_in , const char * file , int line , const char * message )
gssl_mbedtls.cpp	557	keep	void GSsl::MbedTls::ProfileImp::logAt( int level_out , std::string s ) const
gssl_mbedtls.cpp	568	keep	const std::string & GSsl::MbedTls::ProfileImp::defaultPeerCertificateName() const
gssl_mbedtls.cpp	573	keep	const std::string & GSsl::MbedTls::ProfileImp::defaultPeerHostName() const
gssl_mbedtls.cpp	578	keep	int GSsl::MbedTls::ProfileImp::authmode() const
gssl_mbedtls.cpp	585	keep	GSsl::MbedTls::ProtocolImp::ProtocolImp( const ProfileImp & profile , const std::string & required_peer_certificate_name , const std::string & target_peer_host_name ) : m_profile(profile) , m_io(nullptr) , m_ssl(profile.config()) , m_verified(false)
gssl_mbedtls.cpp	604	keep	GSsl::MbedTls::ProtocolImp::~ProtocolImp()
gssl_mbedtls.cpp	607	keep	GSsl::Protocol::Result GSsl::MbedTls::ProtocolImp::read( char * buffer , std::size_t buffer_size_in , ssize_t & data_size_out )
gssl_mbedtls.cpp	616	keep	GSsl::Protocol::Result GSsl::MbedTls::ProtocolImp::write( const char * buffer_in , std::size_t data_size_in , ssize_t & data_size_out )
gssl_mbedtls.cpp	641	keep	GSsl::Protocol::Result GSsl::MbedTls::ProtocolImp::shutdown()
gssl_mbedtls.cpp	647	remove	int GSsl::MbedTls::ProtocolImp::doRecvTimeout( void * This , unsigned char * p , std::size_t n , uint32_t /*timeout_ms*/ )
gssl_mbedtls.cpp	654	keep	int GSsl::MbedTls::ProtocolImp::doRecv( void * This , unsigned char * p , std::size_t n )
gssl_mbedtls.cpp	664	keep	int GSsl::MbedTls::ProtocolImp::doSend( void * This , const unsigned char * p , std::size_t n )
gssl_mbedtls.cpp	674	keep	GSsl::Protocol::Result GSsl::MbedTls::ProtocolImp::convert( const char * fnname , int rc , bool more )
gssl_mbedtls.cpp	687	keep	std::string GSsl::MbedTls::ProtocolImp::verifyResultString( int rc )
gssl_mbedtls.cpp	703	keep	GSsl::Protocol::Result GSsl::MbedTls::ProtocolImp::connect( G::ReadWrite & io )
gssl_mbedtls.cpp	709	keep	GSsl::Protocol::Result GSsl::MbedTls::ProtocolImp::accept( G::ReadWrite & io )
gssl_mbedtls.cpp	715	keep	GSsl::Protocol::Result GSsl::MbedTls::ProtocolImp::handshake()
gssl_mbedtls.cpp	753	keep	std::string GSsl::MbedTls::ProtocolImp::protocol() const
gssl_mbedtls.cpp	759	keep	std::string GSsl::MbedTls::ProtocolImp::cipher() const
gssl_mbedtls.cpp	765	remove	const GSsl::Profile & GSsl::MbedTls::ProtocolImp::profile() const
gssl_mbedtls.cpp	770	keep	std::string GSsl::MbedTls::ProtocolImp::getPeerCertificate()
gssl_mbedtls.cpp	803	keep	std::string GSsl::MbedTls::ProtocolImp::peerCertificate() const
gssl_mbedtls.cpp	808	keep	std::string GSsl::MbedTls::ProtocolImp::peerCertificateChain() const
gssl_mbedtls.cpp	813	keep	bool GSsl::MbedTls::ProtocolImp::verified() const
gssl_mbedtls.cpp	820	keep	GSsl::MbedTls::Context::Context( const mbedtls_ssl_config * config_p ) : x{}
gssl_mbedtls.cpp	829	keep	GSsl::MbedTls::Context::~Context()
gssl_mbedtls.cpp	834	keep	mbedtls_ssl_context * GSsl::MbedTls::Context::ptr()
gssl_mbedtls.cpp	839	keep	mbedtls_ssl_context * GSsl::MbedTls::Context::ptr() const
gssl_mbedtls.cpp	846	keep	GSsl::MbedTls::Rng::Rng() : x{} , entropy{}
gssl_mbedtls.cpp	869	keep	GSsl::MbedTls::Rng::~Rng()
gssl_mbedtls.cpp	875	remove	mbedtls_ctr_drbg_context * GSsl::MbedTls::Rng::ptr()
gssl_mbedtls.cpp	880	keep	mbedtls_ctr_drbg_context * GSsl::MbedTls::Rng::ptr() const
gssl_mbedtls.cpp	887	keep	std::size_t GSsl::MbedTls::SecureFile::fileSize( std::filebuf & fp )
gssl_mbedtls.cpp	895	keep	bool GSsl::MbedTls::SecureFile::fileRead( std::filebuf & fp , char * p , std::size_t n )
gssl_mbedtls.cpp	904	keep	void GSsl::MbedTls::SecureFile::scrub( char * p_in , std::size_t n ) noexcept
gssl_mbedtls.cpp	912	keep	void GSsl::MbedTls::SecureFile::clear( std::vector<char> & buffer ) noexcept
gssl_mbedtls.cpp	923	keep	GSsl::MbedTls::SecureFile::SecureFile( const std::string & path , bool with_counted_nul )
gssl_mbedtls.cpp	949	keep	GSsl::MbedTls::SecureFile::~SecureFile()
gssl_mbedtls.cpp	954	keep	const char * GSsl::MbedTls::SecureFile::p() const
gssl_mbedtls.cpp	960	remove	const unsigned char * GSsl::MbedTls::SecureFile::pu() const
gssl_mbedtls.cpp	965	keep	unsigned char * GSsl::MbedTls::SecureFile::pu()
gssl_mbedtls.cpp	970	keep	std::size_t GSsl::MbedTls::SecureFile::size() const
gssl_mbedtls.cpp	975	keep	bool GSsl::MbedTls::SecureFile::empty() const
gssl_mbedtls.cpp	982	keep	GSsl::MbedTls::Key::Key() : x{}
gssl_mbedtls.cpp	988	keep	GSsl::MbedTls::Key::~Key()
gssl_mbedtls.cpp	993	keep	void GSsl::MbedTls::Key::load( const std::string & pem_file , const Rng & rng )
gssl_mbedtls.cpp	1008	keep	mbedtls_pk_context * GSsl::MbedTls::Key::ptr()
gssl_mbedtls.cpp	1013	remove	mbedtls_pk_context * GSsl::MbedTls::Key::ptr() const
gssl_mbedtls.cpp	1020	keep	GSsl::MbedTls::Certificate::Certificate() : x{}
gssl_mbedtls.cpp	1026	keep	GSsl::MbedTls::Certificate::~Certificate()
gssl_mbedtls.cpp	1031	keep	void GSsl::MbedTls::Certificate::load( const std::string & path )
gssl_mbedtls.cpp	1046	keep	bool GSsl::MbedTls::Certificate::loaded() const
gssl_mbedtls.cpp	1051	keep	mbedtls_x509_crt * GSsl::MbedTls::Certificate::ptr()
gssl_mbedtls.cpp	1056	remove	mbedtls_x509_crt * GSsl::MbedTls::Certificate::ptr() const
gssl_mbedtls.cpp	1066	keep	GSsl::MbedTls::Error::Error( const std::string & s ) : std::runtime_error("tls error: "+s)
gssl_mbedtls.cpp	1071	keep	GSsl::MbedTls::Error::Error( const std::string & fnname , int rc , const std::string & more ) : std::runtime_error(format(fnname,rc,more))
gssl_mbedtls.cpp	1076	keep	std::string GSsl::MbedTls::Error::format( const std::string & fnname , int rc , const std::string & more )
gssl_openssl.cpp	43	keep	GSsl::OpenSSL::LibraryImp::LibraryImp( G::StringArray & library_config , Library::LogFn log_fn , bool verbose ) : m_log_fn(log_fn) , m_verbose(verbose) , m_config(library_config)
gssl_openssl.cpp	62	keep	GSsl::OpenSSL::LibraryImp::~LibraryImp()
gssl_openssl.cpp	67	keep	void GSsl::OpenSSL::LibraryImp::cleanup()
gssl_openssl.cpp	71	keep	std::string GSsl::OpenSSL::LibraryImp::sid()
gssl_openssl.cpp	77	keep	std::string GSsl::OpenSSL::LibraryImp::id() const
gssl_openssl.cpp	82	keep	GSsl::OpenSSL::Config GSsl::OpenSSL::LibraryImp::config() const
gssl_openssl.cpp	87	keep	std::string GSsl::OpenSSL::LibraryImp::credit( const std::string & prefix , const std::string & eol , const std::string & eot )
gssl_openssl.cpp	97	keep	void GSsl::OpenSSL::LibraryImp::addProfile( const std::string & profile_name , bool is_server_profile , const std::string & key_file , const std::string & cert_file , const std::string & ca_file , const std::string & default_peer_certificate_name , const std::string & default_peer_host_name , const std::string & profile_config )
gssl_openssl.cpp	108	keep	bool GSsl::OpenSSL::LibraryImp::hasProfile( const std::string & profile_name ) const
gssl_openssl.cpp	114	keep	const GSsl::Profile & GSsl::OpenSSL::LibraryImp::profile( const std::string & profile_name ) const
gssl_openssl.cpp	121	keep	GSsl::Library::LogFn GSsl::OpenSSL::LibraryImp::log() const
gssl_openssl.cpp	126	keep	bool GSsl::OpenSSL::LibraryImp::verbose() const
gssl_openssl.cpp	131	keep	int GSsl::OpenSSL::LibraryImp::index() const
gssl_openssl.cpp	136	keep	G::StringArray GSsl::OpenSSL::LibraryImp::digesters( bool need_state ) const
gssl_openssl.cpp	147	keep	GSsl::Digester GSsl::OpenSSL::LibraryImp::digester( const std::string & hash_type , const std::string & state , bool need_state ) const
gssl_openssl.cpp	152	keep	GSsl::OpenSSL::DigesterImp::DigesterImp( const std::string & hash_type , const std::string & state , bool need_state ) : m_hash_type(Type::Other) , m_evp_ctx(nullptr)
gssl_openssl.cpp	211	keep	GSsl::OpenSSL::DigesterImp::~DigesterImp()
gssl_openssl.cpp	217	keep	std::size_t GSsl::OpenSSL::DigesterImp::blocksize() const noexcept
gssl_openssl.cpp	222	keep	std::size_t GSsl::OpenSSL::DigesterImp::valuesize() const noexcept
gssl_openssl.cpp	227	keep	std::size_t GSsl::OpenSSL::DigesterImp::statesize() const noexcept
gssl_openssl.cpp	232	keep	std::string GSsl::OpenSSL::DigesterImp::state()
gssl_openssl.cpp	245	keep	void GSsl::OpenSSL::DigesterImp::add( G::string_view data )
gssl_openssl.cpp	261	keep	std::string GSsl::OpenSSL::DigesterImp::value()
gssl_openssl.cpp	299	keep	GSsl::OpenSSL::ProfileImp::ProfileImp( const LibraryImp & library_imp , bool is_server_profile , const std::string & key_file , const std::string & cert_file , const std::string & ca_path , const std::string & default_peer_certificate_name , const std::string & default_peer_host_name , const std::string & profile_config ) : m_library_imp(library_imp) , m_default_peer_certificate_name(default_peer_certificate_name) , m_default_peer_host_name(default_peer_host_name) , m_ssl_ctx(nullptr,std::function<void(SSL_CTX*)>(deleter))
gssl_openssl.cpp	389	keep	GSsl::OpenSSL::ProfileImp::~ProfileImp()
gssl_openssl.cpp	392	keep	void GSsl::OpenSSL::ProfileImp::deleter( SSL_CTX * p )
gssl_openssl.cpp	398	keep	std::unique_ptr<GSsl::ProtocolImpBase> GSsl::OpenSSL::ProfileImp::newProtocol( const std::string & peer_certificate_name , const std::string & peer_host_name ) const
gssl_openssl.cpp	406	keep	SSL_CTX * GSsl::OpenSSL::ProfileImp::p() const
gssl_openssl.cpp	411	keep	const GSsl::OpenSSL::LibraryImp & GSsl::OpenSSL::ProfileImp::lib() const
gssl_openssl.cpp	416	keep	const std::string & GSsl::OpenSSL::ProfileImp::defaultPeerCertificateName() const
gssl_openssl.cpp	421	keep	const std::string & GSsl::OpenSSL::ProfileImp::defaultPeerHostName() const
gssl_openssl.cpp	426	keep	void GSsl::OpenSSL::ProfileImp::check( int rc , const std::string & fnname_tail , const std::string & file )
gssl_openssl.cpp	435	keep	void GSsl::OpenSSL::ProfileImp::apply( const Config & config )
gssl_openssl.cpp	452	keep	int GSsl::OpenSSL::ProfileImp::verifyPass( int /*ok*/ , X509_STORE_CTX * )
gssl_openssl.cpp	457	keep	int GSsl::OpenSSL::ProfileImp::verifyPeerName( int ok , X509_STORE_CTX * ctx )
gssl_openssl.cpp	498	keep	std::string GSsl::OpenSSL::ProfileImp::name( X509_NAME * x509_name )
gssl_openssl.cpp	509	keep	GSsl::OpenSSL::ProtocolImp::ProtocolImp( const ProfileImp & profile , const std::string & required_peer_certificate_name , const std::string & target_peer_host_name ) : m_ssl(nullptr,std::function<void(SSL*)>(deleter)) , m_log_fn(profile.lib().log()) , m_verbose(profile.lib().verbose()) , m_fd_set(false) , m_required_peer_certificate_name(required_peer_certificate_name) , m_verified(false)
gssl_openssl.cpp	530	keep	GSsl::OpenSSL::ProtocolImp::~ProtocolImp()
gssl_openssl.cpp	533	keep	void GSsl::OpenSSL::ProtocolImp::deleter( SSL * p )
gssl_openssl.cpp	539	keep	void GSsl::OpenSSL::ProtocolImp::clearErrors()
gssl_openssl.cpp	546	keep	int GSsl::OpenSSL::ProtocolImp::error( const char * op , int rc ) const
gssl_openssl.cpp	553	keep	GSsl::Protocol::Result GSsl::OpenSSL::ProtocolImp::convert( int e )
gssl_openssl.cpp	560	keep	GSsl::Protocol::Result GSsl::OpenSSL::ProtocolImp::connect( G::ReadWrite & io )
gssl_openssl.cpp	566	keep	GSsl::Protocol::Result GSsl::OpenSSL::ProtocolImp::accept( G::ReadWrite & io )
gssl_openssl.cpp	572	keep	void GSsl::OpenSSL::ProtocolImp::set( int fd )
gssl_openssl.cpp	584	keep	GSsl::Protocol::Result GSsl::OpenSSL::ProtocolImp::connect()
gssl_openssl.cpp	599	keep	GSsl::Protocol::Result GSsl::OpenSSL::ProtocolImp::accept()
gssl_openssl.cpp	614	keep	void GSsl::OpenSSL::ProtocolImp::saveResult()
gssl_openssl.cpp	621	keep	GSsl::Protocol::Result GSsl::OpenSSL::ProtocolImp::shutdown()
gssl_openssl.cpp	630	keep	GSsl::Protocol::Result GSsl::OpenSSL::ProtocolImp::read( char * buffer , std::size_t buffer_size_in , ssize_t & read_size )
gssl_openssl.cpp	648	keep	GSsl::Protocol::Result GSsl::OpenSSL::ProtocolImp::write( const char * buffer , std::size_t size_in , ssize_t & size_out )
gssl_openssl.cpp	665	keep	std::string GSsl::OpenSSL::ProtocolImp::peerCertificate() const
gssl_openssl.cpp	670	keep	std::string GSsl::OpenSSL::ProtocolImp::peerCertificateChain() const
gssl_openssl.cpp	675	keep	std::string GSsl::OpenSSL::ProtocolImp::cipher() const
gssl_openssl.cpp	682	keep	std::string GSsl::OpenSSL::ProtocolImp::protocol() const
gssl_openssl.cpp	704	keep	bool GSsl::OpenSSL::ProtocolImp::verified() const
gssl_openssl.cpp	709	keep	void GSsl::OpenSSL::ProtocolImp::logErrors( const std::string & op , int rc , int e , const std::string & strerr ) const
gssl_openssl.cpp	730	keep	std::string GSsl::OpenSSL::ProtocolImp::requiredPeerCertificateName() const
gssl_openssl.cpp	737	keep	GSsl::OpenSSL::Error::Error( const std::string & s ) : std::runtime_error( std::string("tls error: ").append(s) )
gssl_openssl.cpp	742	keep	GSsl::OpenSSL::Error::Error( const std::string & fnname , unsigned long e ) : std::runtime_error( std::string("tls error: ").append(fnname).append("(): [").append(text(e)).append(1U,']') )
gssl_openssl.cpp	748	keep	GSsl::OpenSSL::Error::Error( const std::string & fnname , unsigned long e , const std::string & file ) : std::runtime_error( std::string("tls error: ").append(fnname).append("(): [").append(text(e)).append("]: file=[").append(file).append(1U,']') )
gssl_openssl.cpp	754	keep	void GSsl::OpenSSL::Error::clearErrors()
gssl_openssl.cpp	760	keep	std::string GSsl::OpenSSL::Error::text( unsigned long e )
gssl_openssl.cpp	770	keep	GSsl::OpenSSL::CertificateChain::CertificateChain( STACK_OF(X509) * chain )
gssl_openssl.cpp	780	keep	std::string GSsl::OpenSSL::CertificateChain::str() const
gssl_openssl.cpp	787	keep	GSsl::OpenSSL::Certificate::Certificate( X509 * x509 , bool do_free )
gssl_openssl.cpp	809	keep	std::string GSsl::OpenSSL::Certificate::str() const
gssl_openssl.cpp	816	keep	GSsl::OpenSSL::Config::Config( G::StringArray & cfg ) : m_min(0) , m_max(0) , m_options_set(0L) , m_options_reset(0L) , m_noverify(consume(cfg,"noverify"))
gssl_openssl.cpp	877	keep	bool GSsl::OpenSSL::Config::consume( G::StringArray & list , G::string_view item )
gssl_openssl.cpp	882	keep	GSsl::OpenSSL::Config::Fn GSsl::OpenSSL::Config::fn( bool server )
gssl_openssl.cpp	887	keep	long GSsl::OpenSSL::Config::set() const
gssl_openssl.cpp	892	keep	long GSsl::OpenSSL::Config::reset() const
gssl_openssl.cpp	897	keep	int GSsl::OpenSSL::Config::min_() const
gssl_openssl.cpp	902	keep	int GSsl::OpenSSL::Config::max_() const
gssl_openssl.cpp	907	keep	bool GSsl::OpenSSL::Config::noverify() const
gssl_use_both.cpp	27	keep	std::unique_ptr<GSsl::LibraryImpBase> GSsl::Library::newLibraryImp( G::StringArray & library_config , Library::LogFn log_fn , bool verbose )
gssl_use_both.cpp	40	keep	std::string GSsl::Library::credit( const std::string & prefix , const std::string & eol , const std::string & eot )
gssl_use_both.cpp	47	keep	std::string GSsl::Library::ids()
gaddress.cpp	33	keep	bool GNet::Address::supports( Family f ) noexcept
gaddress.cpp	45	keep	bool GNet::Address::supports( int af , int ) noexcept
gaddress.cpp	50	keep	bool GNet::Address::supports( const Address::Domain & , int domain ) noexcept
gaddress.cpp	55	keep	GNet::Address::Address( Family f , unsigned int port )
gaddress.cpp	67	keep	GNet::Address::Address( const sockaddr * addr , socklen_t len , bool ipv6_scope_id_fixup )
gaddress.cpp	83	keep	GNet::Address::Address( const sockaddr * addr , socklen_t len ) : Address(addr,len,false)
gaddress.cpp	88	keep	GNet::Address::Address( const AddressStorage & storage ) : Address(storage.p(),storage.n(),false)
gaddress.cpp	93	keep	GNet::Address::Address( const std::string & s , bool with_local )
gaddress.cpp	110	keep	GNet::Address::Address( const std::string & host_part , const std::string & port_part )
gaddress.cpp	127	keep	GNet::Address::Address( const std::string & host_part , unsigned int port ) : Address(host_part,G::Str::fromUInt(port))
gaddress.cpp	132	keep	GNet::Address::Address( Family f , unsigned int port , int loopback_overload )
gaddress.cpp	144	keep	GNet::Address::Address( const Address & other )
gaddress.cpp	155	keep	GNet::Address::Address( Address && other ) noexcept
gaddress.cpp	158	keep	GNet::Address::~Address()
gaddress.cpp	161	keep	void GNet::Address::swap( Address & other ) noexcept
gaddress.cpp	169	keep	GNet::Address & GNet::Address::operator=( const Address & other )
gaddress.cpp	175	keep	GNet::Address & GNet::Address::operator=( Address && other ) noexcept
gaddress.cpp	178	keep	GNet::Address GNet::Address::parse( const std::string & s )
gaddress.cpp	183	keep	GNet::Address GNet::Address::parse( const std::string & s , Address::NotLocal )
gaddress.cpp	188	keep	GNet::Address GNet::Address::parse( const std::string & host_part , unsigned int port )
gaddress.cpp	193	remove	GNet::Address GNet::Address::parse( const std::string & host_part , const std::string & port_part )
gaddress.cpp	198	keep	bool GNet::Address::isFamilyLocal( const std::string & s ) noexcept
gaddress.cpp	203	keep	GNet::Address GNet::Address::defaultAddress()
gaddress.cpp	208	keep	GNet::Address GNet::Address::loopback( Family f , unsigned int port )
gaddress.cpp	213	keep	GNet::Address::operator G::BasicAddress() const
gaddress.cpp	218	keep	GNet::Address & GNet::Address::setPort( unsigned int port )
gaddress.cpp	227	remove	bool GNet::Address::setZone( const std::string & ipv6_zone )
gaddress.cpp	236	keep	GNet::Address & GNet::Address::setScopeId( unsigned long ipv6_scope_id )
gaddress.cpp	245	keep	unsigned int GNet::Address::bits() const
gaddress.cpp	254	keep	bool GNet::Address::isLoopback() const
gaddress.cpp	263	keep	bool GNet::Address::isLocal( std::string & reason ) const
gaddress.cpp	272	keep	bool GNet::Address::isLinkLocal() const
gaddress.cpp	281	remove	bool GNet::Address::isMulticast() const
gaddress.cpp	290	keep	bool GNet::Address::isUniqueLocal() const
gaddress.cpp	299	keep	bool GNet::Address::isAny() const
gaddress.cpp	308	keep	bool GNet::Address::is4() const noexcept
gaddress.cpp	313	keep	bool GNet::Address::is6() const noexcept
gaddress.cpp	318	keep	bool GNet::Address::same( const Address & other , bool ipv6_compare_with_scope ) const
gaddress.cpp	327	keep	bool GNet::Address::operator==( const Address & other ) const
gaddress.cpp	336	keep	bool GNet::Address::operator!=( const Address & other ) const
gaddress.cpp	341	remove	bool GNet::Address::sameHostPart( const Address & other ) const
gaddress.cpp	350	keep	std::string GNet::Address::displayString( bool ipv6_with_scope_id ) const
gaddress.cpp	359	keep	std::string GNet::Address::hostPartString() const
gaddress.cpp	368	keep	std::string GNet::Address::queryString() const
gaddress.cpp	377	keep	bool GNet::Address::validString( const std::string & s , std::string * reason_p )
gaddress.cpp	385	keep	bool GNet::Address::validString( const std::string & s , NotLocal , std::string * reason_p )
gaddress.cpp	392	keep	bool GNet::Address::validStrings( const std::string & s1 , const std::string & s2 , std::string * reason_p )
gaddress.cpp	400	remove	sockaddr * GNet::Address::address()
gaddress.cpp	409	keep	const sockaddr * GNet::Address::address() const
gaddress.cpp	418	keep	socklen_t GNet::Address::length() const
gaddress.cpp	427	keep	unsigned int GNet::Address::port() const
gaddress.cpp	436	keep	unsigned long GNet::Address::scopeId( unsigned long default_ ) const
gaddress.cpp	445	keep	bool GNet::Address::validPort( unsigned int port )
gaddress.cpp	450	keep	bool GNet::Address::validData( const sockaddr * addr , socklen_t len )
gaddress.cpp	458	keep	int GNet::Address::domain( Family family ) noexcept
gaddress.cpp	466	keep	GNet::Address::Family GNet::Address::family() const noexcept
gaddress.cpp	474	keep	int GNet::Address::af() const noexcept
gaddress.cpp	482	keep	G::StringArray GNet::Address::wildcards() const
gaddress.cpp	505	keep	GNet::AddressStorage::AddressStorage() : m_imp(std::make_unique<AddressStorageImp>())
gaddress.cpp	519	keep	GNet::AddressStorage::~AddressStorage()
gaddress.cpp	522	keep	sockaddr * GNet::AddressStorage::p1()
gaddress.cpp	527	keep	socklen_t * GNet::AddressStorage::p2()
gaddress.cpp	532	keep	const sockaddr * GNet::AddressStorage::p() const
gaddress.cpp	537	keep	socklen_t GNet::AddressStorage::n() const
gaddress.cpp	546	remove	int GNet::inet_pton_imp( int f , const char * p , void * result )
gaddress.cpp	584	remove	const char * GNet::inet_ntop_imp( int f , void * ap , char * buffer , std::size_t n )
gaddress4.cpp	44	keep	unsigned short GNet::Address4::af() noexcept
gaddress4.cpp	49	keep	int GNet::Address4::domain() noexcept
gaddress4.cpp	54	keep	GNet::Address4::Address4( std::nullptr_t ) : m_inet{}
gaddress4.cpp	61	keep	GNet::Address4::Address4( unsigned int port ) : Address4(nullptr)
gaddress4.cpp	69	keep	GNet::Address4::Address4( unsigned int port , int /*loopback_overload*/ ) : Address4(nullptr)
gaddress4.cpp	77	keep	GNet::Address4::Address4( const sockaddr * addr , socklen_t len ) : Address4(nullptr)
gaddress4.cpp	88	keep	GNet::Address4::Address4( const std::string & host_part , const std::string & port_part ) : Address4(nullptr)
gaddress4.cpp	98	keep	GNet::Address4::Address4( const std::string & display_string ) : Address4(nullptr)
gaddress4.cpp	106	keep	const char * GNet::Address4::setAddress( sockaddr_type & inet , G::string_view display_string )
gaddress4.cpp	121	keep	const char * GNet::Address4::setHostAddress( sockaddr_type & inet , G::string_view host_part )
gaddress4.cpp	131	keep	void GNet::Address4::setPort( unsigned int port )
gaddress4.cpp	138	keep	const char * GNet::Address4::setPort( sockaddr_type & inet , G::string_view port_part )
gaddress4.cpp	145	keep	const char * GNet::Address4::setPort( sockaddr_type & inet , unsigned int port )
gaddress4.cpp	153	keep	bool GNet::Address4::setZone( const std::string & /*ipv6_zone_name_or_scope_id*/ )
gaddress4.cpp	158	keep	void GNet::Address4::setScopeId( unsigned long /*ipv6_scope_id*/ )
gaddress4.cpp	162	keep	std::string GNet::Address4::displayString( bool /*ipv6_with_scope*/ ) const
gaddress4.cpp	170	keep	std::string GNet::Address4::hostPartString() const
gaddress4.cpp	181	keep	std::string GNet::Address4::queryString() const
gaddress4.cpp	188	keep	bool GNet::Address4::validData( const sockaddr * addr , socklen_t len )
gaddress4.cpp	193	keep	bool GNet::Address4::validString( const std::string & s , std::string * reason_p )
gaddress4.cpp	202	keep	bool GNet::Address4::validStrings( const std::string & host_part , const std::string & port_part , std::string * reason_p )
gaddress4.cpp	214	keep	bool GNet::Address4::validPort( unsigned int port )
gaddress4.cpp	221	keep	bool GNet::Address4::same( const Address4 & other , bool /*ipv6_compare_with_scope*/ ) const
gaddress4.cpp	230	keep	bool GNet::Address4::sameHostPart( const Address4 & other ) const
gaddress4.cpp	238	keep	bool GNet::Address4::sameAddr( const ::in_addr & a , const ::in_addr & b )
gaddress4.cpp	243	keep	unsigned int GNet::Address4::port() const
gaddress4.cpp	248	keep	unsigned long GNet::Address4::scopeId( unsigned long default_ ) const
gaddress4.cpp	253	remove	const sockaddr * GNet::Address4::address() const
gaddress4.cpp	258	keep	sockaddr * GNet::Address4::address()
gaddress4.cpp	263	keep	socklen_t GNet::Address4::length() noexcept
gaddress4.cpp	268	keep	G::StringArray GNet::Address4::wildcards() const
gaddress4.cpp	350	keep	void GNet::Address4::add( G::StringArray & result , G::string_view head , unsigned int n , const char * tail )
gaddress4.cpp	355	keep	void GNet::Address4::add( G::StringArray & result , unsigned int n , const char * tail )
gaddress4.cpp	360	keep	void GNet::Address4::add( G::StringArray & result , G::string_view head , const char * tail )
gaddress4.cpp	365	keep	void GNet::Address4::add( G::StringArray & result , const char * tail )
gaddress4.cpp	370	keep	bool GNet::Address4::format( G::string_view s )
gaddress4.cpp	391	keep	unsigned int GNet::Address4::bits() const
gaddress4.cpp	400	keep	bool GNet::Address4::isLocal( std::string & reason ) const
gaddress4.cpp	415	keep	bool GNet::Address4::isLoopback() const
gaddress4.cpp	421	keep	bool GNet::Address4::isLinkLocal() const
gaddress4.cpp	427	keep	bool GNet::Address4::isUniqueLocal() const
gaddress4.cpp	436	keep	bool GNet::Address4::isMulticast() const
gaddress4.cpp	442	keep	bool GNet::Address4::isAny() const
gaddress6.cpp	46	keep	unsigned short GNet::Address6::af() noexcept
gaddress6.cpp	51	keep	int GNet::Address6::domain() noexcept
gaddress6.cpp	56	keep	GNet::Address6::Address6( std::nullptr_t ) : m_inet{}
gaddress6.cpp	65	keep	GNet::Address6::Address6( unsigned int port ) : Address6(nullptr)
gaddress6.cpp	73	keep	GNet::Address6::Address6( unsigned int port , int /*loopback_overload*/ ) : Address6(nullptr)
gaddress6.cpp	81	keep	GNet::Address6::Address6( const sockaddr * addr , socklen_t len , bool ipv6_scope_id_fixup ) : Address6(nullptr)
gaddress6.cpp	101	keep	GNet::Address6::Address6( const std::string & host_part , const std::string & port_part ) : Address6(nullptr)
gaddress6.cpp	111	keep	GNet::Address6::Address6( const std::string & display_string ) : Address6(nullptr)
gaddress6.cpp	119	keep	const char * GNet::Address6::setAddress( sockaddr_type & inet , const std::string & display_string )
gaddress6.cpp	134	keep	const char * GNet::Address6::setHostAddress( sockaddr_type & inet , const std::string & host_part )
gaddress6.cpp	160	keep	void GNet::Address6::setPort( unsigned int port )
gaddress6.cpp	167	keep	const char * GNet::Address6::setPort( sockaddr_type & inet , const std::string & port_part )
gaddress6.cpp	174	keep	const char * GNet::Address6::setPort( sockaddr_type & inet , unsigned int port )
gaddress6.cpp	182	keep	bool GNet::Address6::setZone( const std::string & zone )
gaddress6.cpp	187	keep	bool GNet::Address6::setZone( sockaddr_type & inet , const std::string & zone )
gaddress6.cpp	205	keep	void GNet::Address6::setScopeId( unsigned long ipv6_scope_id )
gaddress6.cpp	210	keep	std::string GNet::Address6::displayString( bool ipv6_with_scope_id ) const
gaddress6.cpp	220	keep	std::string GNet::Address6::hostPartString() const
gaddress6.cpp	231	keep	std::string GNet::Address6::queryString() const
gaddress6.cpp	243	keep	bool GNet::Address6::validData( const sockaddr * addr , socklen_t len )
gaddress6.cpp	248	keep	bool GNet::Address6::validString( const std::string & s , std::string * reason_p )
gaddress6.cpp	257	keep	bool GNet::Address6::validStrings( const std::string & host_part , const std::string & port_part , std::string * reason_p )
gaddress6.cpp	269	remove	bool GNet::Address6::validPort( unsigned int port )
gaddress6.cpp	276	keep	bool GNet::Address6::same( const Address6 & other , bool with_scope ) const
gaddress6.cpp	286	keep	bool GNet::Address6::sameHostPart( const Address6 & other , bool with_scope ) const
gaddress6.cpp	295	keep	bool GNet::Address6::sameAddr( const ::in6_addr & a , const ::in6_addr & b )
gaddress6.cpp	305	keep	unsigned int GNet::Address6::port() const
gaddress6.cpp	310	keep	unsigned long GNet::Address6::scopeId( unsigned long /*default*/ ) const
gaddress6.cpp	315	remove	const sockaddr * GNet::Address6::address() const
gaddress6.cpp	322	keep	sockaddr * GNet::Address6::address()
gaddress6.cpp	327	keep	socklen_t GNet::Address6::length() noexcept
gaddress6.cpp	397	keep	G::StringArray GNet::Address6::wildcards() const
gaddress6.cpp	421	keep	unsigned int GNet::Address6::bits() const
gaddress6.cpp	431	keep	bool GNet::Address6::isLocal( std::string & reason ) const
gaddress6.cpp	446	keep	bool GNet::Address6::isLoopback() const
gaddress6.cpp	454	keep	bool GNet::Address6::isLinkLocal() const
gaddress6.cpp	463	keep	bool GNet::Address6::isMulticast() const
gaddress6.cpp	468	keep	bool GNet::Address6::isUniqueLocal() const
gaddress6.cpp	477	keep	bool GNet::Address6::isAny() const
gaddresslocal_unix.cpp	68	keep	unsigned short GNet::AddressLocal::af() noexcept
gaddresslocal_unix.cpp	73	keep	int GNet::AddressLocal::domain() noexcept
gaddresslocal_unix.cpp	78	keep	GNet::AddressLocal::AddressLocal( std::nullptr_t ) : m_local{} , m_size(AddressLocalImp::minsize())
gaddresslocal_unix.cpp	88	keep	GNet::AddressLocal::AddressLocal( unsigned int /*port*/ ) : AddressLocal(nullptr)
gaddresslocal_unix.cpp	93	keep	GNet::AddressLocal::AddressLocal( unsigned int /*port*/ , int /*loopback_overload*/ ) : AddressLocal(nullptr)
gaddresslocal_unix.cpp	98	keep	GNet::AddressLocal::AddressLocal( const sockaddr * addr , socklen_t len ) : AddressLocal(nullptr)
gaddresslocal_unix.cpp	148	keep	GNet::AddressLocal::AddressLocal( const std::string & host_part ) : AddressLocal(nullptr)
gaddresslocal_unix.cpp	167	keep	std::string GNet::AddressLocal::path() const
gaddresslocal_unix.cpp	185	keep	void GNet::AddressLocal::setPort( unsigned int /*port*/ )
gaddresslocal_unix.cpp	189	keep	bool GNet::AddressLocal::setZone( const std::string & /*ipv6_zone_name_or_scope_id*/ )
gaddresslocal_unix.cpp	194	keep	void GNet::AddressLocal::setScopeId( unsigned long /*ipv6_scope_id*/ )
gaddresslocal_unix.cpp	198	keep	std::string GNet::AddressLocal::displayString( bool /*ipv6_with_scope*/ ) const
gaddresslocal_unix.cpp	203	keep	std::string GNet::AddressLocal::hostPartString() const
gaddresslocal_unix.cpp	208	keep	std::string GNet::AddressLocal::queryString() const
gaddresslocal_unix.cpp	213	keep	bool GNet::AddressLocal::validData( const sockaddr * addr , socklen_t len )
gaddresslocal_unix.cpp	218	keep	bool GNet::AddressLocal::validString( const std::string & path , std::string * reason_p )
gaddresslocal_unix.cpp	234	keep	bool GNet::AddressLocal::validStrings( const std::string & host_part , const std::string & /*port_part*/ , std::string * reason_p )
gaddresslocal_unix.cpp	240	remove	bool GNet::AddressLocal::validPort( unsigned int /*port*/ )
gaddresslocal_unix.cpp	245	keep	bool GNet::AddressLocal::same( const AddressLocal & other , bool /*ipv6_compare_with_scope*/ ) const
gaddresslocal_unix.cpp	254	keep	bool GNet::AddressLocal::sameHostPart( const AddressLocal & other ) const
gaddresslocal_unix.cpp	259	keep	unsigned int GNet::AddressLocal::port() const
gaddresslocal_unix.cpp	264	keep	unsigned long GNet::AddressLocal::scopeId( unsigned long default_ ) const
gaddresslocal_unix.cpp	269	remove	const sockaddr * GNet::AddressLocal::address() const
gaddresslocal_unix.cpp	274	keep	sockaddr * GNet::AddressLocal::address()
gaddresslocal_unix.cpp	279	keep	socklen_t GNet::AddressLocal::length() const noexcept
gaddresslocal_unix.cpp	284	keep	G::StringArray GNet::AddressLocal::wildcards() const
gaddresslocal_unix.cpp	289	remove	bool GNet::AddressLocal::format( const std::string & )
gaddresslocal_unix.cpp	294	keep	bool GNet::AddressLocal::isLocal( std::string & ) const
gaddresslocal_unix.cpp	299	keep	bool GNet::AddressLocal::isLoopback() const
gaddresslocal_unix.cpp	304	keep	bool GNet::AddressLocal::isLinkLocal() const
gaddresslocal_unix.cpp	309	keep	bool GNet::AddressLocal::isUniqueLocal() const
gaddresslocal_unix.cpp	314	keep	bool GNet::AddressLocal::isMulticast() const
gaddresslocal_unix.cpp	319	keep	bool GNet::AddressLocal::isAny() const
gaddresslocal_unix.cpp	324	keep	unsigned int GNet::AddressLocal::bits() const
gclient.cpp	37	keep	GNet::Client::Client( ExceptionSink es , const Location & remote , const Config & config ) : m_es(es) , m_config(config) , m_line_buffer(config.line_buffer_config) , m_remote_location(remote) , m_state(State::Idle) , m_finished(false) , m_has_connected(false) , m_start_timer(*this,&GNet::Client::onStartTimeout,es) , m_connect_timer(*this,&GNet::Client::onConnectTimeout,es) , m_connected_timer(*this,&GNet::Client::onConnectedTimeout,es) , m_response_timer(*this,&GNet::Client::onResponseTimeout,es) , m_idle_timer(*this,&GNet::Client::onIdleTimeout,es)
gclient.cpp	57	keep	GNet::Client::~Client()
gclient.cpp	62	remove	void GNet::Client::disconnect()
gclient.cpp	80	keep	G::Slot::Signal<const std::string&,const std::string&,const std::string&> & GNet::Client::eventSignal() noexcept
gclient.cpp	85	remove	GNet::Location GNet::Client::remoteLocation() const
gclient.cpp	90	keep	GNet::StreamSocket & GNet::Client::socket()
gclient.cpp	97	keep	const GNet::StreamSocket & GNet::Client::socket() const
gclient.cpp	104	keep	void GNet::Client::clearInput()
gclient.cpp	110	keep	void GNet::Client::onStartTimeout()
gclient.cpp	116	keep	void GNet::Client::connect()
gclient.cpp	155	keep	void GNet::Client::onResolved( std::string error , Location location )
gclient.cpp	166	keep	void GNet::Client::startConnecting()
gclient.cpp	210	keep	void GNet::Client::finish()
gclient.cpp	224	keep	bool GNet::Client::finished() const
gclient.cpp	229	keep	bool GNet::Client::hasConnected() const
gclient.cpp	234	keep	void GNet::Client::doOnDelete( const std::string & reason , bool done )
gclient.cpp	239	keep	void GNet::Client::emit( const std::string & action )
gclient.cpp	244	keep	void GNet::Client::onConnectTimeout()
gclient.cpp	252	keep	void GNet::Client::onResponseTimeout()
gclient.cpp	260	keep	void GNet::Client::onIdleTimeout()
gclient.cpp	267	keep	void GNet::Client::onConnectedTimeout()
gclient.cpp	273	keep	void GNet::Client::writeEvent()
gclient.cpp	279	keep	void GNet::Client::onWriteable()
gclient.cpp	339	keep	void GNet::Client::doOnConnect()
gclient.cpp	347	keep	void GNet::Client::otherEvent( EventHandler::Reason reason )
gclient.cpp	355	keep	void GNet::Client::readEvent()
gclient.cpp	375	keep	void GNet::Client::onData( const char * data , std::size_t size )
gclient.cpp	387	keep	bool GNet::Client::onDataImp( const char * data , std::size_t size , std::size_t eolsize , std::size_t linesize , char c0 )
gclient.cpp	396	keep	bool GNet::Client::connected() const
gclient.cpp	401	keep	void GNet::Client::bindLocalAddress( const Address & local_address )
gclient.cpp	413	keep	void GNet::Client::setState( State new_state )
gclient.cpp	427	keep	GNet::Address GNet::Client::localAddress() const
gclient.cpp	432	keep	GNet::Address GNet::Client::peerAddress() const
gclient.cpp	444	keep	std::string GNet::Client::peerAddressString( bool with_port ) const
gclient.cpp	457	keep	std::string GNet::Client::connectionState() const
gclient.cpp	465	keep	std::string GNet::Client::peerCertificate() const
gclient.cpp	470	remove	bool GNet::Client::secureConnectCapable() const
gclient.cpp	475	keep	void GNet::Client::secureConnect()
gclient.cpp	482	keep	bool GNet::Client::send( const std::string & data )
gclient.cpp	489	keep	bool GNet::Client::send( G::string_view data )
gclient.cpp	496	remove	bool GNet::Client::send( const std::vector<G::string_view> & data , std::size_t offset )
gclient.cpp	505	remove	GNet::LineBufferState GNet::Client::lineBuffer() const
gclient.cpp	510	keep	void GNet::Client::onPeerDisconnect()
gclient.cpp	516	remove	GNet::Client::Config & GNet::Client::Config::set_all_timeouts( unsigned int all_timeouts ) noexcept
gclientptr.cpp	24	keep	GNet::ClientPtrBase::ClientPtrBase()
gclientptr.cpp	27	keep	void GNet::ClientPtrBase::connectSignals( Client & client )
gclientptr.cpp	33	keep	G::Slot::Signal<const std::string&> & GNet::ClientPtrBase::deletedSignal()
gclientptr.cpp	38	keep	G::Slot::Signal<const std::string&,const std::string&,const std::string&> & GNet::ClientPtrBase::eventSignal()
gclientptr.cpp	43	keep	G::Slot::Signal<const std::string&> & GNet::ClientPtrBase::deleteSignal()
gclientptr.cpp	48	keep	void GNet::ClientPtrBase::disconnectSignals() noexcept
gclientptr.cpp	55	keep	void GNet::ClientPtrBase::eventSlot( const std::string & s1 , const std::string & s2 , const std::string & s3 )
gclientptr.cpp	60	remove	void GNet::ClientPtrBase::rebind() noexcept
gdescriptor_unix.cpp	24	keep	GNet::Descriptor::Descriptor() noexcept : m_fd(-1)
gdescriptor_unix.cpp	29	keep	bool GNet::Descriptor::valid() const noexcept
gdescriptor_unix.cpp	34	remove	HANDLE GNet::Descriptor::h() const noexcept
gdescriptor_unix.cpp	39	keep	void GNet::Descriptor::streamOut( std::ostream & stream ) const
gdnsbl_enabled.cpp	44	keep	GNet::Dnsbl::Dnsbl( std::function<void(bool)> callback , ExceptionSink es , G::string_view config ) : m_imp(std::make_unique<DnsblImp>(callback,es,config))
gdnsbl_enabled.cpp	49	keep	GNet::Dnsbl::~Dnsbl()
gdnsbl_enabled.cpp	52	keep	void GNet::Dnsbl::start( const Address & address )
gdnsbl_enabled.cpp	57	keep	bool GNet::Dnsbl::busy() const
gdnsbl_enabled.cpp	62	keep	void GNet::Dnsbl::checkConfig( const std::string & config )
gdnsblock.cpp	66	keep	GNet::DnsBlock::DnsBlock( DnsBlockCallback & callback , ExceptionSink es , G::string_view config ) : m_callback(callback) , m_es(es) , m_timer(*this,&DnsBlock::onTimeout,es) , m_threshold(1U) , m_allow_on_timeout(true) , m_dns_server(Address::defaultAddress()) , m_timeout(0) , m_id_base(0U)
gdnsblock.cpp	80	keep	void GNet::DnsBlock::checkConfig( const std::string & config )
gdnsblock.cpp	92	keep	void GNet::DnsBlock::configure( G::string_view config )
gdnsblock.cpp	97	keep	void GNet::DnsBlock::configureImp( G::string_view config , DnsBlock * p )
gdnsblock.cpp	115	keep	void GNet::DnsBlock::configure( const Address & dns_server , std::size_t threshold , bool allow_on_timeout , G::TimeInterval timeout , const G::StringArray & servers )
gdnsblock.cpp	125	keep	GNet::Address GNet::DnsBlock::nameServerAddress( const std::string & s )
gdnsblock.cpp	140	keep	void GNet::DnsBlock::start( const Address & address )
gdnsblock.cpp	191	keep	bool GNet::DnsBlock::busy() const
gdnsblock.cpp	196	keep	void GNet::DnsBlock::readEvent()
gdnsblock.cpp	243	keep	void GNet::DnsBlock::onTimeout()
gdnsblock.cpp	252	keep	std::string GNet::DnsBlock::queryString( const Address & address )
gdnsblock.cpp	257	keep	void GNet::DnsBlockResult::log() const
gdnsblock.cpp	281	keep	void GNet::DnsBlockResult::warn() const
gdnsblock.cpp	297	keep	bool GNet::DnsBlockResult::allow() const
gdnsblock.cpp	302	remove	bool GNet::DnsBlockResult::deny() const
gdnsblock.cpp	307	keep	std::size_t GNet::DnsBlock::countResponders( const ResultList & list )
gdnsblock.cpp	313	keep	std::size_t GNet::DnsBlock::countDeniers( const ResultList & list )
gdnsblock.cpp	319	keep	G::StringArray GNet::DnsBlockResult::deniers() const
gdnsblock.cpp	325	keep	G::StringArray GNet::DnsBlockResult::laggards() const
gdnsmessage.cpp	33	keep	GNet::DnsMessageRequest::DnsMessageRequest( const std::string & type , const std::string & hostname , unsigned int id )
gdnsmessage.cpp	51	keep	void GNet::DnsMessageRequest::addDomainName( const std::string & domain , char sep )
gdnsmessage.cpp	61	keep	void GNet::DnsMessageRequest::addLabel( G::string_view data )
gdnsmessage.cpp	69	keep	void GNet::DnsMessageRequest::addWord( unsigned int n )
gdnsmessage.cpp	75	keep	void GNet::DnsMessageRequest::addByte( unsigned int n )
gdnsmessage.cpp	80	keep	const char * GNet::DnsMessageRequest::p() const
gdnsmessage.cpp	85	keep	std::size_t GNet::DnsMessageRequest::n() const
gdnsmessage.cpp	92	keep	GNet::DnsMessage::DnsMessage()
gdnsmessage.cpp	95	keep	GNet::DnsMessage::DnsMessage( const std::vector<char> & buffer ) : m_buffer(buffer)
gdnsmessage.cpp	100	keep	GNet::DnsMessage::DnsMessage( const char * p , std::size_t n ) : m_buffer(p,p+n)
gdnsmessage.cpp	105	keep	bool GNet::DnsMessage::valid() const
gdnsmessage.cpp	110	keep	const char * GNet::DnsMessage::p() const noexcept
gdnsmessage.cpp	115	keep	std::size_t GNet::DnsMessage::n() const noexcept
gdnsmessage.cpp	120	remove	GNet::DnsMessage GNet::DnsMessage::empty()
gdnsmessage.cpp	125	keep	GNet::DnsMessage GNet::DnsMessage::request( const std::string & type , const std::string & hostname , unsigned int id )
gdnsmessage.cpp	131	keep	std::vector<GNet::Address> GNet::DnsMessage::addresses() const
gdnsmessage.cpp	141	keep	unsigned int GNet::DnsMessage::byte( unsigned int i ) const
gdnsmessage.cpp	149	keep	unsigned int GNet::DnsMessage::word( unsigned int i ) const
gdnsmessage.cpp	154	keep	std::string GNet::DnsMessage::span( unsigned int begin , unsigned int end ) const
gdnsmessage.cpp	161	keep	unsigned int GNet::DnsMessage::ID() const
gdnsmessage.cpp	166	keep	bool GNet::DnsMessage::QR() const
gdnsmessage.cpp	171	keep	unsigned int GNet::DnsMessage::OPCODE() const
gdnsmessage.cpp	176	keep	bool GNet::DnsMessage::AA() const
gdnsmessage.cpp	181	keep	bool GNet::DnsMessage::TC() const
gdnsmessage.cpp	186	remove	bool GNet::DnsMessage::RD() const
gdnsmessage.cpp	191	remove	bool GNet::DnsMessage::RA() const
gdnsmessage.cpp	196	remove	unsigned int GNet::DnsMessage::Z() const
gdnsmessage.cpp	201	keep	unsigned int GNet::DnsMessage::RCODE() const
gdnsmessage.cpp	206	keep	unsigned int GNet::DnsMessage::QDCOUNT() const
gdnsmessage.cpp	211	keep	unsigned int GNet::DnsMessage::ANCOUNT() const
gdnsmessage.cpp	216	remove	unsigned int GNet::DnsMessage::NSCOUNT() const
gdnsmessage.cpp	221	remove	unsigned int GNet::DnsMessage::ARCOUNT() const
gdnsmessage.cpp	226	keep	GNet::DnsMessage GNet::DnsMessage::rejection( const DnsMessage & message , unsigned int rcode )
gdnsmessage.cpp	233	keep	void GNet::DnsMessage::convertToResponse( unsigned int rcode , bool authoritative )
gdnsmessage.cpp	256	keep	void GNet::DnsMessage::addWord( unsigned int n )
gdnsmessage.cpp	262	keep	void GNet::DnsMessage::addByte( unsigned int n )
gdnsmessage.cpp	267	keep	GNet::DnsMessageQuestion GNet::DnsMessage::question( unsigned int record_index ) const
gdnsmessage.cpp	278	keep	GNet::DnsMessageRR GNet::DnsMessage::rr( unsigned int record_index ) const
gdnsmessage.cpp	294	keep	GNet::Address GNet::DnsMessage::rrAddress( unsigned int record_index ) const
gdnsmessage.cpp	301	keep	GNet::DnsMessageQuestion::DnsMessageQuestion( const DnsMessage & msg , unsigned int offset ) : m_size(0U)
gdnsmessage.cpp	311	keep	unsigned int GNet::DnsMessageQuestion::size() const
gdnsmessage.cpp	316	keep	std::string GNet::DnsMessageQuestion::qname() const
gdnsmessage.cpp	321	keep	unsigned int GNet::DnsMessageQuestion::qtype() const
gdnsmessage.cpp	326	remove	unsigned int GNet::DnsMessageQuestion::qclass() const
gdnsmessage.cpp	333	keep	unsigned int GNet::DnsMessageNameParser::size( const DnsMessage & msg , unsigned int offset_in )
gdnsmessage.cpp	351	keep	std::string GNet::DnsMessageNameParser::read( const DnsMessage & msg , unsigned int offset_in )
gdnsmessage.cpp	388	keep	GNet::DnsMessageRR::DnsMessageRR( const DnsMessage & msg , unsigned int offset ) : m_msg(msg) , m_offset(offset) , m_size(0U) , m_type(0U) , m_class(0U) , m_rdata_offset(0U) , m_rdata_size(0U)
gdnsmessage.cpp	412	remove	unsigned int GNet::DnsMessageRR::type() const
gdnsmessage.cpp	417	remove	unsigned int GNet::DnsMessageRR::class_() const
gdnsmessage.cpp	422	keep	bool GNet::DnsMessageRR::isa( G::string_view type_name ) const noexcept
gdnsmessage.cpp	427	keep	unsigned int GNet::DnsMessageRR::size() const
gdnsmessage.cpp	432	remove	std::string GNet::DnsMessageRR::name() const
gdnsmessage.cpp	437	keep	std::string GNet::DnsMessageRR::rdataDname( unsigned int rdata_offset ) const
gdnsmessage.cpp	442	remove	std::string GNet::DnsMessageRR::rdataDname( unsigned int * rdata_offset_p ) const
gdnsmessage.cpp	449	remove	std::string GNet::DnsMessageRR::rdataSpan( unsigned int rdata_begin ) const
gdnsmessage.cpp	454	keep	std::string GNet::DnsMessageRR::rdataSpan( unsigned int rdata_begin , unsigned int rdata_end ) const
gdnsmessage.cpp	459	remove	unsigned int GNet::DnsMessageRR::rdataOffset() const
gdnsmessage.cpp	464	keep	unsigned int GNet::DnsMessageRR::rdataSize() const
gdnsmessage.cpp	469	keep	unsigned int GNet::DnsMessageRR::rdataByte( unsigned int i ) const
gdnsmessage.cpp	474	keep	unsigned int GNet::DnsMessageRR::rdataWord( unsigned int i ) const
gdnsmessage.cpp	479	keep	GNet::Address GNet::DnsMessageRR::address( unsigned int port , std::nothrow_t ) const
gdnsmessage.cpp	485	keep	GNet::Address GNet::DnsMessageRR::address( unsigned int port ) const
gdnsmessage.cpp	494	keep	GNet::Address GNet::DnsMessageRR::addressImp( unsigned int port , bool & ok ) const
gdnsmessage.cpp	553	keep	unsigned int GNet::DnsMessageRecordType::value( G::string_view type_name , std::nothrow_t ) noexcept
gdnsmessage.cpp	564	keep	unsigned int GNet::DnsMessageRecordType::value( G::string_view type_name )
gdnsmessage.cpp	572	keep	std::string GNet::DnsMessageRecordType::name( unsigned int type_value )
geventhandler.cpp	27	keep	GNet::EventHandler::EventHandler()
geventhandler.cpp	30	keep	GNet::EventHandler::~EventHandler()
geventhandler.cpp	39	keep	void GNet::EventHandler::readEvent()
geventhandler.cpp	44	keep	void GNet::EventHandler::writeEvent()
geventhandler.cpp	49	keep	void GNet::EventHandler::otherEvent( EventHandler::Reason reason )
geventhandler.cpp	54	keep	std::string GNet::EventHandler::str( EventHandler::Reason reason )
geventloggingcontext.cpp	28	keep	GNet::EventLoggingContext::EventLoggingContext( ExceptionSource * esrc ) : m_outer(m_inner) , m_esrc(esrc)
geventloggingcontext.cpp	36	keep	GNet::EventLoggingContext::EventLoggingContext( const std::string & s ) : m_outer(m_inner) , m_esrc(nullptr) , m_s(s)
geventloggingcontext.cpp	45	keep	GNet::EventLoggingContext::~EventLoggingContext() noexcept
geventloggingcontext.cpp	54	keep	std::string GNet::EventLoggingContext::fn( void * vp )
geventloggingcontext.cpp	62	keep	std::string GNet::EventLoggingContext::str()
geventloop.cpp	28	keep	GNet::EventLoop::EventLoop()
geventloop.cpp	34	keep	GNet::EventLoop::~EventLoop()
geventloop.cpp	40	keep	GNet::EventLoop * GNet::EventLoop::ptr() noexcept
geventloop.cpp	45	keep	GNet::EventLoop & GNet::EventLoop::instance()
geventloop.cpp	52	keep	bool GNet::EventLoop::exists()
geventloop.cpp	57	remove	void GNet::EventLoop::stop( const G::SignalSafe & signal_safe )
geventloop_epoll.cpp	99	keep	std::unique_ptr<GNet::EventLoop> GNet::EventLoop::create()
geventloop_epoll.cpp	106	keep	GNet::EventLoopImp::EventLoopImp() : m_fd(epoll_create1(EPOLL_CLOEXEC))
geventloop_epoll.cpp	113	keep	GNet::EventLoopImp::~EventLoopImp()
geventloop_epoll.cpp	118	keep	void GNet::EventLoopImp::disarm( ExceptionHandler * p ) noexcept
geventloop_epoll.cpp	127	keep	bool GNet::EventLoopImp::running() const
geventloop_epoll.cpp	132	keep	std::string GNet::EventLoopImp::run()
geventloop_epoll.cpp	146	keep	void GNet::EventLoopImp::runOnce()
geventloop_epoll.cpp	188	keep	int GNet::EventLoopImp::ms() const
geventloop_epoll.cpp	207	keep	int GNet::EventLoopImp::ms( unsigned int s , unsigned int us )
geventloop_epoll.cpp	217	keep	void GNet::EventLoopImp::quit( const std::string & reason )
geventloop_epoll.cpp	223	keep	void GNet::EventLoopImp::quit( const G::SignalSafe & )
geventloop_epoll.cpp	228	keep	GNet::EventLoopImp::ListItem * GNet::EventLoopImp::find( Descriptor fd ) noexcept
geventloop_epoll.cpp	234	keep	GNet::EventLoopImp::ListItem & GNet::EventLoopImp::findOrCreate( Descriptor fd )
geventloop_epoll.cpp	247	keep	void GNet::EventLoopImp::addRead( Descriptor fd , EventHandler & handler , ExceptionSink es )
geventloop_epoll.cpp	258	keep	void GNet::EventLoopImp::addWrite( Descriptor fd , EventHandler & handler , ExceptionSink es )
geventloop_epoll.cpp	269	keep	void GNet::EventLoopImp::addOther( Descriptor , EventHandler & , ExceptionSink )
geventloop_epoll.cpp	274	keep	void GNet::EventLoopImp::dropRead( Descriptor fd ) noexcept
geventloop_epoll.cpp	285	keep	void GNet::EventLoopImp::dropWrite( Descriptor fd ) noexcept
geventloop_epoll.cpp	296	keep	void GNet::EventLoopImp::dropOther( Descriptor ) noexcept
geventloop_epoll.cpp	301	keep	void GNet::EventLoopImp::drop( Descriptor fd ) noexcept
geventloop_epoll.cpp	314	keep	void GNet::EventLoopImp::fdupdate( int fd , unsigned int old_events , unsigned int new_events )
geventloop_epoll.cpp	324	keep	void GNet::EventLoopImp::fdupdate( int fd , unsigned int /*old_events*/ , unsigned int new_events , std::nothrow_t ) noexcept
geventloop_epoll.cpp	332	keep	void GNet::EventLoopImp::fdadd( int fd , unsigned int events )
geventloop_epoll.cpp	345	keep	void GNet::EventLoopImp::fdmodify( int fd , unsigned int events )
geventloop_epoll.cpp	358	keep	int GNet::EventLoopImp::fdmodify( int fd , unsigned int events , std::nothrow_t ) noexcept
geventloop_epoll.cpp	368	keep	void GNet::EventLoopImp::fdremove( int fd ) noexcept
gexceptionhandler.cpp	26	keep	GNet::ExceptionHandler::~ExceptionHandler()
gexceptionsink.cpp	44	keep	GNet::ExceptionSink::ExceptionSink() noexcept
gexceptionsink.cpp	47	keep	GNet::ExceptionSink::ExceptionSink( ExceptionHandler & eh , ExceptionSource * esrc ) noexcept : m_eh(&eh) , m_esrc(esrc)
gexceptionsink.cpp	53	keep	GNet::ExceptionSink::ExceptionSink( ExceptionHandler * eh , ExceptionSource * esrc ) noexcept : m_eh(eh) , m_esrc(esrc)
gexceptionsink.cpp	59	keep	GNet::ExceptionSink GNet::ExceptionSink::logOnly()
gexceptionsink.cpp	65	keep	GNet::ExceptionHandler * GNet::ExceptionSink::eh() const noexcept
gexceptionsink.cpp	70	keep	GNet::ExceptionSource * GNet::ExceptionSink::esrc() const noexcept
gexceptionsink.cpp	75	keep	void GNet::ExceptionSink::call( std::exception & e , bool done )
gexceptionsink.cpp	81	keep	void GNet::ExceptionSink::reset() noexcept
gexceptionsink.cpp	87	keep	bool GNet::ExceptionSink::set() const noexcept
gexceptionsink.cpp	94	remove	GNet::ExceptionSinkUnbound::ExceptionSinkUnbound( ExceptionHandler & eh ) : m_eh(&eh)
gexceptionsink.cpp	99	keep	GNet::ExceptionSinkUnbound::ExceptionSinkUnbound( ExceptionHandler * eh ) : m_eh(eh)
gexceptionsink.cpp	105	keep	GNet::ExceptionSink GNet::ExceptionSinkUnbound::bind( ExceptionSource * source ) const
gexceptionsource.cpp	25	keep	std::string GNet::ExceptionSource::exceptionSourceId() const
gexceptionsource.cpp	30	keep	GNet::ExceptionSource::~ExceptionSource()
gfutureevent_unix.cpp	84	keep	GNet::FutureEventImp::FutureEventImp( FutureEventHandler & handler , ExceptionSink es ) : m_handler(handler) , m_triggered(false)
gfutureevent_unix.cpp	100	keep	int GNet::FutureEventImp::init( int fd )
gfutureevent_unix.cpp	106	keep	GNet::FutureEventImp::~FutureEventImp()
gfutureevent_unix.cpp	115	keep	HANDLE GNet::FutureEventImp::handle() noexcept
gfutureevent_unix.cpp	122	keep	void GNet::FutureEventImp::receive()
gfutureevent_unix.cpp	128	keep	bool GNet::FutureEventImp::send( HANDLE handle , bool close ) noexcept
gfutureevent_unix.cpp	139	keep	void GNet::FutureEventImp::readEvent()
gfutureevent_unix.cpp	151	keep	GNet::FutureEvent::FutureEvent( FutureEventHandler & handler , ExceptionSink es ) : m_imp(std::make_unique<FutureEventImp>(handler,es))
gfutureevent_unix.cpp	156	keep	GNet::FutureEvent::~FutureEvent()
gfutureevent_unix.cpp	159	keep	bool GNet::FutureEvent::send( HANDLE handle , bool close ) noexcept
gfutureevent_unix.cpp	164	keep	HANDLE GNet::FutureEvent::handle() noexcept
ginterfaces_common.cpp	27	remove	GNet::Interfaces::Interfaces()
ginterfaces_common.cpp	30	keep	GNet::Interfaces::Interfaces( ExceptionSink es , InterfacesHandler & handler ) : m_es(es) , m_handler(&handler)
ginterfaces_common.cpp	36	keep	GNet::Interfaces::~Interfaces()
ginterfaces_common.cpp	39	keep	void GNet::Interfaces::load()
ginterfaces_common.cpp	48	remove	bool GNet::Interfaces::supported()
ginterfaces_common.cpp	53	keep	bool GNet::Interfaces::loaded() const
ginterfaces_common.cpp	58	remove	std::vector<GNet::Address> GNet::Interfaces::addresses( const std::string & name , unsigned int port , int af ) const
ginterfaces_common.cpp	65	keep	std::size_t GNet::Interfaces::addresses( std::vector<Address> & out , const std::string & name , unsigned int port , int af ) const
ginterfaces_common.cpp	88	remove	G::StringArray GNet::Interfaces::names( bool all ) const
ginterfaces_common.cpp	101	keep	GNet::Interfaces::const_iterator GNet::Interfaces::begin() const
ginterfaces_common.cpp	106	keep	GNet::Interfaces::const_iterator GNet::Interfaces::end() const
ginterfaces_common.cpp	111	keep	void GNet::Interfaces::readEvent()
ginterfaces_common.cpp	121	keep	void GNet::Interfaces::onFutureEvent()
ginterfaces_common.cpp	133	keep	GNet::Interfaces::Item::Item() : address(Address::defaultAddress())
glinebuffer.cpp	28	keep	GNet::LineBuffer::LineBuffer( const LineBufferConfig & config ) : m_auto(config.eol().empty()) , m_eol(config.eol()) , m_warn_limit(config.warn()) , m_fmin(config.fmin()) , m_expect(config.expect()) , m_warned(false) , m_pos(0U)
glinebuffer.cpp	39	keep	void GNet::LineBuffer::clear()
glinebuffer.cpp	50	keep	void GNet::LineBuffer::add( const char * data , std::size_t size )
glinebuffer.cpp	56	remove	void GNet::LineBuffer::add( const std::string & s )
glinebuffer.cpp	61	keep	void GNet::LineBuffer::extensionStart( const char * data , std::size_t size )
glinebuffer.cpp	67	keep	void GNet::LineBuffer::extensionEnd()
glinebuffer.cpp	73	keep	bool GNet::LineBuffer::more( bool fragments )
glinebuffer.cpp	143	keep	bool GNet::LineBuffer::peekmore() const
glinebuffer.cpp	148	keep	bool GNet::LineBuffer::trivial( std::size_t pos ) const
glinebuffer.cpp	154	keep	bool GNet::LineBuffer::detect()
glinebuffer.cpp	172	keep	void GNet::LineBuffer::expect( std::size_t n )
glinebuffer.cpp	177	keep	bool GNet::LineBuffer::transparent() const
glinebuffer.cpp	182	keep	std::string GNet::LineBuffer::eol() const
glinebuffer.cpp	187	keep	void GNet::LineBuffer::output( std::size_t size , std::size_t eolsize , bool force_next_is_start_of_line )
glinebuffer.cpp	203	keep	const char * GNet::LineBuffer::data() const
glinebuffer.cpp	209	keep	GNet::LineBufferState GNet::LineBuffer::state() const
glinebuffer.cpp	216	keep	GNet::LineBuffer::Output::Output()
glinebuffer.cpp	219	keep	std::size_t GNet::LineBuffer::Output::set( LineStore & in , std::size_t pos , std::size_t size , std::size_t eolsize )
glinebuffer.cpp	235	keep	GNet::LineBufferConfig::LineBufferConfig( const std::string & eol , std::size_t warn , std::size_t fmin , std::size_t expect ) : m_eol(eol) , m_warn(warn) , m_fmin(fmin) , m_expect(expect)
glinebuffer.cpp	244	remove	bool GNet::LineBufferConfig::operator==( const LineBufferConfig & other ) const
glinebuffer.cpp	253	keep	GNet::LineBufferConfig GNet::LineBufferConfig::transparent()
glinebuffer.cpp	260	keep	GNet::LineBufferConfig GNet::LineBufferConfig::newline()
glinebuffer.cpp	265	keep	GNet::LineBufferConfig GNet::LineBufferConfig::autodetect()
glinebuffer.cpp	270	keep	GNet::LineBufferConfig GNet::LineBufferConfig::crlf()
glinebuffer.cpp	275	keep	GNet::LineBufferConfig GNet::LineBufferConfig::smtp()
glinebuffer.cpp	280	keep	GNet::LineBufferConfig GNet::LineBufferConfig::pop()
glinebuffer.cpp	285	remove	GNet::LineBufferConfig GNet::LineBufferConfig::http()
glinestore.cpp	196	keep	GNet::LineStore::LineStore()
glinestore.cpp	199	keep	void GNet::LineStore::append( const std::string & s )
glinestore.cpp	205	keep	void GNet::LineStore::append( const char * data , std::size_t size )
glinestore.cpp	211	keep	void GNet::LineStore::extend( const char * data , std::size_t size )
glinestore.cpp	218	keep	void GNet::LineStore::clear()
glinestore.cpp	224	keep	void GNet::LineStore::consolidate()
glinestore.cpp	231	keep	void GNet::LineStore::discard( std::size_t n )
glinestore.cpp	276	keep	std::size_t GNet::LineStore::find( char c , std::size_t startpos ) const
glinestore.cpp	299	keep	std::size_t GNet::LineStore::find( const std::string & s , std::size_t startpos ) const
glinestore.cpp	332	keep	std::size_t GNet::LineStore::search( std::string::const_iterator begin , std::string::const_iterator end , std::size_t startpos ) const
glinestore.cpp	338	keep	std::size_t GNet::LineStore::findSubStringAtEnd( const std::string & s , std::size_t startpos ) const
glinestore.cpp	370	keep	const char * GNet::LineStore::data( std::size_t pos , std::size_t n ) const
glinestore.cpp	375	keep	const char * GNet::LineStore::dataimp( std::size_t pos , std::size_t n )
glinestore.cpp	405	remove	std::string GNet::LineStore::str() const
glinestore.cpp	413	keep	std::string GNet::LineStore::head( std::size_t n ) const
glocal.cpp	26	keep	std::string GNet::Local::hostname()
glocal.cpp	34	keep	std::string GNet::Local::canonicalName()
glocation.cpp	27	keep	GNet::Location::Location( const std::string & spec , int family ) : m_host(head(sockless(spec))) , m_service(tail(sockless(spec))) , m_address_valid(false) , m_address(Address::defaultAddress()) , m_family(family) , m_update_time(0U) , m_using_socks(false)
glocation.cpp	42	keep	GNet::Location::Location( const std::string & spec , int family , int ) : // nosocks() overload m_host(head(spec)) , m_service(tail(spec)) , m_address_valid(false) , m_address(Address::defaultAddress()) , m_family(family) , m_update_time(0U) , m_using_socks(false)
glocation.cpp	56	keep	GNet::Location::Location( const std::string & socks_server , const std::string & far_server , int family ) : // socks() overload m_host(head(socks_server)) , m_service(tail(socks_server)) , m_address_valid(false) , m_address(Address::defaultAddress()) , m_family(family) , m_update_time(0U) , m_using_socks(true) , m_socks_far_host(head(far_server)) , m_socks_far_port(tail(far_server))
glocation.cpp	76	keep	GNet::Location GNet::Location::nosocks( const std::string & spec , int family )
glocation.cpp	81	remove	GNet::Location GNet::Location::socks( const std::string & socks_server , const std::string & far_server )
glocation.cpp	86	keep	std::string GNet::Location::sockless( const std::string & s )
glocation.cpp	92	keep	bool GNet::Location::socksified( const std::string & s , std::string & far_host_out , std::string & far_port_out )
glocation.cpp	105	keep	std::string GNet::Location::head( const std::string & s )
glocation.cpp	114	keep	std::string GNet::Location::tail( const std::string & s )
glocation.cpp	119	keep	std::string GNet::Location::host() const
glocation.cpp	124	keep	std::string GNet::Location::service() const
glocation.cpp	129	keep	int GNet::Location::family() const
glocation.cpp	134	keep	bool GNet::Location::resolveTrivially()
glocation.cpp	146	keep	bool GNet::Location::resolved() const
glocation.cpp	151	keep	GNet::Address GNet::Location::address() const
glocation.cpp	156	keep	void GNet::Location::update( const Address & address , const std::string & name )
glocation.cpp	162	keep	bool GNet::Location::update( const Address & address , const std::string & name , std::nothrow_t )
glocation.cpp	181	keep	std::string GNet::Location::name() const
glocation.cpp	186	keep	std::string GNet::Location::displayString() const
glocation.cpp	203	remove	G::SystemTime GNet::Location::updateTime() const
glocation.cpp	208	keep	bool GNet::Location::socks() const
glocation.cpp	213	keep	unsigned int GNet::Location::socksFarPort() const
glocation.cpp	219	keep	std::string GNet::Location::socksFarHost() const
gmonitor.cpp	80	keep	GNet::Monitor * & GNet::Monitor::pthis() noexcept
gmonitor.cpp	86	keep	GNet::Monitor::Monitor() : m_imp(std::make_unique<MonitorImp>(*this))
gmonitor.cpp	93	keep	GNet::Monitor::~Monitor()
gmonitor.cpp	98	keep	GNet::Monitor * GNet::Monitor::instance()
gmonitor.cpp	103	keep	G::Slot::Signal<const std::string&,const std::string&> & GNet::Monitor::signal()
gmonitor.cpp	108	keep	void GNet::Monitor::addClient( const Connection & client )
gmonitor.cpp	117	keep	void GNet::Monitor::removeClient( const Connection & client ) noexcept
gmonitor.cpp	126	keep	void GNet::Monitor::addServerPeer( const Connection & server_peer )
gmonitor.cpp	136	keep	void GNet::Monitor::removeServerPeer( const Connection & server_peer ) noexcept
gmonitor.cpp	145	keep	void GNet::Monitor::addServer( const Listener & server )
gmonitor.cpp	154	keep	void GNet::Monitor::removeServer( const Listener & server ) noexcept
gmonitor.cpp	163	keep	void GNet::Monitor::report( std::ostream & s , const std::string & px , const std::string & eol ) const
gmonitor.cpp	168	remove	void GNet::Monitor::report( G::StringArray & out ) const
gmonitor.cpp	175	keep	GNet::MonitorImp::MonitorImp( Monitor & ) : m_client_adds(0UL) , m_client_removes(0UL) , m_server_peer_adds(0UL) , m_server_peer_removes(0UL)
gmonitor.cpp	183	keep	void GNet::MonitorImp::add( const Connection & connection , bool is_client )
gmonitor.cpp	195	keep	void GNet::MonitorImp::add( const Listener & server )
gmonitor.cpp	200	keep	void GNet::MonitorImp::emit( Signal & s , const char * a , const char * b ) noexcept
gmonitor.cpp	211	keep	void GNet::MonitorImp::remove( const Connection & connection , bool is_client ) noexcept
gmonitor.cpp	223	keep	void GNet::MonitorImp::remove( const Listener & server ) noexcept
gmonitor.cpp	228	keep	void GNet::MonitorImp::report( std::ostream & s , const std::string & px , const std::string & eol ) const
gmonitor.cpp	267	keep	void GNet::MonitorImp::report( G::StringArray & out ) const
gmonitor.cpp	291	keep	void GNet::MonitorImp::add( G::StringArray & out , const std::string & key , unsigned int value_1 , const std::string & suffix_1 , unsigned int value_2 , const std::string & suffix_2 )
gmonitor.cpp	298	keep	void GNet::MonitorImp::add( G::StringArray & out , const std::string & key , const std::string & value_1 , const std::string & suffix_1 , const std::string & value_2 , const std::string & suffix_2 )
gmonitor.cpp	305	keep	void GNet::MonitorImp::add( G::StringArray & out , const std::string & key , const std::string & value )
gmonitor.cpp	310	keep	void GNet::MonitorImp::add( G::StringArray & out , const std::string & key , const std::string & value_1 , const std::string & value_2 )
gmonitor.cpp	318	keep	std::string GNet::MonitorImp::join( const std::string & s1 , const std::string & s2 )
gmultiserver.cpp	70	keep	GNet::MultiServer::MultiServer( ExceptionSink es , const G::StringArray & listener_list , unsigned int port , const std::string & server_type , ServerPeer::Config server_peer_config , Server::Config server_config ) : m_es(es) , m_listener_list(listener_list) , m_port(port) , m_server_type(server_type) , m_server_peer_config(server_peer_config) , m_server_config(server_config) , m_if(es,*this) , m_interface_event_timer(*this,&MultiServer::onInterfaceEventTimeout,es)
gmultiserver.cpp	121	keep	GNet::MultiServer::~MultiServer()
gmultiserver.cpp	126	keep	void GNet::MultiServer::createServer( Descriptor fd )
gmultiserver.cpp	132	keep	void GNet::MultiServer::createServer( const Address & address , bool fixed )
gmultiserver.cpp	138	keep	void GNet::MultiServer::createServer( const Address & address , bool fixed , std::nothrow_t )
gmultiserver.cpp	155	keep	void GNet::MultiServer::serverCleanup()
gmultiserver.cpp	163	keep	void GNet::MultiServer::onInterfaceEvent( const std::string & /*description*/ )
gmultiserver.cpp	171	keep	void GNet::MultiServer::onInterfaceEventTimeout()
gmultiserver.cpp	196	keep	GNet::MultiServer::ServerList::iterator GNet::MultiServer::removeServer( ServerList::iterator iter )
gmultiserver.cpp	204	keep	bool GNet::MultiServer::match( const Address & interface_address , const Address & server_address )
gmultiserver.cpp	211	keep	bool GNet::MultiServer::gotAddressFor( const Listener & server , const AddressList & address_list ) const
gmultiserver.cpp	218	keep	bool GNet::MultiServer::gotServerFor( Address interface_address ) const
gmultiserver.cpp	224	keep	std::string GNet::MultiServer::displayString( const Address & address )
gmultiserver.cpp	229	keep	void GNet::MultiServer::serverReport( const std::string & group ) const
gmultiserver.cpp	240	keep	std::unique_ptr<GNet::ServerPeer> GNet::MultiServer::doNewPeer( ExceptionSinkUnbound esu , ServerPeerInfo && pi , const ServerInfo & si )
gmultiserver.cpp	246	keep	bool GNet::MultiServer::hasPeers() const
gmultiserver.cpp	258	keep	std::vector<std::weak_ptr<GNet::ServerPeer>> GNet::MultiServer::peers()
gmultiserver.cpp	274	keep	GNet::MultiServerImp::MultiServerImp( MultiServer & ms , ExceptionSink es , bool fixed , const Address & address , ServerPeer::Config server_peer_config , Server::Config server_config ) : GNet::Server(es,address,server_peer_config,server_config) , m_ms(ms) , m_fixed(fixed)
gmultiserver.cpp	282	keep	GNet::MultiServerImp::MultiServerImp( MultiServer & ms , ExceptionSink es , Descriptor fd , ServerPeer::Config server_peer_config , Server::Config server_config ) : GNet::Server(es,fd,server_peer_config,server_config) , m_ms(ms) , m_fixed(true)
gmultiserver.cpp	290	keep	GNet::MultiServerImp::~MultiServerImp()
gmultiserver.cpp	293	keep	bool GNet::MultiServerImp::dynamic() const
gmultiserver.cpp	298	keep	void GNet::MultiServerImp::cleanup()
gmultiserver.cpp	303	keep	std::unique_ptr<GNet::ServerPeer> GNet::MultiServerImp::newPeer( ExceptionSinkUnbound esu , ServerPeerInfo && peer_info )
gmultiserver.cpp	312	keep	GNet::MultiServer::ServerInfo::ServerInfo() : m_address(Address::defaultAddress())
gmultiserver.cpp	319	keep	GNet::Listeners::Listeners( Interfaces & if_ , const G::StringArray & listener_list , unsigned int port )
gmultiserver.cpp	345	keep	int GNet::Listeners::af( const std::string & s )
gmultiserver.cpp	355	keep	std::string GNet::Listeners::basename( const std::string & s )
gmultiserver.cpp	363	keep	int GNet::Listeners::parseFd( const std::string & listener )
gmultiserver.cpp	374	keep	void GNet::Listeners::addWildcards( unsigned int port )
gmultiserver.cpp	383	keep	bool GNet::Listeners::isAddress( const std::string & s , unsigned int port )
gmultiserver.cpp	388	keep	GNet::Address GNet::Listeners::address( const std::string & s , unsigned int port )
gmultiserver.cpp	393	keep	bool GNet::Listeners::empty() const
gmultiserver.cpp	398	keep	bool GNet::Listeners::defunct() const
gmultiserver.cpp	403	keep	bool GNet::Listeners::idle() const
gmultiserver.cpp	408	keep	bool GNet::Listeners::noUpdates() const
gmultiserver.cpp	413	keep	bool GNet::Listeners::isBad( const std::string & s )
gmultiserver.cpp	422	keep	bool GNet::Listeners::hasBad() const
gmultiserver.cpp	427	keep	std::string GNet::Listeners::badName() const
gmultiserver.cpp	432	keep	bool GNet::Listeners::hasEmpties() const
gmultiserver.cpp	437	keep	std::string GNet::Listeners::logEmpties() const
gmultiserver.cpp	442	keep	const std::vector<int> & GNet::Listeners::fds() const
gmultiserver.cpp	447	keep	const std::vector<GNet::Address> & GNet::Listeners::fixed() const
gmultiserver.cpp	452	keep	const std::vector<GNet::Address> & GNet::Listeners::dynamic() const
gnameservers_unix.cpp	28	keep	std::vector<GNet::Address> GNet::nameservers( unsigned int port )
gnetdone.cpp	24	keep	GNet::Done::Done() : std::runtime_error("done")
gresolver.cpp	89	keep	GNet::ResolverImp::ResolverImp( Resolver & resolver , ExceptionSink es , const Location & location ) : m_resolver(&resolver) , m_future_event(std::make_unique<FutureEvent>(static_cast<FutureEventHandler&>(*this),es)) , m_timer(*this,&ResolverImp::onTimeout,es) , m_location(location) , m_future(location.host(),location.service(),location.family(),/*dgram=*/false,true)
gresolver.cpp	101	keep	GNet::ResolverImp::~ResolverImp()
gresolver.cpp	114	keep	std::size_t GNet::ResolverImp::zcount() noexcept
gresolver.cpp	119	keep	void GNet::ResolverImp::start( ResolverImp * This , HANDLE handle ) noexcept
gresolver.cpp	134	keep	void GNet::ResolverImp::onFutureEvent()
gresolver.cpp	151	keep	bool GNet::ResolverImp::zombify()
gresolver.cpp	159	keep	void GNet::ResolverImp::onTimeout()
gresolver.cpp	174	keep	GNet::Resolver::Resolver( Resolver::Callback & callback , ExceptionSink es ) : m_callback(callback) , m_es(es)
gresolver.cpp	181	keep	GNet::Resolver::~Resolver()
gresolver.cpp	194	keep	std::string GNet::Resolver::resolve( Location & location )
gresolver.cpp	217	remove	GNet::Resolver::AddressList GNet::Resolver::resolve( const std::string & host , const std::string & service , int family , bool dgram )
gresolver.cpp	231	keep	void GNet::Resolver::start( const Location & location )
gresolver.cpp	241	keep	void GNet::Resolver::done( const std::string & error , const Location & location )
gresolver.cpp	250	keep	bool GNet::Resolver::busy() const
gresolver.cpp	255	keep	bool GNet::Resolver::async()
gresolverfuture.cpp	30	keep	GNet::ResolverFuture::ResolverFuture( const std::string & host , const std::string & service , int family , bool dgram , bool for_async_hint ) : m_numeric_service(!service.empty() && G::Str::isNumeric(service)) , m_socktype(dgram?SOCK_DGRAM:SOCK_STREAM) , m_host(host) , m_host_p(m_host.c_str()) , m_service(service) , m_service_p(m_service.c_str()) , m_family(family) , m_test_mode(for_async_hint&&G::Test::enabled("getaddrinfo-slow")) , m_rc(0) , m_ai(nullptr)
gresolverfuture.cpp	51	keep	GNet::ResolverFuture::~ResolverFuture()
gresolverfuture.cpp	57	keep	GNet::ResolverFuture & GNet::ResolverFuture::run() noexcept
gresolverfuture.cpp	65	keep	std::string GNet::ResolverFuture::failure() const
gresolverfuture.cpp	78	keep	std::string GNet::ResolverFuture::ipvx() const
gresolverfuture.cpp	85	keep	bool GNet::ResolverFuture::failed() const
gresolverfuture.cpp	90	keep	std::string GNet::ResolverFuture::none() const
gresolverfuture.cpp	95	keep	bool GNet::ResolverFuture::fetch( Pair & pair ) const
gresolverfuture.cpp	112	keep	bool GNet::ResolverFuture::fetch( List & list ) const
gresolverfuture.cpp	128	keep	void GNet::ResolverFuture::get( List & list )
gresolverfuture.cpp	136	keep	GNet::ResolverFuture::Pair GNet::ResolverFuture::get()
gresolverfuture.cpp	146	keep	bool GNet::ResolverFuture::error() const
gresolverfuture.cpp	151	keep	std::string GNet::ResolverFuture::reason() const
gserver.cpp	33	keep	GNet::Server::Server( ExceptionSink es , Descriptor fd , const ServerPeer::Config & server_peer_config , const Config & server_config ) : m_es(es) , m_config(server_config) , m_server_peer_config(server_peer_config) , m_socket(StreamSocket::Listener(),fd,m_config.stream_socket_config)
gserver.cpp	47	keep	GNet::Server::Server( ExceptionSink es , const Address & listening_address , const ServerPeer::Config & server_peer_config , const Config & server_config ) : m_es(es) , m_config(server_config) , m_server_peer_config(server_peer_config) , m_socket(listening_address.family(),StreamSocket::Listener(),m_config.stream_socket_config)
gserver.cpp	86	keep	GNet::Server::~Server()
gserver.cpp	91	keep	GNet::Address GNet::Server::address() const
gserver.cpp	100	keep	void GNet::Server::readEvent()
gserver.cpp	141	keep	void GNet::Server::accept( ServerPeerInfo & peer_info )
gserver.cpp	152	keep	void GNet::Server::onException( ExceptionSource * esrc , std::exception & e , bool done )
gserver.cpp	177	keep	void GNet::Server::serverCleanup()
gserver.cpp	182	keep	bool GNet::Server::hasPeers() const
gserver.cpp	187	keep	std::vector<std::weak_ptr<GNet::ServerPeer>> GNet::Server::peers()
gserver.cpp	197	keep	void GNet::Server::writeEvent()
gserver.cpp	202	keep	bool GNet::Server::unlink( G::SignalSafe , const char * path ) noexcept
gserver.cpp	209	keep	GNet::ServerPeerInfo::ServerPeerInfo( Server * server , ServerPeer::Config server_peer_config ) : m_address(Address::defaultAddress()) , m_server_peer_config(server_peer_config) , m_server(server)
gserverpeer.cpp	30	keep	GNet::ServerPeer::ServerPeer( ExceptionSink es , ServerPeerInfo && peer_info , const LineBufferConfig & line_buffer_config ) : m_es(es) , m_address(peer_info.m_address) , m_socket(std::move(peer_info.m_socket)) , m_sp(*this,es,*this,*m_socket,peer_info.m_server_peer_config.socket_protocol_config) , m_line_buffer(line_buffer_config) , m_config(peer_info.m_server_peer_config) , m_idle_timer(*this,&ServerPeer::onIdleTimeout,es)
gserverpeer.cpp	52	keep	GNet::ServerPeer::~ServerPeer()
gserverpeer.cpp	58	keep	void GNet::ServerPeer::secureAccept()
gserverpeer.cpp	63	keep	bool GNet::ServerPeer::secureAcceptCapable() const
gserverpeer.cpp	68	remove	void GNet::ServerPeer::expect( std::size_t n )
gserverpeer.cpp	73	keep	GNet::StreamSocket & GNet::ServerPeer::socket()
gserverpeer.cpp	79	keep	void GNet::ServerPeer::dropReadHandler()
gserverpeer.cpp	84	keep	void GNet::ServerPeer::addReadHandler()
gserverpeer.cpp	89	keep	void GNet::ServerPeer::otherEvent( EventHandler::Reason reason )
gserverpeer.cpp	94	keep	void GNet::ServerPeer::readEvent()
gserverpeer.cpp	100	keep	GNet::Address GNet::ServerPeer::localAddress() const
gserverpeer.cpp	106	keep	GNet::Address GNet::ServerPeer::peerAddress() const
gserverpeer.cpp	111	keep	std::string GNet::ServerPeer::connectionState() const
gserverpeer.cpp	116	keep	std::string GNet::ServerPeer::peerCertificate() const
gserverpeer.cpp	121	keep	bool GNet::ServerPeer::send( const std::string & data )
gserverpeer.cpp	126	keep	bool GNet::ServerPeer::send( G::string_view data )
gserverpeer.cpp	131	remove	bool GNet::ServerPeer::send( const std::vector<G::string_view> & segments , std::size_t offset )
gserverpeer.cpp	136	keep	void GNet::ServerPeer::writeEvent()
gserverpeer.cpp	142	keep	void GNet::ServerPeer::doOnDelete( const std::string & reason , bool done )
gserverpeer.cpp	148	keep	void GNet::ServerPeer::onIdleTimeout()
gserverpeer.cpp	155	keep	void GNet::ServerPeer::onData( const char * data , std::size_t size )
gserverpeer.cpp	164	keep	bool GNet::ServerPeer::onDataImp( const char * data , std::size_t size , std::size_t eolsize , std::size_t linesize , char c0 )
gserverpeer.cpp	170	keep	GNet::LineBufferState GNet::ServerPeer::lineBuffer() const
gserverpeer.cpp	175	keep	std::string GNet::ServerPeer::exceptionSourceId() const
gserverpeer.cpp	186	keep	void GNet::ServerPeer::setIdleTimeout( unsigned int s )
gserverpeer.cpp	194	remove	void GNet::ServerPeer::finish()
gserverpeer.cpp	199	keep	void GNet::ServerPeer::onPeerDisconnect()
gsocket.cpp	31	keep	GNet::SocketBase::SocketBase( Address::Family family , int type , int protocol ) : m_reason(0) , m_domain(Address::domain(family)) , m_family(family) , m_read_added(false) , m_write_added(false) , m_other_added(false) , m_accepted(false)
gsocket.cpp	50	keep	GNet::SocketBase::SocketBase( const SocketBase::Raw & , int domain , int type , int protocol ) : m_reason(0) , m_domain(domain) , m_family(Address::Family::local) , m_read_added(false) , m_write_added(false) , m_other_added(false) , m_accepted(false)
gsocket.cpp	71	keep	GNet::SocketBase::SocketBase( Address::Family family , Descriptor fd ) : m_reason(0) , m_domain(Address::domain(family)) , m_family(family) , m_fd(fd) , m_read_added(false) , m_write_added(false) , m_other_added(false) , m_accepted(false)
gsocket.cpp	88	keep	GNet::SocketBase::SocketBase( Address::Family family , Descriptor fd , const Accepted & ) : m_reason(0) , m_domain(Address::domain(family)) , m_family(family) , m_fd(fd) , m_read_added(false) , m_write_added(false) , m_other_added(false) , m_accepted(true)
gsocket.cpp	105	keep	GNet::SocketBase::~SocketBase()
gsocket.cpp	111	keep	bool GNet::SocketBase::isFamily( Address::Family family ) const
gsocket.cpp	118	keep	void GNet::SocketBase::drop() noexcept
gsocket.cpp	125	keep	void GNet::SocketBase::clearReason()
gsocket.cpp	130	keep	void GNet::SocketBase::saveReason() const
gsocket.cpp	135	keep	GNet::SocketBase::ssize_type GNet::SocketBase::writeImp( const char * buffer , size_type length )
gsocket.cpp	154	keep	void GNet::SocketBase::addReadHandler( EventHandler & handler , ExceptionSink es )
gsocket.cpp	162	keep	void GNet::SocketBase::addWriteHandler( EventHandler & handler , ExceptionSink es )
gsocket.cpp	170	keep	void GNet::SocketBase::addOtherHandler( EventHandler & handler , ExceptionSink es )
gsocket.cpp	178	keep	void GNet::SocketBase::dropReadHandler() noexcept
gsocket.cpp	185	keep	void GNet::SocketBase::dropWriteHandler() noexcept
gsocket.cpp	192	keep	void GNet::SocketBase::dropOtherHandler() noexcept
gsocket.cpp	199	keep	SOCKET GNet::SocketBase::fd() const noexcept
gsocket.cpp	204	keep	std::string GNet::SocketBase::reason() const
gsocket.cpp	210	keep	std::string GNet::SocketBase::asString() const
gsocket.cpp	219	keep	GNet::Socket::Config::Config()
gsocket.cpp	222	keep	GNet::Socket::Socket( Address::Family af , int type , int protocol , const Config & config ) : SocketBase(af,type,protocol) , m_config(config)
gsocket.cpp	228	keep	GNet::Socket::Socket( Address::Family af , Descriptor s , const Accepted & a , const Config & config ) : SocketBase(af,s,a) , m_config(config)
gsocket.cpp	234	keep	GNet::Socket::Socket( Address::Family af , Descriptor s , const Adopted & , const Config & config ) : SocketBase(af,s) , m_config(config)
gsocket.cpp	240	keep	void GNet::Socket::bind( const Address & local_address )
gsocket.cpp	258	keep	bool GNet::Socket::bind( const Address & local_address , std::nothrow_t )
gsocket.cpp	276	keep	unsigned long GNet::Socket::getBoundScopeId() const
gsocket.cpp	281	keep	bool GNet::Socket::connect( const Address & address , bool * done )
gsocket.cpp	312	keep	void GNet::Socket::listen()
gsocket.cpp	326	keep	GNet::Address GNet::Socket::getLocalAddress( Descriptor fd )
gsocket.cpp	335	keep	GNet::Address GNet::Socket::getLocalAddress() const
gsocket.cpp	347	keep	std::pair<bool,GNet::Address> GNet::Socket::getPeerAddress() const
gsocket.cpp	361	keep	void GNet::Socket::shutdown( int how )
gsocket.cpp	367	keep	void GNet::Socket::setOptionsOnConnect( Address::Family af )
gsocket.cpp	376	keep	void GNet::Socket::setOptionsOnBind( Address::Family af )
gsocket.cpp	391	keep	void GNet::Socket::setOptionKeepAlive()
gsocket.cpp	396	keep	void GNet::Socket::setOptionFreeBind()
gsocket.cpp	402	keep	void GNet::Socket::setOptionLinger( int onoff , int time )
gsocket.cpp	415	keep	bool GNet::Socket::setOption( int level , const char * , int op , int arg , std::nothrow_t )
gsocket.cpp	424	keep	void GNet::Socket::setOption( int level , const char * opp , int op , int arg )
gsocket.cpp	432	keep	GNet::StreamSocket::Config::Config()
gsocket.cpp	435	keep	GNet::StreamSocket::Config::Config( const Socket::Config & base ) : Socket::Config(base)
gsocket.cpp	440	remove	bool GNet::StreamSocket::supports( Address::Family af )
gsocket.cpp	468	keep	GNet::StreamSocket::StreamSocket( Address::Family af , const Config & config ) : Socket(af,SOCK_STREAM,0,config) , m_config(config)
gsocket.cpp	475	keep	GNet::StreamSocket::StreamSocket( Address::Family af , const Listener & , const Config & config ) : Socket(af,SOCK_STREAM,0,config) , m_config(config)
gsocket.cpp	482	keep	GNet::StreamSocket::StreamSocket( const Listener & , Descriptor fd , const Config & config ) : Socket(family(fd),fd,Socket::Adopted(),config) , m_config(config)
gsocket.cpp	488	keep	GNet::StreamSocket::StreamSocket( Address::Family af , Descriptor fd , const Accepted & accepted , const Config & config ) : Socket(af,fd,accepted,config) , m_config(config)
gsocket.cpp	495	keep	GNet::Address::Family GNet::StreamSocket::family( Descriptor fd )
gsocket.cpp	500	keep	GNet::Socket::ssize_type GNet::StreamSocket::read( char * buffer , size_type length )
gsocket.cpp	514	keep	GNet::Socket::ssize_type GNet::StreamSocket::write( const char * buffer , size_type length )
gsocket.cpp	519	keep	GNet::AcceptInfo GNet::StreamSocket::accept()
gsocket.cpp	545	keep	void GNet::StreamSocket::setOptionsOnCreate( Address::Family af , bool /*listener*/ )
gsocket.cpp	558	keep	void GNet::StreamSocket::setOptionsOnAccept( Address::Family af )
gsocket.cpp	573	keep	GNet::DatagramSocket::Config::Config()
gsocket.cpp	576	keep	GNet::DatagramSocket::Config::Config( const Socket::Config & base ) : Socket::Config(base)
gsocket.cpp	581	keep	GNet::DatagramSocket::DatagramSocket( Address::Family af , int protocol , const Config & config ) : Socket(af,SOCK_DGRAM,protocol,config)
gsocket.cpp	586	remove	void GNet::DatagramSocket::disconnect()
gsocket.cpp	593	keep	GNet::Socket::ssize_type GNet::DatagramSocket::read( char * buffer , size_type length )
gsocket.cpp	607	keep	GNet::Socket::ssize_type GNet::DatagramSocket::readfrom( char * buffer , size_type length , Address & src_address )
gsocket.cpp	622	keep	GNet::Socket::ssize_type GNet::DatagramSocket::writeto( const char * buffer , size_type length , const Address & dst )
gsocket.cpp	634	keep	GNet::Socket::ssize_type GNet::DatagramSocket::write( const char * buffer , size_type length )
gsocket_unix.cpp	34	keep	bool GNet::SocketBase::supports( Address::Family af , int type , int protocol )
gsocket_unix.cpp	43	keep	bool GNet::SocketBase::create( int domain , int type , int protocol )
gsocket_unix.cpp	54	keep	bool GNet::SocketBase::prepare( bool /*accepted*/ )
gsocket_unix.cpp	71	keep	void GNet::SocketBase::destroy() noexcept
gsocket_unix.cpp	77	keep	void GNet::SocketBase::unlink() noexcept
gsocket_unix.cpp	95	keep	bool GNet::SocketBase::error( int rc )
gsocket_unix.cpp	100	keep	void GNet::SocketBase::saveReason()
gsocket_unix.cpp	105	keep	bool GNet::SocketBase::setNonBlocking()
gsocket_unix.cpp	115	keep	bool GNet::SocketBase::sizeError( ssize_t size )
gsocket_unix.cpp	120	keep	bool GNet::SocketBase::eNotConn() const
gsocket_unix.cpp	125	keep	bool GNet::SocketBase::eWouldBlock() const
gsocket_unix.cpp	130	keep	bool GNet::SocketBase::eInProgress() const
gsocket_unix.cpp	135	remove	bool GNet::SocketBase::eMsgSize() const
gsocket_unix.cpp	140	keep	bool GNet::SocketBase::eTooMany() const
gsocket_unix.cpp	145	keep	std::string GNet::SocketBase::reasonString( int e )
gsocket_unix.cpp	152	remove	std::string GNet::Socket::canBindHint( const Address & address , bool stream , const Config & config )
gsocket_unix.cpp	174	keep	void GNet::Socket::setOptionReuse()
gsocket_unix.cpp	180	keep	void GNet::Socket::setOptionExclusive()
gsocket_unix.cpp	185	keep	void GNet::Socket::setOptionPureV6()
gsocket_unix.cpp	194	keep	bool GNet::Socket::setOptionPureV6( std::nothrow_t )
gsocket_unix.cpp	201	keep	bool GNet::Socket::setOptionImp( int level , int op , const void * arg , socklen_t n )
gsocket_unix.cpp	209	keep	GNet::RawSocket::RawSocket( int domain , int type , int protocol ) : SocketBase(SocketBase::Raw(),domain,type,protocol)
gsocket_unix.cpp	214	keep	GNet::SocketBase::ssize_type GNet::RawSocket::read( char * buffer , size_type length )
gsocket_unix.cpp	228	keep	GNet::SocketBase::ssize_type GNet::RawSocket::write( const char * buffer , size_type length )
gsocket_unix.cpp	235	remove	std::size_t GNet::DatagramSocket::limit( std::size_t default_in ) const
gsocket_unix.cpp	246	remove	GNet::Socket::ssize_type GNet::DatagramSocket::writeto( const std::vector<G::string_view> & data , const Address & dst )
gsocketprotocol.cpp	146	keep	GNet::SocketProtocolImp::SocketProtocolImp( EventHandler & handler , ExceptionSink es , SocketProtocol::Sink & sink , StreamSocket & socket , const SocketProtocol::Config & config ) : m_handler(handler) , m_es(es) , m_sink(sink) , m_socket(socket) , m_config(config) , m_one_segment(1U) , m_failed(false) , m_state(State::raw) , m_read_buffer(std::max(std::size_t(1U),config.read_buffer_size)) , m_read_buffer_n(0) , m_secure_connection_timer(*this,&SocketProtocolImp::onSecureConnectionTimeout,es)
gsocketprotocol.cpp	164	keep	GNet::SocketProtocolImp::~SocketProtocolImp()
gsocketprotocol.cpp	167	keep	void GNet::SocketProtocolImp::onSecureConnectionTimeout()
gsocketprotocol.cpp	173	keep	bool GNet::SocketProtocolImp::readEvent( bool no_throw_on_peer_disconnect )
gsocketprotocol.cpp	193	keep	bool GNet::SocketProtocolImp::writeEvent()
gsocketprotocol.cpp	213	keep	void GNet::SocketProtocolImp::otherEvent( EventHandler::Reason reason , bool no_throw_on_peer_disconnect )
gsocketprotocol.cpp	234	keep	std::size_t GNet::SocketProtocolImp::size( const Segments & segments )
gsocketprotocol.cpp	240	keep	GNet::SocketProtocolImp::Position GNet::SocketProtocolImp::firstPosition( const Segments & s , std::size_t offset )
gsocketprotocol.cpp	245	keep	GNet::SocketProtocolImp::Position GNet::SocketProtocolImp::newPosition( const Segments & s , Position pos , std::size_t offset )
gsocketprotocol.cpp	256	keep	G::string_view GNet::SocketProtocolImp::chunk( const Segments & s , Position pos )
gsocketprotocol.cpp	263	keep	bool GNet::SocketProtocolImp::send( G::string_view data , std::size_t offset )
gsocketprotocol.cpp	298	keep	bool GNet::SocketProtocolImp::send( const Segments & segments , std::size_t offset )
gsocketprotocol.cpp	327	keep	void GNet::SocketProtocolImp::shutdown()
gsocketprotocol.cpp	341	keep	void GNet::SocketProtocolImp::shutdownImp()
gsocketprotocol.cpp	368	keep	bool GNet::SocketProtocolImp::secure() const
gsocketprotocol.cpp	376	keep	bool GNet::SocketProtocolImp::raw() const
gsocketprotocol.cpp	381	keep	bool GNet::SocketProtocolImp::secureConnectCapable() const
gsocketprotocol.cpp	386	keep	void GNet::SocketProtocolImp::secureConnect()
gsocketprotocol.cpp	402	keep	void GNet::SocketProtocolImp::secureConnectImp()
gsocketprotocol.cpp	438	keep	bool GNet::SocketProtocolImp::secureAcceptCapable() const
gsocketprotocol.cpp	443	keep	void GNet::SocketProtocolImp::secureAccept()
gsocketprotocol.cpp	457	keep	void GNet::SocketProtocolImp::secureAcceptImp()
gsocketprotocol.cpp	491	keep	bool GNet::SocketProtocolImp::sslSend( const Segments & segments , Position pos )
gsocketprotocol.cpp	520	keep	bool GNet::SocketProtocolImp::sslSendImp()
gsocketprotocol.cpp	525	keep	bool GNet::SocketProtocolImp::sslSendImp( const Segments & segments , Position pos , Position & pos_out )
gsocketprotocol.cpp	561	keep	void GNet::SocketProtocolImp::sslReadImp()
gsocketprotocol.cpp	609	keep	bool GNet::SocketProtocolImp::rawOtherEvent( EventHandler::Reason reason )
gsocketprotocol.cpp	641	keep	bool GNet::SocketProtocolImp::rawReadEvent( bool no_throw_on_peer_disconnect )
gsocketprotocol.cpp	667	keep	bool GNet::SocketProtocolImp::rawSend( const Segments & segments , Position pos , bool do_copy )
gsocketprotocol.cpp	713	keep	bool GNet::SocketProtocolImp::rawWriteEvent()
gsocketprotocol.cpp	737	keep	bool GNet::SocketProtocolImp::rawSendImp( const Segments & segments , Position pos , Position & pos_out )
gsocketprotocol.cpp	766	keep	void GNet::SocketProtocolImp::rawReset()
gsocketprotocol.cpp	774	keep	std::unique_ptr<GSsl::Protocol> GNet::SocketProtocolImp::newProtocol( const std::string & profile_name )
gsocketprotocol.cpp	783	keep	bool GNet::SocketProtocolImp::finished( const Segments & segments , Position pos )
gsocketprotocol.cpp	789	keep	bool GNet::SocketProtocolImp::failed() const
gsocketprotocol.cpp	794	keep	std::string GNet::SocketProtocolImp::peerCertificate() const
gsocketprotocol.cpp	799	remove	void GNet::SocketProtocolImp::log( int level , const std::string & log_line )
gsocketprotocol.cpp	809	keep	void GNet::SocketProtocolImp::logSecure( const std::string & protocol , const std::string & cipher ) const
gsocketprotocol.cpp	819	keep	GNet::SocketProtocol::SocketProtocol( EventHandler & handler , ExceptionSink es , Sink & sink , StreamSocket & socket , const Config & config ) : m_imp(std::make_unique<SocketProtocolImp>(handler,es,sink,socket,config))
gsocketprotocol.cpp	825	keep	GNet::SocketProtocol::~SocketProtocol()
gsocketprotocol.cpp	828	keep	bool GNet::SocketProtocol::readEvent( bool no_throw_on_peer_disconnect )
gsocketprotocol.cpp	833	keep	bool GNet::SocketProtocol::writeEvent()
gsocketprotocol.cpp	838	keep	void GNet::SocketProtocol::otherEvent( EventHandler::Reason reason , bool no_throw_on_peer_disconnect )
gsocketprotocol.cpp	843	keep	bool GNet::SocketProtocol::send( const std::string & data , std::size_t offset )
gsocketprotocol.cpp	848	keep	bool GNet::SocketProtocol::send( G::string_view data )
gsocketprotocol.cpp	853	keep	bool GNet::SocketProtocol::send( const std::vector<G::string_view> & data , std::size_t offset )
gsocketprotocol.cpp	858	keep	void GNet::SocketProtocol::shutdown()
gsocketprotocol.cpp	863	keep	bool GNet::SocketProtocol::secureConnectCapable() const
gsocketprotocol.cpp	868	keep	void GNet::SocketProtocol::secureConnect()
gsocketprotocol.cpp	873	keep	bool GNet::SocketProtocol::secureAcceptCapable() const
gsocketprotocol.cpp	878	keep	void GNet::SocketProtocol::secureAccept()
gsocketprotocol.cpp	883	remove	bool GNet::SocketProtocol::secure() const
gsocketprotocol.cpp	888	remove	bool GNet::SocketProtocol::raw() const
gsocketprotocol.cpp	893	keep	std::string GNet::SocketProtocol::peerCertificate() const
gsocks.cpp	27	keep	GNet::Socks::Socks( const Location & location ) : m_request_offset(0U)
gsocks.cpp	41	keep	std::string GNet::Socks::buildPdu( const std::string & far_host , unsigned int far_port )
gsocks.cpp	66	keep	bool GNet::Socks::send( G::ReadWrite & io )
gsocks.cpp	92	keep	bool GNet::Socks::read( G::ReadWrite & io )
gtask.cpp	95	keep	GNet::TaskImp::TaskImp( Task & task , ExceptionSink es , bool sync , const G::ExecutableCommand & commandline , const G::Environment & env , G::NewProcess::Fd fd_stdin , G::NewProcess::Fd fd_stdout , G::NewProcess::Fd fd_stderr , const G::Path & cd , const std::string & exec_error_format , const G::Identity & id ) : m_task(&task) , m_future_event(*this,es) , m_timer(*this,&TaskImp::onTimeout,es) , m_logged(false) , m_process( commandline.exe() , commandline.args() , G::NewProcess::Config() .set_env(env) .set_stdin(fd_stdin) .set_stdout(fd_stdout) .set_stderr(fd_stderr) .set_cd(cd) .set_strict_exe(true) .set_run_as(id) .set_strict_id(true) .set_exec_error_exit(127) .set_exec_error_format(exec_error_format) )
gtask.cpp	135	keep	GNet::TaskImp::~TaskImp()
gtask.cpp	150	keep	bool GNet::TaskImp::zombify()
gtask.cpp	173	keep	void GNet::TaskImp::onTimeout()
gtask.cpp	191	keep	std::pair<int,std::string> GNet::TaskImp::wait()
gtask.cpp	198	keep	void GNet::TaskImp::waitThread( TaskImp * This , HANDLE handle )
gtask.cpp	212	keep	void GNet::TaskImp::onFutureEvent()
gtask.cpp	230	keep	GNet::Task::Task( TaskCallback & callback , ExceptionSink es , const std::string & exec_error_format , const G::Identity & id ) : m_callback(callback) , m_es(es) , m_exec_error_format(exec_error_format) , m_id(id) , m_busy(false)
gtask.cpp	240	keep	GNet::Task::~Task()
gtask.cpp	251	keep	void GNet::Task::stop()
gtask.cpp	260	remove	std::pair<int,std::string> GNet::Task::run( const G::ExecutableCommand & commandline , const G::Environment & env , G::NewProcess::Fd fd_stdin , G::NewProcess::Fd fd_stdout , G::NewProcess::Fd fd_stderr , const G::Path & cd )
gtask.cpp	274	keep	void GNet::Task::start( const G::ExecutableCommand & commandline )
gtask.cpp	283	keep	void GNet::Task::start( const G::ExecutableCommand & commandline , const G::Environment & env , G::NewProcess::Fd fd_stdin , G::NewProcess::Fd fd_stdout , G::NewProcess::Fd fd_stderr , const G::Path & cd )
gtask.cpp	299	keep	void GNet::Task::done( int exit_code , const std::string & output )
gtimer.cpp	29	keep	GNet::TimerBase::TimerBase( ExceptionSink es ) : m_active(false) , m_immediate(false) , m_time(G::TimerTime::zero())
gtimer.cpp	37	keep	GNet::TimerBase::~TimerBase()
gtimer.cpp	49	keep	bool GNet::TimerBase::expired( G::TimerTime & now ) const
gtimer.cpp	71	keep	void GNet::TimerBase::startTimer( unsigned int time , unsigned int time_us )
gtimer.cpp	79	keep	void GNet::TimerBase::startTimer( const G::TimeInterval & i )
gtimer.cpp	87	keep	bool GNet::TimerBase::immediate() const
gtimer.cpp	92	keep	void GNet::TimerBase::adjust( unsigned long order )
gtimer.cpp	98	keep	void GNet::TimerBase::cancelTimer()
gtimer.cpp	107	keep	void GNet::TimerBase::doTimeout()
gtimer.cpp	114	keep	G::TimerTime GNet::TimerBase::t() const
gtimerlist.cpp	33	remove	GNet::TimerList::Value::Value()
gtimerlist.cpp	36	keep	GNet::TimerList::Value::Value( TimerBase * t , ExceptionSink es ) : m_timer(t) , m_es(es)
gtimerlist.cpp	42	keep	inline bool GNet::TimerList::Value::operator==( const Value & v ) const noexcept
gtimerlist.cpp	47	keep	inline void GNet::TimerList::Value::resetIf( TimerBase * p ) noexcept
gtimerlist.cpp	53	keep	void GNet::TimerList::Value::disarmIf( ExceptionHandler * eh ) noexcept
gtimerlist.cpp	61	keep	GNet::TimerList::Lock::Lock( TimerList & timer_list ) : m_timer_list(timer_list)
gtimerlist.cpp	67	keep	GNet::TimerList::Lock::~Lock()
gtimerlist.cpp	76	keep	GNet::TimerList::TimerList()
gtimerlist.cpp	82	keep	GNet::TimerList::~TimerList()
gtimerlist.cpp	88	keep	void GNet::TimerList::add( TimerBase & t , ExceptionSink es )
gtimerlist.cpp	93	keep	void GNet::TimerList::remove( TimerBase & timer ) noexcept
gtimerlist.cpp	101	keep	void GNet::TimerList::removeFrom( List & list , TimerBase * timer_p ) noexcept
gtimerlist.cpp	107	keep	void GNet::TimerList::disarm( ExceptionHandler * eh ) noexcept
gtimerlist.cpp	113	keep	void GNet::TimerList::disarmIn( List & list , ExceptionHandler * eh ) noexcept
gtimerlist.cpp	119	keep	void GNet::TimerList::updateOnStart( TimerBase & timer )
gtimerlist.cpp	131	keep	void GNet::TimerList::updateOnCancel( TimerBase & timer )
gtimerlist.cpp	138	keep	const GNet::TimerBase * GNet::TimerList::findSoonest() const
gtimerlist.cpp	150	keep	std::pair<G::TimeInterval,bool> GNet::TimerList::interval() const
gtimerlist.cpp	171	keep	GNet::TimerList * GNet::TimerList::ptr() noexcept
gtimerlist.cpp	176	remove	bool GNet::TimerList::exists()
gtimerlist.cpp	181	keep	GNet::TimerList & GNet::TimerList::instance()
gtimerlist.cpp	188	keep	void GNet::TimerList::lock()
gtimerlist.cpp	193	keep	void GNet::TimerList::unlock()
gtimerlist.cpp	203	keep	void GNet::TimerList::mergeAdded()
gtimerlist.cpp	213	keep	void GNet::TimerList::purgeRemoved()
gtimerlist.cpp	222	keep	void GNet::TimerList::doTimeouts()
gtimerlist.cpp	247	keep	void GNet::TimerList::doTimeout( Value & value )
gcram.cpp	97	keep	std::string GAuth::Cram::response( G::string_view hash_type , bool as_hmac , const Secret & secret , G::string_view challenge , G::string_view id_prefix )
gcram.cpp	118	keep	bool GAuth::Cram::validate( G::string_view hash_type , bool as_hmac , const Secret & secret , G::string_view challenge , G::string_view response_in )
gcram.cpp	142	keep	std::string GAuth::Cram::id( G::string_view response )
gcram.cpp	149	keep	std::string GAuth::Cram::responseImp( G::string_view mechanism_hash_type , bool as_hmac , const Secret & secret , G::string_view challenge )
gcram.cpp	200	keep	G::StringArray GAuth::Cram::hashTypes( G::string_view prefix , bool require_state )
gcram.cpp	226	keep	std::string GAuth::Cram::challenge( unsigned int random , const std::string & challenge_domain_in )
gsaslclient.cpp	70	keep	GAuth::SaslClientImp::SaslClientImp( const SaslClientSecrets & secrets , const std::string & sasl_client_config ) : m_secrets(secrets) , m_config(sasl_client_config) , PLAIN("PLAIN") , LOGIN("LOGIN")
gsaslclient.cpp	78	keep	std::string GAuth::SaslClientImp::mechanism( const G::StringArray & server_mechanisms ) const
gsaslclient.cpp	145	keep	bool GAuth::SaslClientImp::next()
gsaslclient.cpp	152	keep	std::string GAuth::SaslClientImp::mechanism() const
gsaslclient.cpp	157	keep	GAuth::SaslClient::Response GAuth::SaslClientImp::initialResponse( std::size_t limit ) const
gsaslclient.cpp	174	keep	GAuth::SaslClient::Response GAuth::SaslClientImp::response( G::string_view mechanism , G::string_view challenge ) const
gsaslclient.cpp	250	keep	std::string GAuth::SaslClientImp::id() const
gsaslclient.cpp	255	keep	std::string GAuth::SaslClientImp::info() const
gsaslclient.cpp	260	keep	bool GAuth::SaslClientImp::active() const
gsaslclient.cpp	265	keep	bool GAuth::SaslClientImp::match( const G::StringArray & mechanisms , const std::string & mechanism )
gsaslclient.cpp	272	keep	GAuth::SaslClient::SaslClient( const SaslClientSecrets & secrets , const std::string & config ) : m_imp(std::make_unique<SaslClientImp>(secrets,config))
gsaslclient.cpp	277	keep	GAuth::SaslClient::~SaslClient()
gsaslclient.cpp	280	keep	bool GAuth::SaslClient::active() const
gsaslclient.cpp	285	keep	GAuth::SaslClient::Response GAuth::SaslClient::response( G::string_view mechanism , G::string_view challenge ) const
gsaslclient.cpp	290	keep	GAuth::SaslClient::Response GAuth::SaslClient::initialResponse( std::size_t limit ) const
gsaslclient.cpp	295	keep	std::string GAuth::SaslClient::mechanism( const G::StringArray & server_mechanisms ) const
gsaslclient.cpp	300	keep	bool GAuth::SaslClient::next()
gsaslclient.cpp	305	remove	std::string GAuth::SaslClient::next( const std::string & s )
gsaslclient.cpp	311	keep	std::string GAuth::SaslClient::mechanism() const
gsaslclient.cpp	316	keep	std::string GAuth::SaslClient::id() const
gsaslclient.cpp	321	keep	std::string GAuth::SaslClient::info() const
gsaslserverbasic.cpp	80	keep	GAuth::SaslServerBasicImp::SaslServerBasicImp( const SaslServerSecrets & secrets , bool with_apop , const std::string & config , const std::string & challenge_domain ) : m_first_apply(true) , m_secrets(secrets) , m_challenge_domain(challenge_domain) , m_authenticated(false)
gsaslserverbasic.cpp	155	keep	void GAuth::SaslServerBasicImp::reset()
gsaslserverbasic.cpp	165	keep	G::StringArray GAuth::SaslServerBasicImp::mechanisms( bool secure ) const
gsaslserverbasic.cpp	170	keep	bool GAuth::SaslServerBasicImp::init( bool secure , const std::string & mechanism_in )
gsaslserverbasic.cpp	195	keep	std::string GAuth::SaslServerBasicImp::preferredMechanism( bool secure ) const
gsaslserverbasic.cpp	214	keep	std::string GAuth::SaslServerBasicImp::initialChallenge() const
gsaslserverbasic.cpp	225	keep	std::string GAuth::SaslServerBasicImp::apply( const std::string & response , bool & done )
gsaslserverbasic.cpp	314	keep	bool GAuth::SaslServerBasicImp::trusted( const G::StringArray & address_wildcards , const std::string & address_display ) const
gsaslserverbasic.cpp	320	keep	bool GAuth::SaslServerBasicImp::trustedCore( const std::string & address_wildcard , const std::string & address_display ) const
gsaslserverbasic.cpp	338	keep	std::string GAuth::SaslServerBasicImp::mechanism() const
gsaslserverbasic.cpp	343	keep	std::string GAuth::SaslServerBasicImp::id() const
gsaslserverbasic.cpp	348	keep	bool GAuth::SaslServerBasicImp::authenticated() const
gsaslserverbasic.cpp	355	keep	GAuth::SaslServerBasic::SaslServerBasic( const SaslServerSecrets & secrets , bool with_apop , const std::string & config , const std::string & challenge_domain ) : m_imp(std::make_unique<SaslServerBasicImp>(secrets,with_apop,config,challenge_domain))
gsaslserverbasic.cpp	361	keep	GAuth::SaslServerBasic::~SaslServerBasic()
gsaslserverbasic.cpp	364	keep	G::StringArray GAuth::SaslServerBasic::mechanisms( bool secure ) const
gsaslserverbasic.cpp	369	keep	std::string GAuth::SaslServerBasic::mechanism() const
gsaslserverbasic.cpp	374	keep	std::string GAuth::SaslServerBasic::preferredMechanism( bool secure ) const
gsaslserverbasic.cpp	379	keep	bool GAuth::SaslServerBasic::trusted( const G::StringArray & address_wildcards , const std::string & address_display ) const
gsaslserverbasic.cpp	385	keep	void GAuth::SaslServerBasic::reset()
gsaslserverbasic.cpp	390	keep	bool GAuth::SaslServerBasic::init( bool secure , const std::string & mechanism )
gsaslserverbasic.cpp	395	keep	bool GAuth::SaslServerBasic::mustChallenge() const
gsaslserverbasic.cpp	402	keep	std::string GAuth::SaslServerBasic::initialChallenge() const
gsaslserverbasic.cpp	407	keep	std::string GAuth::SaslServerBasic::apply( const std::string & response , bool & done )
gsaslserverbasic.cpp	412	keep	bool GAuth::SaslServerBasic::authenticated() const
gsaslserverbasic.cpp	417	keep	std::string GAuth::SaslServerBasic::id() const
gsaslserverfactory_pam.cpp	27	keep	std::unique_ptr<GAuth::SaslServer> GAuth::SaslServerFactory::newSaslServer( const SaslServerSecrets & secrets , bool allow_pop , const std::string & config , const std::string & challenge_domain )
gsaslserverpam.cpp	95	keep	GAuth::PamImp::PamImp( const std::string & app , const std::string & id ) : G::Pam(app,id,true) , m_app(app) , m_id(id)
gsaslserverpam.cpp	103	keep	GAuth::PamImp::~PamImp()
gsaslserverpam.cpp	106	keep	std::string GAuth::PamImp::id() const
gsaslserverpam.cpp	111	keep	void GAuth::PamImp::converse( ItemArray & items )
gsaslserverpam.cpp	129	keep	void GAuth::PamImp::apply( const std::string & pwd )
gsaslserverpam.cpp	135	keep	void GAuth::PamImp::delay( unsigned int )
gsaslserverpam.cpp	145	keep	GAuth::SaslServerPamImp::SaslServerPamImp( bool with_apop )
gsaslserverpam.cpp	152	keep	GAuth::SaslServerPamImp::~SaslServerPamImp()
gsaslserverpam.cpp	155	keep	G::StringArray GAuth::SaslServerPamImp::mechanisms() const
gsaslserverpam.cpp	160	keep	std::string GAuth::SaslServerPamImp::mechanism() const
gsaslserverpam.cpp	165	keep	void GAuth::SaslServerPamImp::reset()
gsaslserverpam.cpp	171	keep	bool GAuth::SaslServerPamImp::init( bool , const std::string & mechanism )
gsaslserverpam.cpp	177	keep	std::string GAuth::SaslServerPamImp::id() const
gsaslserverpam.cpp	182	keep	std::string GAuth::SaslServerPamImp::apply( const std::string & response , bool & done )
gsaslserverpam.cpp	213	keep	GAuth::SaslServerPam::SaslServerPam( bool with_apop ) : m_imp(std::make_unique<SaslServerPamImp>(with_apop))
gsaslserverpam.cpp	218	keep	GAuth::SaslServerPam::~SaslServerPam()
gsaslserverpam.cpp	221	keep	G::StringArray GAuth::SaslServerPam::mechanisms( bool /*secure*/ ) const
gsaslserverpam.cpp	226	keep	std::string GAuth::SaslServerPam::mechanism() const
gsaslserverpam.cpp	231	keep	std::string GAuth::SaslServerPam::preferredMechanism( bool ) const
gsaslserverpam.cpp	236	keep	bool GAuth::SaslServerPam::trusted( const G::StringArray & , const std::string & ) const
gsaslserverpam.cpp	241	keep	bool GAuth::SaslServerPam::mustChallenge() const
gsaslserverpam.cpp	246	keep	void GAuth::SaslServerPam::reset()
gsaslserverpam.cpp	251	keep	bool GAuth::SaslServerPam::init( bool secure , const std::string & mechanism )
gsaslserverpam.cpp	256	keep	std::string GAuth::SaslServerPam::initialChallenge() const
gsaslserverpam.cpp	261	keep	std::string GAuth::SaslServerPam::apply( const std::string & response , bool & done )
gsaslserverpam.cpp	266	keep	bool GAuth::SaslServerPam::authenticated() const
gsaslserverpam.cpp	271	keep	std::string GAuth::SaslServerPam::id() const
gsecret.cpp	31	keep	GAuth::Secret::Secret( Value id , Value secret , G::string_view hash_function , G::string_view context ) : m_hash_function(G::Str::lower(hash_function)) , m_context(G::sv_to_string(context))
gsecret.cpp	44	keep	GAuth::Secret::Secret() // private -- see Secret::none()
gsecret.cpp	49	keep	std::string GAuth::Secret::check( Value id , Value secret , G::string_view hash_function )
gsecret.cpp	75	keep	GAuth::Secret GAuth::Secret::none()
gsecret.cpp	80	keep	bool GAuth::Secret::valid() const
gsecret.cpp	85	keep	std::string GAuth::Secret::secret() const
gsecret.cpp	91	keep	bool GAuth::Secret::masked() const
gsecret.cpp	96	keep	std::string GAuth::Secret::id() const
gsecret.cpp	102	keep	std::string GAuth::Secret::maskHashFunction() const
gsecret.cpp	108	keep	std::string GAuth::Secret::info( const std::string & id_in ) const
gsecret.cpp	124	keep	bool GAuth::Secret::isDotted( G::string_view s )
gsecret.cpp	132	keep	std::string GAuth::Secret::undotted( G::string_view s )
gsecret.cpp	154	keep	bool GAuth::Secret::validEncodingType( Value value )
gsecret.cpp	163	keep	GAuth::Secret::Encoding GAuth::Secret::encoding( Value value )
gsecret.cpp	175	keep	bool GAuth::Secret::validEncoding( Value value )
gsecret.cpp	187	keep	std::string GAuth::Secret::decode( Value value )
gsecrets.cpp	64	keep	void GAuth::Secrets::check( const std::string & c , const std::string & s , const std::string & p )
gsecrets.cpp	72	keep	std::unique_ptr<GAuth::SaslServerSecrets> GAuth::Secrets::newServerSecrets( const std::string & path , const std::string & log_name )
gsecrets.cpp	78	keep	std::unique_ptr<GAuth::SaslClientSecrets> GAuth::Secrets::newClientSecrets( const std::string & path , const std::string & log_name )
gsecrets.cpp	86	keep	GAuth::SecretsFileClient::SecretsFileClient( const std::string & path , const std::string & log_name ) : m_id_pwd(SecretsImp::plain(path)) , m_file(m_id_pwd?std::string():path,true,log_name)
gsecrets.cpp	94	keep	GAuth::SecretsFileClient::~SecretsFileClient()
gsecrets.cpp	97	keep	bool GAuth::SecretsFileClient::valid() const
gsecrets.cpp	102	keep	GAuth::Secret GAuth::SecretsFileClient::clientSecret( G::string_view type ) const
gsecrets.cpp	120	keep	GAuth::SecretsFileServer::SecretsFileServer( const std::string & spec , const std::string & log_name ) : m_pam(SecretsImp::pam(spec)) , m_file(m_pam?std::string():spec,true,log_name)
gsecrets.cpp	126	keep	GAuth::SecretsFileServer::~SecretsFileServer()
gsecrets.cpp	129	keep	std::string GAuth::SecretsFileServer::source() const
gsecrets.cpp	134	keep	bool GAuth::SecretsFileServer::valid() const
gsecrets.cpp	139	keep	GAuth::Secret GAuth::SecretsFileServer::serverSecret( G::string_view type , G::string_view id ) const
gsecrets.cpp	145	keep	std::pair<std::string,std::string> GAuth::SecretsFileServer::serverTrust( const std::string & address_range ) const
gsecrets.cpp	151	keep	bool GAuth::SecretsFileServer::contains( G::string_view type , G::string_view id ) const
gsecretsfile.cpp	35	keep	GAuth::SecretsFile::SecretsFile( const G::Path & path , bool auto_reread , const std::string & debug_name ) : m_path(path) , m_auto(auto_reread) , m_debug_name(debug_name) , m_file_time(0) , m_check_time(G::SystemTime::now())
gsecretsfile.cpp	47	keep	void GAuth::SecretsFile::check( const std::string & path )
gsecretsfile.cpp	58	keep	bool GAuth::SecretsFile::valid() const
gsecretsfile.cpp	63	keep	void GAuth::SecretsFile::reread() const
gsecretsfile.cpp	68	keep	void GAuth::SecretsFile::reread( int )
gsecretsfile.cpp	88	keep	void GAuth::SecretsFile::read( const G::Path & path )
gsecretsfile.cpp	95	keep	G::SystemTime GAuth::SecretsFile::readFileTime( const G::Path & path )
gsecretsfile.cpp	101	keep	GAuth::SecretsFile::Contents GAuth::SecretsFile::readContents( const G::Path & path )
gsecretsfile.cpp	116	keep	GAuth::SecretsFile::Contents GAuth::SecretsFile::readContents( std::istream & file )
gsecretsfile.cpp	144	keep	void GAuth::SecretsFile::processLine( Contents & contents , unsigned int line_number , G::string_view side , G::string_view type_in , G::string_view id , G::string_view secret )
gsecretsfile.cpp	209	keep	void GAuth::SecretsFile::addWarning( Contents & contents , unsigned int line_number , G::string_view message_in , G::string_view more )
gsecretsfile.cpp	217	keep	void GAuth::SecretsFile::showWarnings( const Warnings & warnings , const G::Path & path , const std::string & debug_name )
gsecretsfile.cpp	232	keep	G::string_view GAuth::SecretsFile::canonicalView( G::string_view type )
gsecretsfile.cpp	241	keep	std::string GAuth::SecretsFile::serverKey( const std::string & type , const std::string & id_decoded )
gsecretsfile.cpp	246	keep	std::string GAuth::SecretsFile::serverKey( G::string_view type , G::string_view id_decoded )
gsecretsfile.cpp	251	keep	std::string GAuth::SecretsFile::clientKey( G::string_view type )
gsecretsfile.cpp	256	keep	GAuth::Secret GAuth::SecretsFile::clientSecret( G::string_view type ) const
gsecretsfile.cpp	270	keep	GAuth::Secret GAuth::SecretsFile::serverSecret( G::string_view type , G::string_view id ) const
gsecretsfile.cpp	284	keep	std::pair<std::string,std::string> GAuth::SecretsFile::serverTrust( const std::string & address_range ) const
gsecretsfile.cpp	301	keep	std::string GAuth::SecretsFile::path() const
gsecretsfile.cpp	306	keep	bool GAuth::SecretsFile::contains( G::string_view type , G::string_view id_decoded ) const
gsecretsfile.cpp	314	keep	std::string GAuth::SecretsFile::lineContext( unsigned int line_number )
gpop_enabled.cpp	25	keep	bool GPop::enabled() noexcept
gpop_enabled.cpp	30	keep	std::unique_ptr<GPop::Store> GPop::newStore( const G::Path & spool_dir , bool pop_by_name , bool allow_delete )
gpop_enabled.cpp	36	keep	std::unique_ptr<GAuth::SaslServerSecrets> GPop::newSecrets( const std::string & path )
gpop_enabled.cpp	41	keep	std::unique_ptr<GPop::Server> GPop::newServer( GNet::ExceptionSink es , Store & store , const GAuth::SaslServerSecrets & secrets , const Server::Config & config )
gpop_enabled.cpp	47	keep	void GPop::report( const Server * server , const std::string & group )
gpopserver.cpp	28	keep	GPop::ServerPeer::ServerPeer( GNet::ExceptionSinkUnbound esu , GNet::ServerPeerInfo && peer_info , Store & store , const GAuth::SaslServerSecrets & server_secrets , const std::string & sasl_server_config , std::unique_ptr<ServerProtocol::Text> ptext , const ServerProtocol::Config & protocol_config ) : GNet::ServerPeer(esu.bind(this),std::move(peer_info),GNet::LineBufferConfig::pop()) , m_ptext(ptext.release()) , m_protocol(*this,*this,store,server_secrets,sasl_server_config,*m_ptext,peerAddress(),protocol_config)
gpopserver.cpp	39	keep	void GPop::ServerPeer::onDelete( const std::string & reason )
gpopserver.cpp	45	keep	bool GPop::ServerPeer::onReceive( const char * line_data , std::size_t line_size , std::size_t , std::size_t , char )
gpopserver.cpp	51	keep	void GPop::ServerPeer::processLine( const std::string & line )
gpopserver.cpp	56	keep	bool GPop::ServerPeer::protocolSend( G::string_view line , std::size_t offset )
gpopserver.cpp	62	keep	void GPop::ServerPeer::onSendComplete()
gpopserver.cpp	67	keep	bool GPop::ServerPeer::securityEnabled() const
gpopserver.cpp	75	keep	void GPop::ServerPeer::securityStart()
gpopserver.cpp	80	keep	void GPop::ServerPeer::onSecure( const std::string & , const std::string & , const std::string & )
gpopserver.cpp	87	keep	GPop::Server::Server( GNet::ExceptionSink es , Store & store , const GAuth::SaslServerSecrets & secrets , const Config & config ) : GNet::MultiServer(es,config.addresses,config.port,"pop",config.net_server_peer_config,config.net_server_config) , m_config(config) , m_store(store) , m_secrets(secrets)
gpopserver.cpp	95	keep	GPop::Server::~Server()
gpopserver.cpp	100	keep	void GPop::Server::report( const std::string & group ) const
gpopserver.cpp	107	keep	std::unique_ptr<GNet::ServerPeer> GPop::Server::newPeer( GNet::ExceptionSinkUnbound esu , GNet::ServerPeerInfo && peer_info , GNet::MultiServer::ServerInfo )
gpopserver.cpp	131	keep	std::unique_ptr<GPop::ServerProtocol::Text> GPop::Server::newProtocolText( const GNet::Address & peer_address ) const
gpopserverprotocol.cpp	33	keep	GPop::ServerProtocol::ServerProtocol( Sender & sender , Security & security , Store & store , const GAuth::SaslServerSecrets & server_secrets , const std::string & sasl_server_config , const Text & text , const GNet::Address & peer_address , const Config & config ) : m_text(text) , m_sender(sender) , m_security(security) , m_store(store) , m_config(config) , m_sasl(GAuth::SaslServerFactory::newSaslServer(server_secrets,true,sasl_server_config,config.sasl_server_challenge_domain)) , m_peer_address(peer_address) , m_fsm(State::sStart,State::sEnd,State::s_Same,State::s_Any) , m_body_limit(-1L) , m_in_body(false) , m_secure(false) , m_sasl_init_apop(false)
gpopserverprotocol.cpp	75	keep	void GPop::ServerProtocol::init()
gpopserverprotocol.cpp	80	keep	void GPop::ServerProtocol::sendInit()
gpopserverprotocol.cpp	96	keep	void GPop::ServerProtocol::sendOk()
gpopserverprotocol.cpp	101	keep	void GPop::ServerProtocol::sendError( const std::string & more )
gpopserverprotocol.cpp	109	keep	void GPop::ServerProtocol::sendError()
gpopserverprotocol.cpp	114	keep	void GPop::ServerProtocol::apply( const std::string & line )
gpopserverprotocol.cpp	143	keep	void GPop::ServerProtocol::sendContent()
gpopserverprotocol.cpp	161	keep	void GPop::ServerProtocol::resume()
gpopserverprotocol.cpp	172	keep	bool GPop::ServerProtocol::sendContentLine( std::string & line , bool & eot )
gpopserverprotocol.cpp	196	keep	int GPop::ServerProtocol::commandNumber( const std::string & line , int default_ , std::size_t index ) const
gpopserverprotocol.cpp	212	keep	std::string GPop::ServerProtocol::commandWord( const std::string & line ) const
gpopserverprotocol.cpp	217	keep	std::string GPop::ServerProtocol::commandPart( const std::string & line , std::size_t index ) const
gpopserverprotocol.cpp	226	keep	std::string GPop::ServerProtocol::commandParameter( const std::string & line_in , std::size_t index ) const
gpopserverprotocol.cpp	231	keep	GPop::ServerProtocol::Event GPop::ServerProtocol::commandEvent( G::string_view command ) const
gpopserverprotocol.cpp	253	keep	void GPop::ServerProtocol::doQuitEarly( const std::string & , bool & )
gpopserverprotocol.cpp	259	keep	void GPop::ServerProtocol::doQuit( const std::string & , bool & )
gpopserverprotocol.cpp	266	keep	void GPop::ServerProtocol::doStat( const std::string & , bool & )
gpopserverprotocol.cpp	274	keep	void GPop::ServerProtocol::doUidl( const std::string & line , bool & )
gpopserverprotocol.cpp	279	keep	void GPop::ServerProtocol::doList( const std::string & line , bool & )
gpopserverprotocol.cpp	284	keep	void GPop::ServerProtocol::sendList( const std::string & line , bool uidl )
gpopserverprotocol.cpp	332	keep	void GPop::ServerProtocol::doRetr( const std::string & line , bool & more )
gpopserverprotocol.cpp	351	keep	void GPop::ServerProtocol::doTop( const std::string & line , bool & more )
gpopserverprotocol.cpp	370	keep	void GPop::ServerProtocol::doDele( const std::string & line , bool & )
gpopserverprotocol.cpp	384	keep	void GPop::ServerProtocol::doRset( const std::string & , bool & )
gpopserverprotocol.cpp	390	keep	void GPop::ServerProtocol::doNoop( const std::string & , bool & )
gpopserverprotocol.cpp	395	keep	void GPop::ServerProtocol::doNothing( const std::string & , bool & )
gpopserverprotocol.cpp	399	keep	void GPop::ServerProtocol::doAuth( const std::string & line , bool & ok )
gpopserverprotocol.cpp	450	keep	void GPop::ServerProtocol::doAuthData( const std::string & line , bool & ok )
gpopserverprotocol.cpp	476	keep	void GPop::ServerProtocol::doAuthComplete( const std::string & , bool & )
gpopserverprotocol.cpp	484	keep	void GPop::ServerProtocol::readStore( const std::string & user )
gpopserverprotocol.cpp	490	keep	void GPop::ServerProtocol::doStls( const std::string & , bool & )
gpopserverprotocol.cpp	497	keep	void GPop::ServerProtocol::secure()
gpopserverprotocol.cpp	503	keep	bool GPop::ServerProtocol::mechanismsIncludePlain() const
gpopserverprotocol.cpp	508	keep	std::string GPop::ServerProtocol::mechanisms() const
gpopserverprotocol.cpp	515	keep	void GPop::ServerProtocol::doCapa( const std::string & , bool & )
gpopserverprotocol.cpp	537	keep	void GPop::ServerProtocol::doUser( const std::string & line , bool & )
gpopserverprotocol.cpp	550	keep	void GPop::ServerProtocol::doPass( const std::string & line , bool & ok )
gpopserverprotocol.cpp	576	keep	void GPop::ServerProtocol::doApop( const std::string & line , bool & ok )
gpopserverprotocol.cpp	602	keep	void GPop::ServerProtocol::sendLine( G::string_view line , bool has_crlf )
gpopserverprotocol.cpp	616	keep	void GPop::ServerProtocol::sendLine( std::string && line )
gpopserverprotocol.cpp	622	keep	void GPop::ServerProtocol::sendLines( std::ostringstream & ss )
gpopserverprotocol.cpp	650	keep	GPop::ServerProtocolText::ServerProtocolText( const GNet::Address & )
gpopserverprotocol.cpp	654	keep	std::string GPop::ServerProtocolText::greeting() const
gpopserverprotocol.cpp	659	keep	std::string GPop::ServerProtocolText::quit() const
gpopserverprotocol.cpp	664	keep	std::string GPop::ServerProtocolText::capa() const
gpopserverprotocol.cpp	669	keep	std::string GPop::ServerProtocolText::user( const std::string & id ) const
gpopserverprotocol.cpp	676	keep	GPop::ServerProtocol::Config::Config()
gpopstore.cpp	57	keep	GPop::Store::Store( const G::Path & path , bool by_name , bool allow_delete ) : m_path(path) , m_by_name(by_name) , m_allow_delete(allow_delete)
gpopstore.cpp	96	keep	bool GPop::Store::accessible( const G::Path & dir_path , bool for_write )
gpopstore.cpp	119	keep	G::Path GPop::Store::dir() const
gpopstore.cpp	124	keep	bool GPop::Store::allowDelete() const
gpopstore.cpp	129	keep	bool GPop::Store::byName() const
gpopstore.cpp	136	keep	GPop::StoreMessage::StoreMessage( const std::string & name_in , Size size_in , bool in_parent_in ) : name(name_in) , size(size_in) , in_parent(in_parent_in) , deleted(false)
gpopstore.cpp	144	keep	G::Path GPop::StoreMessage::cpath( const G::Path & edir , const G::Path & sdir ) const
gpopstore.cpp	149	keep	G::Path GPop::StoreMessage::cpath( const G::Path & dir ) const
gpopstore.cpp	154	keep	G::Path GPop::StoreMessage::epath( const G::Path & edir ) const
gpopstore.cpp	159	keep	GPop::StoreMessage GPop::StoreMessage::invalid()
gpopstore.cpp	164	keep	std::string GPop::StoreMessage::uidl() const
gpopstore.cpp	171	keep	GPop::StoreUser::StoreUser( Store & store , const std::string & user ) : m_store(store) , m_user(user) , m_edir(store.byName()?G::Path(store.dir(),user):store.dir()) , m_sdir(store.dir())
gpopstore.cpp	207	keep	GPop::StoreList::StoreList()
gpopstore.cpp	210	keep	GPop::StoreList::StoreList( const StoreUser & store_user , bool allow_delete ) : m_allow_delete(allow_delete) , m_edir(store_user.m_edir) , m_sdir(store_user.m_sdir) , m_list(store_user.m_list)
gpopstore.cpp	218	keep	GPop::StoreList::List::const_iterator GPop::StoreList::cbegin() const
gpopstore.cpp	223	keep	GPop::StoreList::List::const_iterator GPop::StoreList::cend() const
gpopstore.cpp	228	keep	GPop::StoreMessage::Size GPop::StoreList::messageCount() const
gpopstore.cpp	236	keep	GPop::StoreList::Size GPop::StoreList::totalByteCount() const
gpopstore.cpp	247	keep	bool GPop::StoreList::valid( int id ) const
gpopstore.cpp	252	keep	GPop::StoreMessage GPop::StoreList::get( int id ) const
gpopstore.cpp	258	keep	GPop::StoreList::Size GPop::StoreList::byteCount( int id ) const
gpopstore.cpp	264	keep	std::unique_ptr<std::istream> GPop::StoreList::content( int id ) const
gpopstore.cpp	284	keep	void GPop::StoreList::remove( int id )
gpopstore.cpp	290	keep	void GPop::StoreList::commit()
gpopstore.cpp	310	keep	void GPop::StoreList::deleteFile( const G::Path & path , bool & all_ok ) const
gpopstore.cpp	322	remove	std::string GPop::StoreList::uidl( int id ) const
gpopstore.cpp	328	keep	void GPop::StoreList::rollback()
gpopstore.cpp	334	keep	bool GPop::StoreList::shared( const StoreMessage & message ) const
gpopstore.cpp	373	keep	GPop::StoreImp::FileReader::FileReader() // NOLINT modernize-use-equals-default because of -Wunused
genvelope.cpp	58	keep	std::size_t GStore::Envelope::write( std::ostream & stream , const GStore::Envelope & e )
genvelope.cpp	97	keep	void GStore::Envelope::copyExtra( std::istream & in , std::ostream & out )
genvelope.cpp	111	keep	void GStore::Envelope::read( std::istream & stream , GStore::Envelope & e )
genvelope.cpp	163	keep	GStore::MessageStore::BodyType GStore::Envelope::parseSmtpBodyType( const std::string & s , MessageStore::BodyType default_ )
genvelope.cpp	169	remove	std::string GStore::Envelope::smtpBodyType( MessageStore::BodyType type )
genvelope.cpp	177	keep	std::string GStore::EnvelopeImp::folded( const std::string & s_in )
genvelope.cpp	186	keep	std::string GStore::EnvelopeImp::xnormalise( const std::string & s )
genvelope.cpp	191	keep	std::string GStore::EnvelopeImp::readFormat( std::istream & stream , bool * crlf )
genvelope.cpp	199	keep	void GStore::EnvelopeImp::readUtf8Mailboxes( std::istream & stream , Envelope & e )
genvelope.cpp	204	keep	void GStore::EnvelopeImp::readBodyType( std::istream & stream , Envelope & e )
genvelope.cpp	217	keep	void GStore::EnvelopeImp::readFrom( std::istream & stream , Envelope & e )
genvelope.cpp	222	keep	void GStore::EnvelopeImp::readFromAuthIn( std::istream & stream , Envelope & e )
genvelope.cpp	229	keep	void GStore::EnvelopeImp::readFromAuthOut( std::istream & stream , Envelope & e )
genvelope.cpp	236	keep	void GStore::EnvelopeImp::readForwardTo( std::istream & stream , Envelope & e )
genvelope.cpp	241	keep	void GStore::EnvelopeImp::readForwardToAddress( std::istream & stream , Envelope & e )
genvelope.cpp	246	keep	void GStore::EnvelopeImp::readToList( std::istream & stream , Envelope & e )
genvelope.cpp	268	keep	void GStore::EnvelopeImp::readAuthentication( std::istream & stream , Envelope & e )
genvelope.cpp	273	keep	void GStore::EnvelopeImp::readClientSocketAddress( std::istream & stream , Envelope & e )
genvelope.cpp	278	keep	void GStore::EnvelopeImp::readClientSocketName( std::istream & stream , Envelope & )
genvelope.cpp	283	keep	void GStore::EnvelopeImp::readClientCertificate( std::istream & stream , Envelope & e )
genvelope.cpp	288	keep	void GStore::EnvelopeImp::readEnd( std::istream & stream , Envelope & )
genvelope.cpp	295	keep	std::string GStore::EnvelopeImp::readValue( std::istream & stream , const std::string & expected_key , bool * crlf )
genvelope.cpp	327	keep	std::string GStore::EnvelopeImp::readLine( std::istream & stream , bool * crlf )
genvelope.cpp	338	keep	std::string GStore::EnvelopeImp::value( const std::string & line )
genvelope.cpp	343	keep	G::string_view GStore::EnvelopeImp::bodyTypeName( MessageStore::BodyType type )
genvelope.cpp	355	keep	GStore::MessageStore::BodyType GStore::EnvelopeImp::parseSmtpBodyType( G::string_view s , MessageStore::BodyType default_ )
genvelope.cpp	369	keep	G::string_view GStore::EnvelopeImp::smtpBodyType( MessageStore::BodyType type )
gfiledelivery.cpp	36	keep	GStore::FileDelivery::FileDelivery( FileStore & store , const Config & config ) : m_store(store) , m_config(config)
gfiledelivery.cpp	42	keep	bool GStore::FileDelivery::deliver( const MessageId & message_id , bool is_new )
gfiledelivery.cpp	61	keep	bool GStore::FileDelivery::deliverToMailboxes( const G::Path & delivery_dir , const Envelope & envelope , const G::Path & envelope_path , const G::Path & content_path )
gfiledelivery.cpp	98	keep	void GStore::FileDelivery::deliverTo( FileStore & /*store*/ , G::string_view prefix , const G::Path & dst_dir , const G::Path & envelope_path , const G::Path & content_path , bool hardlink , bool pop_by_name )
gfiledelivery.cpp	144	keep	G::StringArray GStore::FileDelivery::mailboxes( const Config & config , const GStore::Envelope & envelope )
gfiledelivery.cpp	157	keep	std::string GStore::FileDelivery::mailbox( const Config & , const std::string & recipient )
gfiledelivery.cpp	169	keep	std::string GStore::FileDelivery::id( const G::Path & envelope_path )
gfiledelivery.cpp	174	keep	G::Path GStore::FileDelivery::epath( const MessageId & message_id , FileStore::State store_state ) const
gfiledelivery.cpp	179	keep	G::Path GStore::FileDelivery::cpath( const MessageId & message_id ) const
gfilestore.cpp	66	keep	GStore::FileIterator::FileIterator( FileStore & store , const G::Path & dir , bool lock ) : m_store(store) , m_lock(lock)
gfilestore.cpp	74	keep	GStore::FileIterator::~FileIterator()
gfilestore.cpp	77	keep	std::unique_ptr<GStore::StoredMessage> GStore::FileIterator::next()
gfilestore.cpp	109	keep	GStore::FileStore::FileStore( const G::Path & dir , const G::Path & delivery_dir , const Config & config ) : m_seq(config.seq) , m_dir(dir) , m_delivery_dir(delivery_dir) , m_config(config)
gfilestore.cpp	118	keep	G::Path GStore::FileStore::directory() const
gfilestore.cpp	123	keep	G::Path GStore::FileStore::deliveryDir() const
gfilestore.cpp	128	keep	std::string GStore::FileStore::x()
gfilestore.cpp	133	keep	std::string GStore::FileStore::format( int generation )
gfilestore.cpp	148	keep	bool GStore::FileStore::knownFormat( const std::string & format_in )
gfilestore.cpp	158	keep	void GStore::FileStore::checkPath( const G::Path & directory_path )
gfilestore.cpp	190	keep	std::string GStore::FileStore::location( const MessageId & id ) const
gfilestore.cpp	195	keep	std::unique_ptr<std::ofstream> GStore::FileStore::stream( const G::Path & path )
gfilestore.cpp	202	keep	G::Path GStore::FileStore::contentPath( const MessageId & id ) const
gfilestore.cpp	207	keep	G::Path GStore::FileStore::envelopePath( const MessageId & id , State state ) const
gfilestore.cpp	219	keep	GStore::MessageId GStore::FileStore::newId()
gfilestore.cpp	227	keep	GStore::MessageId GStore::FileStore::newId( unsigned long seq )
gfilestore.cpp	235	keep	bool GStore::FileStore::empty() const
gfilestore.cpp	244	keep	std::vector<GStore::MessageId> GStore::FileStore::ids()
gfilestore.cpp	257	keep	std::vector<GStore::MessageId> GStore::FileStore::failures()
gfilestore.cpp	270	keep	void GStore::FileStore::unfailAll()
gfilestore.cpp	284	keep	std::unique_ptr<GStore::MessageStore::Iterator> GStore::FileStore::iterator( bool lock )
gfilestore.cpp	289	keep	std::unique_ptr<GStore::StoredMessage> GStore::FileStore::get( const MessageId & id )
gfilestore.cpp	305	keep	GStore::Envelope GStore::FileStore::readEnvelope( const G::Path & envelope_path , std::ifstream * stream_p )
gfilestore.cpp	317	keep	std::unique_ptr<GStore::NewMessage> GStore::FileStore::newMessage( const std::string & from , const MessageStore::SmtpInfo & smtp_info , const std::string & from_auth_out )
gfilestore.cpp	323	keep	void GStore::FileStore::updated()
gfilestore.cpp	329	keep	G::Slot::Signal<> & GStore::FileStore::messageStoreUpdateSignal()
gfilestore.cpp	334	keep	G::Slot::Signal<> & GStore::FileStore::messageStoreRescanSignal()
gfilestore.cpp	339	keep	void GStore::FileStore::rescan()
gfilestore.cpp	346	keep	GStore::FileReader::FileReader()
gfilestore.cpp	349	keep	GStore::FileReader::~FileReader()
gfilestore.cpp	354	keep	GStore::DirectoryReader::DirectoryReader()
gfilestore.cpp	357	keep	GStore::DirectoryReader::~DirectoryReader()
gfilestore.cpp	362	keep	GStore::FileWriter::FileWriter() : G::Root(false) , G::Process::Umask(G::Process::Umask::Mode::Tighter)
gfilestore.cpp	368	keep	GStore::FileWriter::~FileWriter()
gfilestore.cpp	373	keep	int & GStore::FileStore::FileOp::errno_() noexcept
gfilestore.cpp	379	keep	bool GStore::FileStore::FileOp::rename( const G::Path & src , const G::Path & dst )
gfilestore.cpp	388	keep	bool GStore::FileStore::FileOp::renameOnto( const G::Path & src , const G::Path & dst )
gfilestore.cpp	397	keep	bool GStore::FileStore::FileOp::remove( const G::Path & path ) noexcept
gfilestore.cpp	413	keep	bool GStore::FileStore::FileOp::exists( const G::Path & path )
gfilestore.cpp	422	keep	int GStore::FileStore::FileOp::fdopen( const G::Path & path )
gfilestore.cpp	431	keep	std::ifstream & GStore::FileStore::FileOp::openIn( std::ifstream & stream , const G::Path & path )
gfilestore.cpp	440	keep	std::ofstream & GStore::FileStore::FileOp::openOut( std::ofstream & stream , const G::Path & path )
gfilestore.cpp	449	keep	std::ofstream & GStore::FileStore::FileOp::openAppend( std::ofstream & stream , const G::Path & path )
gfilestore.cpp	458	keep	bool GStore::FileStore::FileOp::hardlink( const G::Path & src , const G::Path & dst )
gfilestore.cpp	469	keep	bool GStore::FileStore::FileOp::copy( const G::Path & src , const G::Path & dst , bool use_hardlink )
gfilestore.cpp	477	keep	bool GStore::FileStore::FileOp::copy( const G::Path & src , const G::Path & dst )
gfilestore.cpp	486	keep	bool GStore::FileStore::FileOp::mkdir( const G::Path & dir )
gfilestore.cpp	495	keep	bool GStore::FileStore::FileOp::isdir( const G::Path & a , const G::Path & b , const G::Path & c )
gmessagestore.cpp	25	keep	std::unique_ptr<GStore::StoredMessage> GStore::operator++( std::shared_ptr<MessageStore::Iterator> & iter )
gmessagestore_unix.cpp	30	keep	G::Path GStore::MessageStore::defaultDirectory()
gnewfile.cpp	37	keep	GStore::NewFile::NewFile( FileStore & store , const std::string & from , const MessageStore::SmtpInfo & smtp_info , const std::string & from_auth_out , std::size_t max_size ) : m_store(store) , m_id(store.newId()) , m_committed(false) , m_saved(false) , m_size(0U) , m_max_size(max_size)
gnewfile.cpp	58	keep	GStore::NewFile::~NewFile()
gnewfile.cpp	69	keep	void GStore::NewFile::cleanup()
gnewfile.cpp	82	keep	void GStore::NewFile::prepare( const std::string & session_auth_id , const std::string & peer_socket_address , const std::string & peer_certificate )
gnewfile.cpp	101	keep	void GStore::NewFile::commit( bool throw_on_error )
gnewfile.cpp	111	keep	void GStore::NewFile::addTo( const std::string & to , bool local , bool utf8address )
gnewfile.cpp	125	keep	GStore::NewMessage::Status GStore::NewFile::addContent( const char * data , std::size_t data_size )
gnewfile.cpp	152	keep	std::size_t GStore::NewFile::contentSize() const
gnewfile.cpp	158	keep	void GStore::NewFile::saveEnvelope( Envelope & env , const G::Path & path )
gnewfile.cpp	169	keep	GStore::MessageId GStore::NewFile::id() const
gnewfile.cpp	174	keep	std::string GStore::NewFile::location() const
gnewfile.cpp	179	keep	G::Path GStore::NewFile::cpath() const
gnewfile.cpp	184	keep	G::Path GStore::NewFile::epath( State state ) const
gnewmessage.cpp	26	keep	void GStore::NewMessage::addContentLine( const std::string & line )
gstoredfile.cpp	36	keep	GStore::StoredFile::StoredFile( FileStore & store , const MessageId & id , State state ) : m_store(store) , m_id(id) , m_state(state) , m_unlock(false)
gstoredfile.cpp	44	keep	GStore::StoredFile::~StoredFile()
gstoredfile.cpp	59	keep	void GStore::StoredFile::noUnlock()
gstoredfile.cpp	64	keep	GStore::MessageId GStore::StoredFile::id() const
gstoredfile.cpp	69	keep	std::string GStore::StoredFile::location() const
gstoredfile.cpp	74	keep	G::Path GStore::StoredFile::cpath() const
gstoredfile.cpp	79	keep	G::Path GStore::StoredFile::epath( State state ) const
gstoredfile.cpp	84	keep	GStore::MessageStore::BodyType GStore::StoredFile::bodyType() const
gstoredfile.cpp	89	keep	void GStore::StoredFile::close()
gstoredfile.cpp	94	keep	std::string GStore::StoredFile::reopen()
gstoredfile.cpp	103	keep	bool GStore::StoredFile::readEnvelope( std::string & reason )
gstoredfile.cpp	117	keep	bool GStore::StoredFile::openContent( std::string & reason )
gstoredfile.cpp	140	keep	const std::string & GStore::StoredFile::eol() const
gstoredfile.cpp	147	keep	bool GStore::StoredFile::lock()
gstoredfile.cpp	167	keep	void GStore::StoredFile::editRecipients( const G::StringArray & recipients )
gstoredfile.cpp	172	keep	void GStore::StoredFile::editEnvelope( std::function<void(Envelope&)> edit_fn , std::istream * headers_stream )
gstoredfile.cpp	209	keep	void GStore::StoredFile::replaceEnvelope( const G::Path & envelope_path , const G::Path & envelope_path_tmp )
gstoredfile.cpp	218	keep	std::size_t GStore::StoredFile::writeEnvelopeImp( const Envelope & envelope , const G::Path & envelope_path , std::ofstream & stream )
gstoredfile.cpp	229	keep	void GStore::StoredFile::fail( const std::string & reason , int reason_code )
gstoredfile.cpp	249	keep	void GStore::StoredFile::addReason( const G::Path & path , const std::string & reason , int reason_code ) const
gstoredfile.cpp	260	keep	void GStore::StoredFile::destroy()
gstoredfile.cpp	276	keep	std::string GStore::StoredFile::from() const
gstoredfile.cpp	281	keep	std::string GStore::StoredFile::to( std::size_t i ) const
gstoredfile.cpp	286	keep	std::size_t GStore::StoredFile::toCount() const
gstoredfile.cpp	291	keep	std::size_t GStore::StoredFile::contentSize() const
gstoredfile.cpp	299	keep	std::istream & GStore::StoredFile::contentStream()
gstoredfile.cpp	306	keep	std::string GStore::StoredFile::authentication() const
gstoredfile.cpp	311	keep	std::string GStore::StoredFile::fromAuthIn() const
gstoredfile.cpp	316	keep	std::string GStore::StoredFile::forwardTo() const
gstoredfile.cpp	321	keep	std::string GStore::StoredFile::forwardToAddress() const
gstoredfile.cpp	326	keep	bool GStore::StoredFile::utf8Mailboxes() const
gstoredfile.cpp	331	keep	std::string GStore::StoredFile::fromAuthOut() const
gstoredfile.cpp	338	keep	GStore::StoredFile::Stream::Stream() : StreamBuf(&G::File::read,&G::File::write,&G::File::close), std::istream(static_cast<StreamBuf*>(this))
gstoredfile.cpp	344	keep	GStore::StoredFile::Stream::Stream( const G::Path & path ) : StreamBuf(&G::File::read,&G::File::write,&G::File::close), std::istream(static_cast<StreamBuf*>(this))
gstoredfile.cpp	351	keep	void GStore::StoredFile::Stream::open( const G::Path & path )
gstoredfile.cpp	366	keep	std::streamoff GStore::StoredFile::Stream::size() const
gstoredmessage.cpp	24	keep	GStore::StoredMessageStub::StoredMessageStub()
gstoredmessage.cpp	27	keep	GStore::StoredMessageStub::~StoredMessageStub()
gcopyfilter.cpp	30	keep	GFilters::CopyFilter::CopyFilter( GNet::ExceptionSink es , GStore::FileStore & store , Filter::Type filter_type , const Filter::Config & filter_config , const std::string & spec ) : SimpleFilterBase(es,filter_type,"copy:") , m_store(store) , m_filter_config(filter_config) , m_spec(spec)
gcopyfilter.cpp	46	keep	GSmtp::Filter::Result GFilters::CopyFilter::run( const GStore::MessageId & message_id , bool & , GStore::FileStore::State e_state )
gdeliveryfilter.cpp	27	keep	GFilters::DeliveryFilter::DeliveryFilter( GNet::ExceptionSink es , GStore::FileStore & store , Filter::Type filter_type , const Filter::Config & filter_config , const std::string & spec ) : SimpleFilterBase(es,filter_type,"deliver:") , m_store(store) , m_filter_type(filter_type) , m_filter_config(filter_config) , m_spec(spec)
gdeliveryfilter.cpp	37	keep	GSmtp::Filter::Result GFilters::DeliveryFilter::run( const GStore::MessageId & message_id , bool & , GStore::FileStore::State )
gexecutablefilter.cpp	32	keep	GFilters::ExecutableFilter::ExecutableFilter( GNet::ExceptionSink es , GStore::FileStore & file_store , Filter::Type filter_type , const Filter::Config & filter_config , const std::string & path , const std::string & log_prefix ) : m_file_store(file_store) , m_filter_type(filter_type) , m_prefix(log_prefix.empty()?G::sv_to_string(Filter::strtype(filter_type)):log_prefix) , m_exit(0,filter_type) , m_path(path) , m_timeout(filter_config.timeout) , m_timer(*this,&ExecutableFilter::onTimeout,es) , m_task(*this,es,"<<filter exec error: __strerror__>>",G::Root::nobody())
gexecutablefilter.cpp	47	keep	GFilters::ExecutableFilter::~ExecutableFilter()
gexecutablefilter.cpp	50	keep	bool GFilters::ExecutableFilter::quiet() const
gexecutablefilter.cpp	55	keep	std::string GFilters::ExecutableFilter::id() const
gexecutablefilter.cpp	60	keep	bool GFilters::ExecutableFilter::special() const
gexecutablefilter.cpp	65	keep	GSmtp::Filter::Result GFilters::ExecutableFilter::result() const
gexecutablefilter.cpp	70	keep	std::string GFilters::ExecutableFilter::response() const
gexecutablefilter.cpp	79	keep	std::string GFilters::ExecutableFilter::reason() const
gexecutablefilter.cpp	88	keep	void GFilters::ExecutableFilter::start( const GStore::MessageId & message_id )
gexecutablefilter.cpp	106	keep	void GFilters::ExecutableFilter::onTimeout()
gexecutablefilter.cpp	117	keep	void GFilters::ExecutableFilter::onTaskDone( int exit_code , const std::string & output )
gexecutablefilter.cpp	140	keep	std::pair<std::string,std::string> GFilters::ExecutableFilter::parseOutput( std::string s , const std::string & default_ ) const
gexecutablefilter.cpp	182	keep	G::Slot::Signal<int> & GFilters::ExecutableFilter::doneSignal() noexcept
gexecutablefilter.cpp	187	keep	void GFilters::ExecutableFilter::cancel()
gfilterchain.cpp	30	keep	GFilters::FilterChain::FilterChain( GNet::ExceptionSink es , GSmtp::FilterFactoryBase & ff , Filter::Type filter_type , const Filter::Config & filter_config , const GSmtp::FilterFactoryBase::Spec & spec , const std::string & log_prefix ) : m_filter_index(0U) , m_filter(nullptr) , m_running(false) , m_message_id(GStore::MessageId::none())
gfilterchain.cpp	52	keep	void GFilters::FilterChain::add( GNet::ExceptionSink es , GSmtp::FilterFactoryBase & ff , Filter::Type filter_type , const Filter::Config & filter_config , const GSmtp::FilterFactoryBase::Spec & spec , const std::string & log_prefix )
gfilterchain.cpp	61	keep	GFilters::FilterChain::~FilterChain()
gfilterchain.cpp	67	keep	std::string GFilters::FilterChain::id() const
gfilterchain.cpp	72	keep	bool GFilters::FilterChain::quiet() const
gfilterchain.cpp	78	keep	G::Slot::Signal<int> & GFilters::FilterChain::doneSignal() noexcept
gfilterchain.cpp	83	keep	void GFilters::FilterChain::start( const GStore::MessageId & id )
gfilterchain.cpp	98	keep	void GFilters::FilterChain::onFilterDone( int ok_abandon_fail )
gfilterchain.cpp	124	keep	void GFilters::FilterChain::cancel()
gfilterchain.cpp	134	keep	GSmtp::Filter::Result GFilters::FilterChain::result() const
gfilterchain.cpp	139	keep	std::string GFilters::FilterChain::response() const
gfilterchain.cpp	144	keep	std::string GFilters::FilterChain::reason() const
gfilterchain.cpp	149	keep	bool GFilters::FilterChain::special() const
gfilterfactory.cpp	40	keep	GFilters::FilterFactory::FilterFactory( GStore::FileStore & file_store ) : m_file_store(file_store)
gfilterfactory.cpp	45	keep	GFilters::FilterFactory::Spec GFilters::FilterFactory::parse( const std::string & spec_in , const G::Path & base_dir , const G::Path & app_dir , G::StringArray * warnings_p )
gfilterfactory.cpp	119	keep	std::unique_ptr<GSmtp::Filter> GFilters::FilterFactory::newFilter( GNet::ExceptionSink es , GSmtp::Filter::Type filter_type , const GSmtp::Filter::Config & filter_config , const FilterFactory::Spec & spec , const std::string & log_prefix )
gfilterfactory.cpp	176	keep	void GFilters::FilterFactory::checkNumber( Spec & result )
gfilterfactory.cpp	195	keep	void GFilters::FilterFactory::checkNet( Spec & result )
gfilterfactory.cpp	208	keep	void GFilters::FilterFactory::checkRange( Spec & result )
gfilterfactory.cpp	221	keep	void GFilters::FilterFactory::fixFile( Spec & result , const G::Path & base_dir , const G::Path & app_dir )
gfilterfactory.cpp	234	keep	void GFilters::FilterFactory::checkFile( Spec & result , G::StringArray * warnings_p )
gmxfilter.cpp	32	keep	GFilters::MxFilter::MxFilter( GNet::ExceptionSink es , GStore::FileStore & store , Filter::Type filter_type , const Filter::Config & filter_config , const std::string & spec ) : m_es(es) , m_store(store) , m_filter_type(filter_type) , m_filter_config(filter_config) , m_spec(spec) , m_id("mx:") , m_result(Result::fail) , m_special(false) , m_timer(*this,&MxFilter::onTimeout,es)
gmxfilter.cpp	48	keep	GFilters::MxFilter::~MxFilter()
gmxfilter.cpp	54	keep	void GFilters::MxFilter::start( const GStore::MessageId & message_id )
gmxfilter.cpp	80	keep	std::string GFilters::MxFilter::id() const
gmxfilter.cpp	85	keep	bool GFilters::MxFilter::quiet() const
gmxfilter.cpp	90	keep	bool GFilters::MxFilter::special() const
gmxfilter.cpp	95	keep	GSmtp::Filter::Result GFilters::MxFilter::result() const
gmxfilter.cpp	100	keep	std::string GFilters::MxFilter::response() const
gmxfilter.cpp	105	keep	std::string GFilters::MxFilter::reason() const
gmxfilter.cpp	110	keep	G::Slot::Signal<int> & GFilters::MxFilter::doneSignal() noexcept
gmxfilter.cpp	115	keep	void GFilters::MxFilter::cancel()
gmxfilter.cpp	121	keep	void GFilters::MxFilter::onTimeout()
gmxfilter.cpp	127	keep	void GFilters::MxFilter::lookupDone( GStore::MessageId message_id , std::string address , std::string error )
gmxfilter.cpp	148	keep	GStore::FileStore::State GFilters::MxFilter::storestate() const
gmxfilter.cpp	155	keep	GFilters::MxLookup::Config GFilters::MxFilter::mxconfig( const std::string & spec )
gmxfilter.cpp	167	keep	std::vector<GNet::Address> GFilters::MxFilter::mxnameservers( const std::string & spec )
gmxlookup.cpp	43	keep	bool GFilters::MxLookup::enabled()
gmxlookup.cpp	48	remove	GFilters::MxLookup::MxLookup( GNet::ExceptionSink es , Config config ) : MxLookup(es,config,GNet::nameservers(53U))
gmxlookup.cpp	53	keep	GFilters::MxLookup::MxLookup( GNet::ExceptionSink es , Config config , const std::vector<GNet::Address> & nameservers ) : m_es(es) , m_config(config) , m_message_id(GStore::MessageId::none()) , m_ns_index(0U) , m_ns_failures(0U) , m_nameservers(nameservers) , m_timer(*this,&MxLookup::onTimeout,es)
gmxlookup.cpp	97	keep	void GFilters::MxLookup::start( const GStore::MessageId & message_id , const std::string & forward_to )
gmxlookup.cpp	118	keep	void GFilters::MxLookup::readEvent()
gmxlookup.cpp	131	keep	void GFilters::MxLookup::process( const char * p , std::size_t n )
gmxlookup.cpp	153	keep	void GFilters::MxLookup::disable( std::size_t ns_index , const std::string & reason )
gmxlookup.cpp	161	keep	std::pair<GFilters::MxLookupImp::Result,std::string> GFilters::MxLookupImp::parse( const GNet::DnsMessage & response , const GNet::Address & ns_address , unsigned int port )
gmxlookup.cpp	229	keep	void GFilters::MxLookup::sendMxQuestion( std::size_t ns_index , const std::string & mx_question )
gmxlookup.cpp	242	keep	void GFilters::MxLookup::sendHostQuestion( std::size_t ns_index , const std::string & host_question )
gmxlookup.cpp	254	keep	void GFilters::MxLookup::cancel()
gmxlookup.cpp	260	keep	void GFilters::MxLookup::dropReadHandlers()
gmxlookup.cpp	268	keep	void GFilters::MxLookup::fail( const std::string & error )
gmxlookup.cpp	275	keep	void GFilters::MxLookup::onTimeout()
gmxlookup.cpp	293	keep	void GFilters::MxLookup::startTimer()
gmxlookup.cpp	300	keep	void GFilters::MxLookup::succeed( const std::string & result )
gmxlookup.cpp	306	keep	GNet::DatagramSocket & GFilters::MxLookup::socket( std::size_t ns_index )
gmxlookup.cpp	311	keep	G::Slot::Signal<GStore::MessageId,std::string,std::string> & GFilters::MxLookup::doneSignal() noexcept
gmxlookup.cpp	316	keep	GFilters::MxLookup::Config::Config()
gnetworkfilter.cpp	27	keep	GFilters::NetworkFilter::NetworkFilter( GNet::ExceptionSink es , GStore::FileStore & file_store , Filter::Type , const Filter::Config & config , const std::string & server ) : m_es(es) , m_file_store(file_store) , m_timer(*this,&NetworkFilter::onTimeout,m_es) , m_done_signal(true) , m_location(server) , m_connection_timeout(config.timeout) , m_response_timeout(config.timeout) , m_result(Result::fail)
gnetworkfilter.cpp	42	keep	GFilters::NetworkFilter::~NetworkFilter()
gnetworkfilter.cpp	47	keep	std::string GFilters::NetworkFilter::id() const
gnetworkfilter.cpp	52	keep	bool GFilters::NetworkFilter::quiet() const
gnetworkfilter.cpp	57	keep	void GFilters::NetworkFilter::start( const GStore::MessageId & message_id )
gnetworkfilter.cpp	74	keep	void GFilters::NetworkFilter::onException( GNet::ExceptionSource * , std::exception & e , bool done )
gnetworkfilter.cpp	83	keep	void GFilters::NetworkFilter::clientEvent( const std::string & s1 , const std::string & s2 , const std::string & )
gnetworkfilter.cpp	91	keep	void GFilters::NetworkFilter::sendResult( const std::string & reason )
gnetworkfilter.cpp	101	keep	void GFilters::NetworkFilter::onTimeout()
gnetworkfilter.cpp	107	keep	GSmtp::Filter::Result GFilters::NetworkFilter::result() const
gnetworkfilter.cpp	112	keep	bool GFilters::NetworkFilter::special() const
gnetworkfilter.cpp	117	keep	std::string GFilters::NetworkFilter::response() const
gnetworkfilter.cpp	123	keep	std::string GFilters::NetworkFilter::reason() const
gnetworkfilter.cpp	128	keep	G::Slot::Signal<int> & GFilters::NetworkFilter::doneSignal() noexcept
gnetworkfilter.cpp	133	keep	void GFilters::NetworkFilter::cancel()
gnullfilter.cpp	26	remove	GFilters::NullFilter::NullFilter( GNet::ExceptionSink es , GStore::FileStore & , Filter::Type filter_type , const Filter::Config & ) : m_id("exit") , m_exit(0,filter_type) , m_timeout(0) , m_timer(*this,&NullFilter::onTimeout,es)
gnullfilter.cpp	35	keep	GFilters::NullFilter::NullFilter( GNet::ExceptionSink es , GStore::FileStore & , Filter::Type filter_type , const Filter::Config & , unsigned int exit_code ) : m_id("exit:"+G::Str::fromUInt(exit_code)) , m_exit(static_cast<int>(exit_code),filter_type) , m_timeout(0) , m_timer(*this,&NullFilter::onTimeout,es)
gnullfilter.cpp	45	keep	GFilters::NullFilter::NullFilter( GNet::ExceptionSink es , GStore::FileStore & , Filter::Type filter_type , const Filter::Config & , G::TimeInterval sleep_time ) : m_id("sleep") , m_exit(0,filter_type) , m_timeout(sleep_time) , m_timer(*this,&NullFilter::onTimeout,es)
gnullfilter.cpp	55	keep	std::string GFilters::NullFilter::id() const
gnullfilter.cpp	60	keep	bool GFilters::NullFilter::quiet() const
gnullfilter.cpp	65	keep	bool GFilters::NullFilter::special() const
gnullfilter.cpp	70	keep	GSmtp::Filter::Result GFilters::NullFilter::result() const
gnullfilter.cpp	75	keep	std::string GFilters::NullFilter::response() const
gnullfilter.cpp	80	keep	std::string GFilters::NullFilter::reason() const
gnullfilter.cpp	85	keep	G::Slot::Signal<int> & GFilters::NullFilter::doneSignal() noexcept
gnullfilter.cpp	90	keep	void GFilters::NullFilter::cancel()
gnullfilter.cpp	94	keep	void GFilters::NullFilter::start( const GStore::MessageId & )
gnullfilter.cpp	99	keep	void GFilters::NullFilter::onTimeout()
gsimplefilterbase.cpp	25	keep	GFilters::SimpleFilterBase::SimpleFilterBase( GNet::ExceptionSink es , Filter::Type filter_type , G::string_view id ) : m_filter_type(filter_type) , m_id(G::sv_to_string(id)) , m_timer(*this,&SimpleFilterBase::onTimeout,es) , m_result(Result::fail) , m_special(false)
gsimplefilterbase.cpp	35	keep	std::string GFilters::SimpleFilterBase::id() const
gsimplefilterbase.cpp	40	keep	bool GFilters::SimpleFilterBase::quiet() const
gsimplefilterbase.cpp	45	keep	void GFilters::SimpleFilterBase::start( const GStore::MessageId & message_id )
gsimplefilterbase.cpp	57	keep	G::Slot::Signal<int> & GFilters::SimpleFilterBase::doneSignal() noexcept
gsimplefilterbase.cpp	62	keep	void GFilters::SimpleFilterBase::cancel()
gsimplefilterbase.cpp	67	keep	GSmtp::Filter::Result GFilters::SimpleFilterBase::result() const
gsimplefilterbase.cpp	72	keep	std::string GFilters::SimpleFilterBase::response() const
gsimplefilterbase.cpp	77	keep	std::string GFilters::SimpleFilterBase::reason() const
gsimplefilterbase.cpp	82	keep	bool GFilters::SimpleFilterBase::special() const
gsimplefilterbase.cpp	87	keep	void GFilters::SimpleFilterBase::onTimeout()
gspamfilter.cpp	26	keep	GFilters::SpamFilter::SpamFilter( GNet::ExceptionSink es , GStore::FileStore & file_store , Filter::Type , const Filter::Config & config , const std::string & server , bool read_only , bool always_pass ) : m_es(es) , m_file_store(file_store) , m_location(server) , m_read_only(read_only) , m_always_pass(always_pass) , m_connection_timeout(config.timeout) , m_response_timeout(config.timeout) , m_result(Result::fail)
gspamfilter.cpp	42	keep	GFilters::SpamFilter::~SpamFilter()
gspamfilter.cpp	48	keep	std::string GFilters::SpamFilter::id() const
gspamfilter.cpp	53	keep	bool GFilters::SpamFilter::quiet() const
gspamfilter.cpp	58	keep	void GFilters::SpamFilter::start( const GStore::MessageId & message_id )
gspamfilter.cpp	68	keep	void GFilters::SpamFilter::clientDeleted( const std::string & reason )
gspamfilter.cpp	78	keep	void GFilters::SpamFilter::clientEvent( const std::string & s1 , const std::string & s2 , const std::string & )
gspamfilter.cpp	93	keep	bool GFilters::SpamFilter::special() const
gspamfilter.cpp	98	keep	void GFilters::SpamFilter::emit( bool ok )
gspamfilter.cpp	104	keep	GSmtp::Filter::Result GFilters::SpamFilter::result() const
gspamfilter.cpp	109	keep	std::string GFilters::SpamFilter::response() const
gspamfilter.cpp	114	keep	std::string GFilters::SpamFilter::reason() const
gspamfilter.cpp	119	keep	G::Slot::Signal<int> & GFilters::SpamFilter::doneSignal() noexcept
gspamfilter.cpp	124	keep	void GFilters::SpamFilter::cancel()
gsplitfilter.cpp	34	keep	GFilters::SplitFilter::SplitFilter( GNet::ExceptionSink es , GStore::FileStore & store , Filter::Type filter_type , const Filter::Config & filter_config , const std::string & spec ) : SimpleFilterBase(es,filter_type,"split:") , m_store(store) , m_filter_type(filter_type) , m_filter_config(filter_config)
gsplitfilter.cpp	49	keep	GSmtp::Filter::Result GFilters::SplitFilter::run( const GStore::MessageId & message_id , bool & rescan_out , GStore::FileStore::State e_state )
gsplitfilter.cpp	144	keep	G::StringArray GFilters::SplitFilter::matching( const G::StringArray & recipients , const std::string & domain ) const
gsplitfilter.cpp	153	keep	bool GFilters::SplitFilter::match( const std::string & a , const std::string & b , bool raw )
gsplitfilter.cpp	158	keep	void GFilters::SplitFilter::normalise( std::string & domain , bool raw )
gexecutableverifier.cpp	32	keep	GVerifiers::ExecutableVerifier::ExecutableVerifier( GNet::ExceptionSink es , const G::Path & path , unsigned int timeout ) : m_timer(*this,&ExecutableVerifier::onTimeout,es) , m_command(GSmtp::Verifier::Command::VRFY) , m_path(path) , m_timeout(timeout) , m_task(*this,es,"<<verifier exec error: __strerror__>>",G::Root::nobody())
gexecutableverifier.cpp	41	keep	void GVerifiers::ExecutableVerifier::verify( GSmtp::Verifier::Command command , const std::string & to_address , const GSmtp::Verifier::Info & info )
gexecutableverifier.cpp	62	keep	void GVerifiers::ExecutableVerifier::onTimeout()
gexecutableverifier.cpp	71	keep	void GVerifiers::ExecutableVerifier::onTaskDone( int exit_code , const std::string & result_in )
gexecutableverifier.cpp	130	keep	G::Slot::Signal<GSmtp::Verifier::Command,const GSmtp::VerifierStatus&> & GVerifiers::ExecutableVerifier::doneSignal()
gexecutableverifier.cpp	135	keep	void GVerifiers::ExecutableVerifier::cancel()
ginternalverifier.cpp	25	keep	GVerifiers::InternalVerifier::InternalVerifier()
ginternalverifier.cpp	28	keep	void GVerifiers::InternalVerifier::verify( Command command , const std::string & to , const GSmtp::Verifier::Info & )
ginternalverifier.cpp	36	keep	G::Slot::Signal<GSmtp::Verifier::Command,const GSmtp::VerifierStatus&> & GVerifiers::InternalVerifier::doneSignal()
ginternalverifier.cpp	41	keep	void GVerifiers::InternalVerifier::cancel()
gnetworkverifier.cpp	28	keep	GVerifiers::NetworkVerifier::NetworkVerifier( GNet::ExceptionSink es , const GSmtp::Verifier::Config & config , const std::string & server ) : m_es(es) , m_location(server) , m_connection_timeout(config.timeout) , m_response_timeout(config.timeout) , m_command(Command::VRFY)
gnetworkverifier.cpp	41	keep	GVerifiers::NetworkVerifier::~NetworkVerifier()
gnetworkverifier.cpp	47	keep	void GVerifiers::NetworkVerifier::verify( Command command , const std::string & mail_to_address , const GSmtp::Verifier::Info & info )
gnetworkverifier.cpp	76	keep	void GVerifiers::NetworkVerifier::clientDeleted( const std::string & reason )
gnetworkverifier.cpp	89	keep	void GVerifiers::NetworkVerifier::clientEvent( const std::string & s1 , const std::string & s2 , const std::string & )
gnetworkverifier.cpp	137	keep	G::Slot::Signal<GSmtp::Verifier::Command,const GSmtp::VerifierStatus&> & GVerifiers::NetworkVerifier::doneSignal()
gnetworkverifier.cpp	142	keep	void GVerifiers::NetworkVerifier::cancel()
guserverifier.cpp	30	keep	GVerifiers::UserVerifier::UserVerifier( GNet::ExceptionSink es , bool local , const GSmtp::Verifier::Config & config , const std::string & spec ) : m_command(Command::RCPT) , m_local(local) , m_config(config) , m_timer(*this,&UserVerifier::onTimeout,es) , m_result(GSmtp::VerifierStatus::invalid({})) , m_range(G::Range::range(1000,32767)) , m_lowercase(false)
guserverifier.cpp	49	keep	void GVerifiers::UserVerifier::verify( Command command , const std::string & rcpt_to_parameter , const GSmtp::Verifier::Info & )
guserverifier.cpp	81	keep	bool GVerifiers::UserVerifier::lookup( const std::string & user , const std::string & domain , std::string * reason_p , std::string * mailbox_p ) const
guserverifier.cpp	112	keep	GVerifiers::UserVerifier::Signal & GVerifiers::UserVerifier::doneSignal()
guserverifier.cpp	117	keep	void GVerifiers::UserVerifier::cancel()
guserverifier.cpp	122	keep	void GVerifiers::UserVerifier::onTimeout()
guserverifier.cpp	127	keep	std::string GVerifiers::UserVerifier::dequote( const std::string & s )
gverifierfactory.cpp	32	keep	GVerifiers::VerifierFactory::VerifierFactory()
gverifierfactory.cpp	35	keep	GVerifiers::VerifierFactory::Spec GVerifiers::VerifierFactory::parse( const std::string & spec_in , const G::Path & base_dir , const G::Path & app_dir , G::StringArray * warnings_p )
gverifierfactory.cpp	80	keep	std::unique_ptr<GSmtp::Verifier> GVerifiers::VerifierFactory::newVerifier( GNet::ExceptionSink es , const GSmtp::Verifier::Config & config , const Spec & spec )
gverifierfactory.cpp	110	keep	void GVerifiers::VerifierFactory::checkExit( Spec & result )
gverifierfactory.cpp	119	keep	void GVerifiers::VerifierFactory::checkNet( Spec & result )
gverifierfactory.cpp	132	keep	void GVerifiers::VerifierFactory::checkRange( Spec & result )
gverifierfactory.cpp	145	keep	void GVerifiers::VerifierFactory::fixFile( Spec & result , const G::Path & base_dir , const G::Path & app_dir )
gverifierfactory.cpp	153	keep	void GVerifiers::VerifierFactory::checkFile( Spec & result , G::StringArray * warnings_p )
gadminserver.cpp	37	keep	GSmtp::AdminServerPeer::AdminServerPeer( GNet::ExceptionSinkUnbound esu , GNet::ServerPeerInfo && peer_info , AdminServer & server , const std::string & remote_address , const G::StringMap & info_commands , bool with_terminate ) : GNet::ServerPeer(esu.bind(this),std::move(peer_info),GNet::LineBufferConfig::autodetect()), m_es(esu.bind(this)) , m_server(server) , m_prompt("E-MailRelay> ") , m_blocked(false) , m_remote_address(remote_address) , m_notifying(false) , m_info_commands(info_commands) , m_with_terminate(with_terminate) , m_error_limit(30U) , m_error_count(0U)
gadminserver.cpp	58	keep	GSmtp::AdminServerPeer::~AdminServerPeer()
gadminserver.cpp	63	keep	void GSmtp::AdminServerPeer::clientDone( const std::string & s )
gadminserver.cpp	71	keep	void GSmtp::AdminServerPeer::onDelete( const std::string & reason )
gadminserver.cpp	77	keep	void GSmtp::AdminServerPeer::onSecure( const std::string & , const std::string & , const std::string & )
gadminserver.cpp	81	keep	bool GSmtp::AdminServerPeer::onReceive( const char * line_data , std::size_t line_size , std::size_t , std::size_t , char )
gadminserver.cpp	173	keep	std::string GSmtp::AdminServerPeer::eol() const
gadminserver.cpp	179	keep	bool GSmtp::AdminServerPeer::is( G::string_view token , G::string_view key )
gadminserver.cpp	184	keep	std::pair<bool,std::string> GSmtp::AdminServerPeer::find( G::string_view line , const G::StringMap & map )
gadminserver.cpp	194	keep	void GSmtp::AdminServerPeer::help()
gadminserver.cpp	212	keep	void GSmtp::AdminServerPeer::flush()
gadminserver.cpp	236	keep	void GSmtp::AdminServerPeer::forward()
gadminserver.cpp	249	keep	void GSmtp::AdminServerPeer::sendLine( std::string && line )
gadminserver.cpp	258	keep	void GSmtp::AdminServerPeer::notify( const std::string & s0 , const std::string & s1 , const std::string & s2 , const std::string &s3 )
gadminserver.cpp	270	keep	void GSmtp::AdminServerPeer::sendImp( const std::string & s )
gadminserver.cpp	283	keep	void GSmtp::AdminServerPeer::onSendComplete()
gadminserver.cpp	288	keep	void GSmtp::AdminServerPeer::status()
gadminserver.cpp	305	keep	void GSmtp::AdminServerPeer::sendMessageIds( const std::vector<GStore::MessageId> & ids )
gadminserver.cpp	323	keep	bool GSmtp::AdminServerPeer::notifying() const
gadminserver.cpp	330	keep	GSmtp::AdminServer::AdminServer( GNet::ExceptionSink es , GStore::MessageStore & store , FilterFactoryBase & ff , const GAuth::SaslClientSecrets & client_secrets , const G::StringArray & interfaces , const Config & config ) : GNet::MultiServer(es,interfaces,config.port,"admin",config.net_server_peer_config,config.net_server_config) , m_store(store) , m_ff(ff) , m_client_secrets(client_secrets) , m_config(config) , m_command_timer(*this,&AdminServer::onCommandTimeout,es) , m_command(Command::forward) , m_command_arg(0U)
gadminserver.cpp	344	keep	GSmtp::AdminServer::~AdminServer()
gadminserver.cpp	349	keep	std::unique_ptr<GNet::ServerPeer> GSmtp::AdminServer::newPeer( GNet::ExceptionSinkUnbound esu , GNet::ServerPeerInfo && peer_info , GNet::MultiServer::ServerInfo )
gadminserver.cpp	374	keep	void GSmtp::AdminServer::emitCommand( Command command , unsigned int arg )
gadminserver.cpp	381	keep	void GSmtp::AdminServer::onCommandTimeout()
gadminserver.cpp	393	keep	G::Slot::Signal<GSmtp::AdminServer::Command,unsigned int> & GSmtp::AdminServer::commandSignal() noexcept
gadminserver.cpp	398	keep	void GSmtp::AdminServer::report( const std::string & group ) const
gadminserver.cpp	403	keep	void GSmtp::AdminServer::notify( const std::string & s0 , const std::string & s1 , const std::string & s2 , const std::string & s3 )
gadminserver.cpp	421	keep	GStore::MessageStore & GSmtp::AdminServer::store()
gadminserver.cpp	426	keep	GSmtp::FilterFactoryBase & GSmtp::AdminServer::ff()
gadminserver.cpp	431	keep	const GAuth::SaslClientSecrets & GSmtp::AdminServer::clientSecrets() const
gadminserver.cpp	436	keep	GSmtp::Client::Config GSmtp::AdminServer::clientConfig() const
gadminserver.cpp	441	keep	bool GSmtp::AdminServer::notifying() const
gfilter.cpp	26	keep	std::string GSmtp::Filter::str( Filter::Type type ) const
gfilter.cpp	49	keep	G::string_view GSmtp::Filter::strtype( Filter::Type type ) noexcept
gfilter.cpp	55	keep	GSmtp::Filter::Exit::Exit( int exit_code , Filter::Type type ) : result(Result::fail) , special(false)
gfilter.cpp	115	keep	bool GSmtp::Filter::Exit::ok() const
gfilter.cpp	120	keep	bool GSmtp::Filter::Exit::abandon() const
gfilter.cpp	125	keep	bool GSmtp::Filter::Exit::fail() const
gfilterfactorybase.cpp	24	keep	GSmtp::FilterFactoryBase::Spec::Spec()
gfilterfactorybase.cpp	27	keep	GSmtp::FilterFactoryBase::Spec::Spec( const std::string & first_ , const std::string & second_ ) : first(first_) , second(second_)
gfilterfactorybase.cpp	33	keep	GSmtp::FilterFactoryBase::Spec & GSmtp::FilterFactoryBase::Spec::operator+=( const Spec & rhs )
gprotocolmessage.cpp	25	remove	void GSmtp::ProtocolMessage::addContentLine( const std::string & line )
gprotocolmessage.cpp	31	keep	GSmtp::ProtocolMessage::ToInfo::ToInfo( const VerifierStatus & status_in ) : status(status_in) , utf8address(status_in.utf8address())
gprotocolmessageforward.cpp	28	keep	GSmtp::ProtocolMessageForward::ProtocolMessageForward( GNet::ExceptionSink es , GStore::MessageStore & store , FilterFactoryBase & ff , std::unique_ptr<ProtocolMessage> pm , const GSmtp::Client::Config & client_config , const GAuth::SaslClientSecrets & client_secrets , const std::string & forward_to , int forward_to_family ) : m_es(es) , m_store(store) , m_ff(ff) , m_client_location(forward_to,forward_to_family) , m_client_config(client_config) , m_client_secrets(client_secrets) , m_pm(pm.release()) , m_id(GStore::MessageId::none()) , m_done_signal(true)
gprotocolmessageforward.cpp	48	keep	GSmtp::ProtocolMessageForward::~ProtocolMessageForward()
gprotocolmessageforward.cpp	56	remove	GSmtp::ProtocolMessage::DoneSignal & GSmtp::ProtocolMessageForward::storageDoneSignal()
gprotocolmessageforward.cpp	61	keep	GSmtp::ProtocolMessage::DoneSignal & GSmtp::ProtocolMessageForward::doneSignal()
gprotocolmessageforward.cpp	66	keep	void GSmtp::ProtocolMessageForward::reset()
gprotocolmessageforward.cpp	72	keep	void GSmtp::ProtocolMessageForward::clear()
gprotocolmessageforward.cpp	77	keep	GStore::MessageId GSmtp::ProtocolMessageForward::setFrom( const std::string & from , const FromInfo & from_info )
gprotocolmessageforward.cpp	82	keep	GSmtp::ProtocolMessage::FromInfo GSmtp::ProtocolMessageForward::fromInfo() const
gprotocolmessageforward.cpp	87	keep	std::string GSmtp::ProtocolMessageForward::bodyType() const
gprotocolmessageforward.cpp	92	keep	bool GSmtp::ProtocolMessageForward::addTo( const ToInfo & to_info )
gprotocolmessageforward.cpp	97	keep	void GSmtp::ProtocolMessageForward::addReceived( const std::string & line )
gprotocolmessageforward.cpp	102	keep	GStore::NewMessage::Status GSmtp::ProtocolMessageForward::addContent( const char * line_data , std::size_t line_size )
gprotocolmessageforward.cpp	107	keep	std::size_t GSmtp::ProtocolMessageForward::contentSize() const
gprotocolmessageforward.cpp	112	keep	std::string GSmtp::ProtocolMessageForward::from() const
gprotocolmessageforward.cpp	117	keep	void GSmtp::ProtocolMessageForward::process( const std::string & auth_id , const std::string & peer_socket_address , const std::string & peer_certificate )
gprotocolmessageforward.cpp	124	keep	void GSmtp::ProtocolMessageForward::processDone( bool success , const GStore::MessageId & id , const std::string & response , const std::string & reason )
gprotocolmessageforward.cpp	151	keep	std::string GSmtp::ProtocolMessageForward::forward( const GStore::MessageId & id , bool & nothing_to_do )
gprotocolmessageforward.cpp	190	keep	void GSmtp::ProtocolMessageForward::messageDone( const std::string & reason )
gprotocolmessageforward.cpp	197	keep	void GSmtp::ProtocolMessageForward::clientDone( const std::string & reason )
gprotocolmessagestore.cpp	28	keep	GSmtp::ProtocolMessageStore::ProtocolMessageStore( GStore::MessageStore & store , std::unique_ptr<Filter> filter ) : m_store(store) , m_filter(std::move(filter))
gprotocolmessagestore.cpp	36	keep	GSmtp::ProtocolMessageStore::~ProtocolMessageStore()
gprotocolmessagestore.cpp	41	keep	void GSmtp::ProtocolMessageStore::reset()
gprotocolmessagestore.cpp	47	keep	void GSmtp::ProtocolMessageStore::clear()
gprotocolmessagestore.cpp	56	keep	GStore::MessageId GSmtp::ProtocolMessageStore::setFrom( const std::string & from , const FromInfo & from_info )
gprotocolmessagestore.cpp	79	keep	bool GSmtp::ProtocolMessageStore::addTo( const ToInfo & to_info )
gprotocolmessagestore.cpp	101	keep	void GSmtp::ProtocolMessageStore::addReceived( const std::string & received_line )
gprotocolmessagestore.cpp	108	keep	GStore::NewMessage::Status GSmtp::ProtocolMessageStore::addContent( const char * data , std::size_t data_size )
gprotocolmessagestore.cpp	114	keep	std::size_t GSmtp::ProtocolMessageStore::contentSize() const
gprotocolmessagestore.cpp	119	keep	std::string GSmtp::ProtocolMessageStore::from() const
gprotocolmessagestore.cpp	124	keep	GSmtp::ProtocolMessage::FromInfo GSmtp::ProtocolMessageStore::fromInfo() const
gprotocolmessagestore.cpp	129	keep	std::string GSmtp::ProtocolMessageStore::bodyType() const
gprotocolmessagestore.cpp	134	keep	void GSmtp::ProtocolMessageStore::process( const std::string & session_auth_id , const std::string & peer_socket_address , const std::string & peer_certificate )
gprotocolmessagestore.cpp	160	keep	void GSmtp::ProtocolMessageStore::filterDone( int filter_result )
gprotocolmessagestore.cpp	213	keep	GSmtp::ProtocolMessage::DoneSignal & GSmtp::ProtocolMessageStore::doneSignal()
grequestclient.cpp	25	keep	GSmtp::RequestClient::RequestClient( GNet::ExceptionSink es , const std::string & key , const std::string & ok , const GNet::Location & location , unsigned int connect_timeout , unsigned int response_timeout , unsigned int idle_timeout ) : GNet::Client(es,location,netConfig(connect_timeout,response_timeout,idle_timeout)) , m_eol(1U,'\n') , m_key(key) , m_ok(ok) , m_timer(*this,&RequestClient::onTimeout,es)
grequestclient.cpp	38	keep	GNet::Client::Config GSmtp::RequestClient::netConfig( unsigned int connection_timeout , unsigned int response_timeout , unsigned int idle_timeout )
grequestclient.cpp	49	keep	void GSmtp::RequestClient::onConnect()
grequestclient.cpp	56	keep	void GSmtp::RequestClient::request( const std::string & request_payload )
grequestclient.cpp	71	keep	void GSmtp::RequestClient::onTimeout()
grequestclient.cpp	77	keep	bool GSmtp::RequestClient::busy() const
grequestclient.cpp	82	keep	void GSmtp::RequestClient::onDelete( const std::string & reason )
grequestclient.cpp	88	keep	void GSmtp::RequestClient::onSecure( const std::string & , const std::string & , const std::string & )
grequestclient.cpp	92	keep	bool GSmtp::RequestClient::onReceive( const char * line_data , std::size_t line_size , std::size_t , std::size_t , char )
grequestclient.cpp	109	keep	void GSmtp::RequestClient::onSendComplete()
grequestclient.cpp	113	keep	std::string GSmtp::RequestClient::requestLine( const std::string & request_payload ) const
grequestclient.cpp	118	keep	std::string GSmtp::RequestClient::result( std::string line ) const
gsmtpclient.cpp	35	keep	GSmtp::Client::Client( GNet::ExceptionSink es , GStore::MessageStore & store , FilterFactoryBase & ff , const GNet::Location & remote , const GAuth::SaslClientSecrets & secrets , const Config & config ) : Client(es,ff,remote,secrets,config)
gsmtpclient.cpp	45	keep	GSmtp::Client::Client( GNet::ExceptionSink es , FilterFactoryBase & ff , const GNet::Location & remote , const GAuth::SaslClientSecrets & secrets , const Config & config ) : GNet::Client(es,remote,netConfig(config)) , m_es(es) , m_routing_es(this,nullptr) , m_ff(ff) , m_config(config) , m_secrets(secrets) , m_store(nullptr) , m_routing_timer(*this,&Client::onRoutingTimeout,m_es) , m_filter(ff.newFilter(es,Filter::Type::client,config.filter_config,config.filter_spec,{})) , m_protocol(es,*this,secrets,config.sasl_client_config,config.client_protocol_config,config.secure_tunnel) , m_message_count(0U)
gsmtpclient.cpp	72	keep	GSmtp::Client::~Client()
gsmtpclient.cpp	81	keep	GNet::Client::Config GSmtp::Client::netConfig( const Config & smtp_config )
gsmtpclient.cpp	98	keep	G::Slot::Signal<const std::string&> & GSmtp::Client::messageDoneSignal()
gsmtpclient.cpp	103	keep	void GSmtp::Client::sendMessage( std::unique_ptr<GStore::StoredMessage> message )
gsmtpclient.cpp	111	keep	void GSmtp::Client::sendMessage( std::shared_ptr<GStore::StoredMessage> message )
gsmtpclient.cpp	119	keep	void GSmtp::Client::onConnect()
gsmtpclient.cpp	127	keep	void GSmtp::Client::onSecure( const std::string & , const std::string & , const std::string & )
gsmtpclient.cpp	135	keep	void GSmtp::Client::startSending()
gsmtpclient.cpp	155	keep	bool GSmtp::Client::sendNext()
gsmtpclient.cpp	179	keep	void GSmtp::Client::start()
gsmtpclient.cpp	198	keep	std::shared_ptr<GStore::StoredMessage> GSmtp::Client::message()
gsmtpclient.cpp	204	keep	bool GSmtp::Client::protocolSend( G::string_view line , std::size_t offset , bool go_secure )
gsmtpclient.cpp	214	keep	void GSmtp::Client::filterStart()
gsmtpclient.cpp	222	keep	void GSmtp::Client::filterDone( int filter_result )
gsmtpclient.cpp	261	keep	void GSmtp::Client::protocolDone( int response_code , const std::string & response_in , const std::string & reason_in , const G::StringArray & rejectees )
gsmtpclient.cpp	321	keep	void GSmtp::Client::quitAndFinish()
gsmtpclient.cpp	327	keep	void GSmtp::Client::messageDestroy()
gsmtpclient.cpp	333	keep	void GSmtp::Client::messageFail( int response_code , const std::string & reason )
gsmtpclient.cpp	339	keep	bool GSmtp::Client::onReceive( const char * line_data , std::size_t line_size , std::size_t , std::size_t , char )
gsmtpclient.cpp	357	keep	void GSmtp::Client::onDelete( const std::string & error )
gsmtpclient.cpp	369	keep	void GSmtp::Client::onSendComplete()
gsmtpclient.cpp	374	keep	void GSmtp::Client::routingFilterDone( int filter_result )
gsmtpclient.cpp	440	keep	void GSmtp::Client::onException( GNet::ExceptionSource * , std::exception & e , bool done )
gsmtpclient.cpp	449	keep	void GSmtp::Client::onRoutingTimeout()
gsmtpclient.cpp	454	keep	void GSmtp::Client::routedMessageDone( const std::string & )
gsmtpclient.cpp	465	keep	GSmtp::Client::Config::Config() : local_address(GNet::Address::defaultAddress())
gsmtpclientprotocol.cpp	64	keep	GSmtp::ClientProtocol::ClientProtocol( GNet::ExceptionSink es , Sender & sender , const GAuth::SaslClientSecrets & secrets , const std::string & sasl_client_config , const Config & config , bool in_secure_tunnel ) : GNet::TimerBase(es) , m_sender(sender) , m_sasl(std::make_unique<GAuth::SaslClient>(secrets,sasl_client_config)) , m_config(config) , m_in_secure_tunnel(in_secure_tunnel) , m_eightbit_warned(false) , m_binarymime_warned(false) , m_utf8_warned(false) , m_done_signal(true)
gsmtpclientprotocol.cpp	82	keep	void GSmtp::ClientProtocol::start( std::weak_ptr<GStore::StoredMessage> message_in )
gsmtpclientprotocol.cpp	95	keep	void GSmtp::ClientProtocol::finish()
gsmtpclientprotocol.cpp	102	keep	void GSmtp::ClientProtocol::secure()
gsmtpclientprotocol.cpp	107	keep	void GSmtp::ClientProtocol::sendComplete()
gsmtpclientprotocol.cpp	123	keep	G::Slot::Signal<int,const std::string&,const std::string&,const G::StringArray&> & GSmtp::ClientProtocol::doneSignal()
gsmtpclientprotocol.cpp	128	keep	G::Slot::Signal<> & GSmtp::ClientProtocol::filterSignal()
gsmtpclientprotocol.cpp	133	keep	bool GSmtp::ClientProtocol::apply( const std::string & rx )
gsmtpclientprotocol.cpp	163	keep	bool GSmtp::ClientProtocol::applyEvent( const ClientReply & reply )
gsmtpclientprotocol.cpp	495	keep	std::shared_ptr<GStore::StoredMessage> GSmtp::ClientProtocol::message()
gsmtpclientprotocol.cpp	504	keep	GAuth::SaslClient::Response GSmtp::ClientProtocol::initialResponse( const GAuth::SaslClient & sasl )
gsmtpclientprotocol.cpp	509	keep	void GSmtp::ClientProtocol::onTimeout()
gsmtpclientprotocol.cpp	533	keep	void GSmtp::ClientProtocol::startFiltering()
gsmtpclientprotocol.cpp	539	keep	void GSmtp::ClientProtocol::filterDone( Filter::Result result , const std::string & response , const std::string & reason )
gsmtpclientprotocol.cpp	558	keep	void GSmtp::ClientProtocol::raiseDoneSignal( int response_code , const std::string & response , const std::string & reason )
gsmtpclientprotocol.cpp	568	keep	bool GSmtp::ClientProtocol::endOfContent()
gsmtpclientprotocol.cpp	573	keep	std::string GSmtp::ClientProtocol::checkSendable()
gsmtpclientprotocol.cpp	626	keep	bool GSmtp::ClientProtocol::sendMailFrom()
gsmtpclientprotocol.cpp	705	keep	void GSmtp::ClientProtocol::sendRcptTo()
gsmtpclientprotocol.cpp	719	keep	std::size_t GSmtp::ClientProtocol::sendContentLines()
gsmtpclientprotocol.cpp	733	keep	bool GSmtp::ClientProtocol::sendNextContentLine( std::string & line )
gsmtpclientprotocol.cpp	756	keep	void GSmtp::ClientProtocol::sendEhlo()
gsmtpclientprotocol.cpp	761	keep	void GSmtp::ClientProtocol::sendHelo()
gsmtpclientprotocol.cpp	766	keep	void GSmtp::ClientProtocol::sendEot()
gsmtpclientprotocol.cpp	771	keep	void GSmtp::ClientProtocol::sendRsp( const GAuth::SaslClient::Response & rsp )
gsmtpclientprotocol.cpp	777	keep	void GSmtp::ClientProtocol::sendCommandLines( const std::string & lines )
gsmtpclientprotocol.cpp	782	keep	void GSmtp::ClientProtocol::send( G::string_view s )
gsmtpclientprotocol.cpp	787	keep	void GSmtp::ClientProtocol::send( G::string_view s0 , G::string_view s1 , G::string_view s2 , G::string_view s3 , bool sensitive )
gsmtpclientprotocol.cpp	793	keep	bool GSmtp::ClientProtocol::sendBdatAndChunk( std::size_t size , const std::string & size_str , bool last )
gsmtpclientprotocol.cpp	849	keep	void GSmtp::ClientProtocol::sendChunkImp( const char * p , std::size_t n )
gsmtpclientprotocol.cpp	869	keep	bool GSmtp::ClientProtocol::sendContentLineImp( const std::string & line , std::size_t offset )
gsmtpclientprotocol.cpp	877	keep	bool GSmtp::ClientProtocol::sendImp( G::string_view line , bool sensitive )
gsmtpclientprotocol.cpp	909	keep	GSmtp::ClientProtocolImp::EhloReply::EhloReply( const ClientReply & reply ) : m_reply(reply)
gsmtpclientprotocol.cpp	915	keep	bool GSmtp::ClientProtocolImp::EhloReply::has( const std::string & option ) const
gsmtpclientprotocol.cpp	920	keep	G::StringArray GSmtp::ClientProtocolImp::EhloReply::values( const std::string & option ) const
gsmtpclientprotocol.cpp	937	keep	std::size_t GSmtp::ClientProtocol::Protocol::replySize() const
gsmtpclientprotocol.cpp	945	keep	GSmtp::ClientProtocol::Config::Config()
gsmtpclientprotocol.cpp	950	keep	GSmtp::ClientProtocolImp::AuthError::AuthError( const GAuth::SaslClient & sasl , const ClientReply & reply ) : SmtpError( "authentication failed " + sasl.info() + ": [" + G::Str::printable(reply.text()) + "]" )
gsmtpclientprotocol.cpp	956	keep	std::string GSmtp::ClientProtocolImp::AuthError::str() const
gsmtpclientreply.cpp	28	keep	GSmtp::ClientReply::ClientReply()
gsmtpclientreply.cpp	33	remove	GSmtp::ClientReply GSmtp::ClientReply::ok()
gsmtpclientreply.cpp	43	keep	GSmtp::ClientReply GSmtp::ClientReply::error( Value v , const std::string & response , const std::string & reason )
gsmtpclientreply.cpp	56	keep	GSmtp::ClientReply GSmtp::ClientReply::start()
gsmtpclientreply.cpp	65	keep	GSmtp::ClientReply GSmtp::ClientReply::ok( Value v , const std::string & text )
gsmtpclientreply.cpp	76	keep	GSmtp::ClientReply::ClientReply( const G::StringArray & lines )
gsmtpclientreply.cpp	119	keep	bool GSmtp::ClientReply::validLine( const std::string & line )
gsmtpclientreply.cpp	130	keep	bool GSmtp::ClientReply::valid() const
gsmtpclientreply.cpp	135	keep	bool GSmtp::ClientReply::complete() const
gsmtpclientreply.cpp	140	remove	bool GSmtp::ClientReply::incomplete() const
gsmtpclientreply.cpp	145	keep	bool GSmtp::ClientReply::positive() const
gsmtpclientreply.cpp	150	keep	bool GSmtp::ClientReply::positiveCompletion() const
gsmtpclientreply.cpp	155	keep	int GSmtp::ClientReply::value() const
gsmtpclientreply.cpp	160	keep	bool GSmtp::ClientReply::is( Value v ) const
gsmtpclientreply.cpp	165	keep	std::string GSmtp::ClientReply::errorText() const
gsmtpclientreply.cpp	170	keep	std::string GSmtp::ClientReply::errorReason() const
gsmtpclientreply.cpp	175	keep	std::string GSmtp::ClientReply::text() const
gsmtpclientreply.cpp	180	keep	bool GSmtp::ClientReply::isDigit( char c )
gsmtpclientreply.cpp	185	keep	GSmtp::ClientReply::Type GSmtp::ClientReply::type() const
gsmtpclientreply.cpp	191	remove	GSmtp::ClientReply::SubType GSmtp::ClientReply::subType() const
gsmtpserver.cpp	36	keep	GSmtp::ServerPeer::ServerPeer( GNet::ExceptionSinkUnbound esu , GNet::ServerPeerInfo && peer_info , Server & server , VerifierFactoryBase & vf , const GAuth::SaslServerSecrets & server_secrets , const Server::Config & server_config , std::unique_ptr<ServerProtocol::Text> ptext ) : GNet::ServerPeer(esu.bind(this),std::move(peer_info),GNet::LineBufferConfig::transparent()) , m_server(server) , m_server_config(server_config) , m_block(std::bind(&ServerPeer::onDnsBlockResult,this,std::placeholders::_1),esu.bind(this),server_config.dnsbl_config) , m_check_timer(*this,&ServerPeer::onCheckTimeout,esu.bind(this)) , m_verifier(vf.newVerifier(esu.bind(this),server_config.verifier_config,server_config.verifier_spec)) , m_pmessage(server.newProtocolMessage(esu.bind(this))) , m_ptext(ptext.release()) , m_protocol(*this,*m_verifier,*m_pmessage,server_secrets, *m_ptext,peerAddress(), server_config.protocol_config) , m_input_buffer(esu.bind(this),m_protocol,server_config.buffer_config) , m_output_blocked(false)
gsmtpserver.cpp	67	keep	GSmtp::ServerPeer::~ServerPeer()
gsmtpserver.cpp	72	keep	void GSmtp::ServerPeer::onDelete( const std::string & reason )
gsmtpserver.cpp	80	keep	void GSmtp::ServerPeer::onData( const char * data , std::size_t size )
gsmtpserver.cpp	96	keep	bool GSmtp::ServerPeer::onReceive( const char * data , std::size_t size , std::size_t , std::size_t , char )
gsmtpserver.cpp	103	keep	void GSmtp::ServerPeer::onFlow( bool on )
gsmtpserver.cpp	111	keep	void GSmtp::ServerPeer::protocolSecure()
gsmtpserver.cpp	116	keep	void GSmtp::ServerPeer::onSecure( const std::string & certificate , const std::string & protocol , const std::string & cipher )
gsmtpserver.cpp	122	keep	void GSmtp::ServerPeer::protocolSend( const std::string & line , bool )
gsmtpserver.cpp	136	keep	void GSmtp::ServerPeer::onSendComplete()
gsmtpserver.cpp	144	keep	void GSmtp::ServerPeer::protocolShutdown( int how )
gsmtpserver.cpp	150	keep	void GSmtp::ServerPeer::protocolExpect( std::size_t n )
gsmtpserver.cpp	155	keep	void GSmtp::ServerPeer::onDnsBlockResult( bool allow )
gsmtpserver.cpp	163	keep	void GSmtp::ServerPeer::onCheckTimeout()
gsmtpserver.cpp	176	keep	GSmtp::Server::Server( GNet::ExceptionSink es , GStore::MessageStore & store , FilterFactoryBase & ff , VerifierFactoryBase & vf , const GAuth::SaslClientSecrets & client_secrets , const GAuth::SaslServerSecrets & server_secrets , const Config & server_config , const std::string & forward_to , int forward_to_family , const GSmtp::Client::Config & client_config ) : GNet::MultiServer(es,server_config.interfaces,server_config.port,"smtp", server_config.net_server_peer_config, server_config.net_server_config) , m_store(store) , m_ff(ff) , m_vf(vf) , m_server_config(server_config) , m_client_config(client_config) , m_server_secrets(server_secrets) , m_forward_to(forward_to) , m_forward_to_family(forward_to_family) , m_client_secrets(client_secrets) , m_dnsbl_suspend_time(G::TimerTime::zero())
gsmtpserver.cpp	197	keep	GSmtp::Server::~Server()
gsmtpserver.cpp	202	remove	GSmtp::Server::Config & GSmtp::Server::config()
gsmtpserver.cpp	207	keep	G::Slot::Signal<const std::string&,const std::string&> & GSmtp::Server::eventSignal()
gsmtpserver.cpp	212	keep	void GSmtp::Server::report( const std::string & group ) const
gsmtpserver.cpp	217	keep	std::unique_ptr<GNet::ServerPeer> GSmtp::Server::newPeer( GNet::ExceptionSinkUnbound esu , GNet::ServerPeerInfo && peer_info , GNet::MultiServer::ServerInfo )
gsmtpserver.cpp	246	keep	GSmtp::Server::Config GSmtp::Server::serverConfig() const
gsmtpserver.cpp	253	keep	void GSmtp::Server::nodnsbl( unsigned int s )
gsmtpserver.cpp	259	keep	std::unique_ptr<GSmtp::ServerProtocol::Text> GSmtp::Server::newProtocolText( bool anonymous_smtp , bool anonymous_content , const GNet::Address & peer_address , const std::string & domain ) const
gsmtpserver.cpp	267	keep	std::unique_ptr<GSmtp::Filter> GSmtp::Server::newFilter( GNet::ExceptionSink es ) const
gsmtpserver.cpp	273	keep	std::unique_ptr<GSmtp::ProtocolMessage> GSmtp::Server::newProtocolMessageStore( std::unique_ptr<Filter> filter )
gsmtpserver.cpp	278	keep	std::unique_ptr<GSmtp::ProtocolMessage> GSmtp::Server::newProtocolMessageForward( GNet::ExceptionSink es , std::unique_ptr<ProtocolMessage> pm )
gsmtpserver.cpp	286	keep	std::unique_ptr<GSmtp::ProtocolMessage> GSmtp::Server::newProtocolMessage( GNet::ExceptionSink es )
gsmtpserverbufferin.cpp	26	keep	GSmtp::ServerBufferIn::ServerBufferIn( GNet::ExceptionSink es , ServerProtocol & protocol , const Config & config ) : m_protocol(protocol) , m_config(config) , m_line_buffer(GNet::LineBufferConfig::smtp()) , m_timer(*this,&ServerBufferIn::onTimeout,es)
gsmtpserverbufferin.cpp	36	keep	void GSmtp::ServerBufferIn::apply( const char * data , std::size_t size )
gsmtpserverbufferin.cpp	43	keep	void GSmtp::ServerBufferIn::onTimeout()
gsmtpserverbufferin.cpp	50	keep	void GSmtp::ServerBufferIn::applySome( const char * data , std::size_t size )
gsmtpserverbufferin.cpp	73	keep	bool GSmtp::ServerBufferIn::overLimit() const
gsmtpserverbufferin.cpp	78	keep	bool GSmtp::ServerBufferIn::overHardLimit() const
gsmtpserverbufferin.cpp	83	keep	void GSmtp::ServerBufferIn::flowOn()
gsmtpserverbufferin.cpp	92	keep	void GSmtp::ServerBufferIn::flowOff()
gsmtpserverbufferin.cpp	101	keep	void GSmtp::ServerBufferIn::onProtocolChange()
gsmtpserverbufferin.cpp	107	keep	void GSmtp::ServerBufferIn::expect( std::size_t n )
gsmtpserverbufferin.cpp	112	keep	std::string GSmtp::ServerBufferIn::head() const
gsmtpserverbufferin.cpp	117	keep	G::Slot::Signal<bool> & GSmtp::ServerBufferIn::flowSignal()
gsmtpserverparser.cpp	30	keep	GSmtp::ServerParser::MailboxStyle GSmtp::ServerParser::mailboxStyle( const std::string & mailbox )
gsmtpserverparser.cpp	47	keep	std::pair<std::size_t,bool> GSmtp::ServerParser::parseBdatSize( G::string_view bdat_line )
gsmtpserverparser.cpp	63	keep	std::pair<bool,bool> GSmtp::ServerParser::parseBdatLast( G::string_view bdat_line )
gsmtpserverparser.cpp	77	keep	GSmtp::ServerParser::AddressCommand GSmtp::ServerParser::parseMailFrom( G::string_view line )
gsmtpserverparser.cpp	102	keep	GSmtp::ServerParser::AddressCommand GSmtp::ServerParser::parseRcptTo( G::string_view line )
gsmtpserverparser.cpp	111	keep	GSmtp::ServerParser::AddressCommand GSmtp::ServerParser::parseAddressPart( G::string_view line )
gsmtpserverparser.cpp	188	keep	std::size_t GSmtp::ServerParser::parseMailNumericValue( G::string_view line , G::string_view key_eq , AddressCommand & out )
gsmtpserverparser.cpp	200	keep	std::string GSmtp::ServerParser::parseMailStringValue( G::string_view line , G::string_view key_eq , AddressCommand & out , Conversion conversion )
gsmtpserverparser.cpp	223	keep	bool GSmtp::ServerParser::parseMailBoolean( G::string_view line , G::string_view key , AddressCommand & out )
gsmtpserverparser.cpp	239	keep	std::string GSmtp::ServerParser::parseVrfy( const std::string & line_in )
gsmtpserverparser.cpp	261	keep	std::string GSmtp::ServerParser::parseHeloPeerName( const std::string & line )
gsmtpserverprotocol.cpp	41	keep	std::unique_ptr<GAuth::SaslServer> GSmtp::ServerProtocol::newSaslServer( const GAuth::SaslServerSecrets & secrets , const std::string & sasl_config , const std::string & challenge_hostname )
gsmtpserverprotocol.cpp	48	keep	GSmtp::ServerProtocol::ServerProtocol( ServerSender & sender , Verifier & verifier , ProtocolMessage & pmessage , const GAuth::SaslServerSecrets & secrets , Text & text , const GNet::Address & peer_address , const Config & config ) : ServerSend(&sender) , m_sender(&sender) , m_verifier(verifier) , m_text(text) , m_message(pmessage) , m_sasl(newSaslServer(secrets,config.sasl_server_config,config.sasl_server_challenge_hostname)) , m_config(config) , m_apply_data(nullptr) , m_apply_more(false) , m_fsm(State::Start,State::End,State::s_Same,State::s_Any) , m_with_starttls(false) , m_peer_address(peer_address) , m_secure(false) , m_client_error_count(0U) , m_session_esmtp(false) , m_bdat_arg(0U) , m_bdat_sum(0U)
gsmtpserverprotocol.cpp	131	keep	GSmtp::ServerProtocol::~ServerProtocol()
gsmtpserverprotocol.cpp	137	keep	G::Slot::Signal<> & GSmtp::ServerProtocol::changeSignal()
gsmtpserverprotocol.cpp	142	keep	bool GSmtp::ServerProtocol::inBusyState() const
gsmtpserverprotocol.cpp	158	remove	bool GSmtp::ServerProtocol::rcptState() const
gsmtpserverprotocol.cpp	165	keep	bool GSmtp::ServerProtocol::sendFlush() const
gsmtpserverprotocol.cpp	189	keep	bool GSmtp::ServerProtocol::inDataState() const
gsmtpserverprotocol.cpp	197	remove	void GSmtp::ServerProtocol::setSender( ServerSender & sender )
gsmtpserverprotocol.cpp	203	keep	void GSmtp::ServerProtocol::init()
gsmtpserverprotocol.cpp	211	keep	void GSmtp::ServerProtocol::applyEvent( Event event , EventData event_data )
gsmtpserverprotocol.cpp	218	keep	void GSmtp::ServerProtocol::secure( const std::string & certificate , const std::string & protocol , const std::string & cipher )
gsmtpserverprotocol.cpp	228	keep	void GSmtp::ServerProtocol::doSecure( EventData , bool & )
gsmtpserverprotocol.cpp	234	keep	void GSmtp::ServerProtocol::doSecureGreeting( EventData , bool & )
gsmtpserverprotocol.cpp	240	keep	void GSmtp::ServerProtocol::doStartTls( EventData , bool & ok )
gsmtpserverprotocol.cpp	254	keep	bool GSmtp::ServerProtocol::apply( const ApplyArgsTuple & args )
gsmtpserverprotocol.cpp	318	keep	void GSmtp::ServerProtocol::doDataContent( EventData , bool & )
gsmtpserverprotocol.cpp	335	keep	void GSmtp::ServerProtocol::doEot( EventData , bool & ok )
gsmtpserverprotocol.cpp	358	keep	void GSmtp::ServerProtocol::processDone( bool success , const GStore::MessageId & id , const std::string & response , const std::string & reason )
gsmtpserverprotocol.cpp	370	keep	void GSmtp::ServerProtocol::doComplete( EventData event_data , bool & )
gsmtpserverprotocol.cpp	376	keep	void GSmtp::ServerProtocol::doQuit( EventData , bool & )
gsmtpserverprotocol.cpp	384	keep	void GSmtp::ServerProtocol::doBadDataCommand( EventData , bool & )
gsmtpserverprotocol.cpp	390	keep	void GSmtp::ServerProtocol::doBdatOutOfSequence( EventData , bool & )
gsmtpserverprotocol.cpp	396	keep	void GSmtp::ServerProtocol::doBdatFirst( EventData event_data , bool & ok )
gsmtpserverprotocol.cpp	401	keep	void GSmtp::ServerProtocol::doBdatFirstLast( EventData event_data , bool & ok )
gsmtpserverprotocol.cpp	406	keep	void GSmtp::ServerProtocol::doBdatFirstLastZero( EventData event_data , bool & ok )
gsmtpserverprotocol.cpp	411	keep	void GSmtp::ServerProtocol::doBdatMore( EventData event_data , bool & ok )
gsmtpserverprotocol.cpp	416	keep	void GSmtp::ServerProtocol::doBdatMoreLast( EventData event_data , bool & ok )
gsmtpserverprotocol.cpp	421	keep	void GSmtp::ServerProtocol::doBdatMoreLastZero( EventData event_data , bool & ok )
gsmtpserverprotocol.cpp	426	keep	void GSmtp::ServerProtocol::doBdatImp( G::string_view bdat_line , bool & ok , bool first , bool last , bool zero )
gsmtpserverprotocol.cpp	476	keep	void GSmtp::ServerProtocol::doBdatContent( EventData , bool & complete )
gsmtpserverprotocol.cpp	503	keep	void GSmtp::ServerProtocol::doBdatContentLast( EventData , bool & complete )
gsmtpserverprotocol.cpp	527	keep	void GSmtp::ServerProtocol::doBdatCheck( EventData , bool & ok )
gsmtpserverprotocol.cpp	547	keep	bool GSmtp::ServerProtocol::messageAddContentFailed()
gsmtpserverprotocol.cpp	555	keep	bool GSmtp::ServerProtocol::messageAddContentTooBig()
gsmtpserverprotocol.cpp	563	keep	void GSmtp::ServerProtocol::doBdatComplete( EventData event_data , bool & )
gsmtpserverprotocol.cpp	569	keep	void GSmtp::ServerProtocol::doIgnore( EventData , bool & )
gsmtpserverprotocol.cpp	573	keep	void GSmtp::ServerProtocol::doNoop( EventData , bool & )
gsmtpserverprotocol.cpp	578	remove	void GSmtp::ServerProtocol::doNothing( EventData , bool & )
gsmtpserverprotocol.cpp	582	keep	void GSmtp::ServerProtocol::doExpn( EventData , bool & )
gsmtpserverprotocol.cpp	587	keep	void GSmtp::ServerProtocol::doHelp( EventData , bool & )
gsmtpserverprotocol.cpp	592	keep	void GSmtp::ServerProtocol::doVrfy( EventData event_data , bool & predicate )
gsmtpserverprotocol.cpp	621	keep	void GSmtp::ServerProtocol::verify( Verifier::Command command , const std::string & to , const std::string & from )
gsmtpserverprotocol.cpp	631	keep	void GSmtp::ServerProtocol::verifyDone( Verifier::Command command , const VerifierStatus & status )
gsmtpserverprotocol.cpp	648	keep	void GSmtp::ServerProtocol::doVrfyReply( EventData event_data , bool & )
gsmtpserverprotocol.cpp	660	keep	void GSmtp::ServerProtocol::doEhlo( EventData event_data , bool & predicate )
gsmtpserverprotocol.cpp	689	keep	void GSmtp::ServerProtocol::doHelo( EventData event_data , bool & predicate )
gsmtpserverprotocol.cpp	705	keep	void GSmtp::ServerProtocol::doAuth( EventData event_data , bool & predicate )
gsmtpserverprotocol.cpp	772	keep	void GSmtp::ServerProtocol::doAuthData( EventData event_data , bool & predicate )
gsmtpserverprotocol.cpp	802	keep	void GSmtp::ServerProtocol::doMail( EventData event_data , bool & predicate )
gsmtpserverprotocol.cpp	850	keep	void GSmtp::ServerProtocol::doRcpt( EventData event_data , bool & predicate )
gsmtpserverprotocol.cpp	870	keep	void GSmtp::ServerProtocol::doRcptToReply( EventData event_data , bool & predicate )
gsmtpserverprotocol.cpp	891	keep	void GSmtp::ServerProtocol::doUnknown( EventData event_data , bool & )
gsmtpserverprotocol.cpp	897	keep	void GSmtp::ServerProtocol::clear()
gsmtpserverprotocol.cpp	908	keep	void GSmtp::ServerProtocol::doRset( EventData , bool & )
gsmtpserverprotocol.cpp	916	keep	void GSmtp::ServerProtocol::doNoRecipients( EventData , bool & )
gsmtpserverprotocol.cpp	921	keep	void GSmtp::ServerProtocol::doData( EventData , bool & )
gsmtpserverprotocol.cpp	932	keep	bool GSmtp::ServerProtocol::isEndOfText( const ApplyArgsTuple & args ) const
gsmtpserverprotocol.cpp	940	keep	bool GSmtp::ServerProtocol::isEscaped( const ApplyArgsTuple & args ) const
gsmtpserverprotocol.cpp	948	keep	GSmtp::ServerProtocol::Event GSmtp::ServerProtocol::commandEvent( G::string_view line ) const
gsmtpserverprotocol.cpp	969	keep	GSmtp::ServerProtocol::Event GSmtp::ServerProtocol::dataEvent( G::string_view ) const
gsmtpserverprotocol.cpp	978	keep	GSmtp::ServerProtocol::Event GSmtp::ServerProtocol::bdatEvent( G::string_view line ) const
gsmtpserverprotocol.cpp	990	keep	void GSmtp::ServerProtocol::badClientEvent()
gsmtpserverprotocol.cpp	1001	keep	std::string GSmtp::ServerProtocol::str( EventData sv )
gsmtpserverprotocol.cpp	1006	keep	G::StringArray GSmtp::ServerProtocol::mechanisms() const
gsmtpserverprotocol.cpp	1011	keep	G::StringArray GSmtp::ServerProtocol::mechanisms( bool secure ) const
gsmtpserverprotocol.cpp	1016	keep	std::string GSmtp::ServerProtocol::sendUseStartTls() const
gsmtpserverprotocol.cpp	1023	keep	GSmtp::ServerProtocol::Config::Config()
gsmtpserversend.cpp	28	keep	GSmtp::ServerSend::ServerSend( ServerSender * sender ) : m_sender(sender)
gsmtpserversend.cpp	33	keep	void GSmtp::ServerSend::setSender( ServerSender * sender )
gsmtpserversend.cpp	38	keep	void GSmtp::ServerSend::sendChallenge( const std::string & challenge )
gsmtpserversend.cpp	43	keep	void GSmtp::ServerSend::sendGreeting( const std::string & text )
gsmtpserversend.cpp	48	keep	void GSmtp::ServerSend::sendReadyForTls()
gsmtpserversend.cpp	53	keep	void GSmtp::ServerSend::sendInvalidArgument()
gsmtpserversend.cpp	58	keep	void GSmtp::ServerSend::sendAuthenticationCancelled()
gsmtpserversend.cpp	63	keep	void GSmtp::ServerSend::sendInsecureAuth()
gsmtpserversend.cpp	68	keep	void GSmtp::ServerSend::sendBadMechanism( const std::string & preferred )
gsmtpserversend.cpp	76	keep	void GSmtp::ServerSend::sendAuthDone( bool ok )
gsmtpserversend.cpp	84	keep	void GSmtp::ServerSend::sendBadDataOutOfSequence()
gsmtpserversend.cpp	89	keep	void GSmtp::ServerSend::sendOutOfSequence()
gsmtpserversend.cpp	94	keep	void GSmtp::ServerSend::sendMissingParameter()
gsmtpserversend.cpp	99	keep	void GSmtp::ServerSend::sendQuitOk()
gsmtpserversend.cpp	104	keep	void GSmtp::ServerSend::sendVerified( const std::string & user )
gsmtpserversend.cpp	109	keep	void GSmtp::ServerSend::sendNotVerified( const std::string & response , bool temporary )
gsmtpserversend.cpp	114	keep	void GSmtp::ServerSend::sendWillAccept( const std::string & user )
gsmtpserversend.cpp	119	keep	void GSmtp::ServerSend::sendUnrecognised( const std::string & )
gsmtpserversend.cpp	124	keep	void GSmtp::ServerSend::sendNotImplemented()
gsmtpserversend.cpp	129	keep	void GSmtp::ServerSend::sendAuthRequired()
gsmtpserversend.cpp	134	keep	void GSmtp::ServerSend::sendEncryptionRequired()
gsmtpserversend.cpp	139	keep	void GSmtp::ServerSend::sendNoRecipients()
gsmtpserversend.cpp	144	keep	void GSmtp::ServerSend::sendTooBig()
gsmtpserversend.cpp	149	keep	void GSmtp::ServerSend::sendDataReply()
gsmtpserversend.cpp	154	keep	void GSmtp::ServerSend::sendRsetReply()
gsmtpserversend.cpp	159	keep	void GSmtp::ServerSend::sendMailReply( const std::string & from )
gsmtpserversend.cpp	164	keep	void GSmtp::ServerSend::sendCompletionReply( bool ok , const std::string & response )
gsmtpserversend.cpp	173	keep	void GSmtp::ServerSend::sendFailed()
gsmtpserversend.cpp	178	keep	void GSmtp::ServerSend::sendRcptReply( const std::string & to , bool is_local )
gsmtpserversend.cpp	184	keep	void GSmtp::ServerSend::sendBadFrom( const std::string & response_extra )
gsmtpserversend.cpp	195	keep	void GSmtp::ServerSend::sendBadTo( const std::string & to , const std::string & text , bool temporary )
gsmtpserversend.cpp	203	keep	void GSmtp::ServerSend::sendEhloReply( const Advertise & advertise )
gsmtpserversend.cpp	239	keep	void GSmtp::ServerSend::sendHeloReply()
gsmtpserversend.cpp	244	keep	void GSmtp::ServerSend::sendOk( const std::string & text )
gsmtpserversend.cpp	249	remove	void GSmtp::ServerSend::sendOk()
gsmtpserversend.cpp	254	keep	void GSmtp::ServerSend::send( const char * line )
gsmtpserversend.cpp	259	keep	void GSmtp::ServerSend::send( std::string line_in , bool go_secure )
gsmtpserversend.cpp	268	keep	void GSmtp::ServerSend::send( const std::ostringstream & ss )
gsmtpservertext.cpp	32	keep	GSmtp::ServerText::ServerText( const std::string & code_ident , bool anonymous , bool with_received_line , const std::string & domain , const GNet::Address & peer_address ) : m_code_ident(code_ident) , m_anonymous(anonymous) , m_with_received_line(with_received_line) , m_domain(domain) , m_peer_address(peer_address)
gsmtpservertext.cpp	45	keep	std::string GSmtp::ServerText::greeting() const
gsmtpservertext.cpp	54	keep	std::string GSmtp::ServerText::hello( const std::string & ) const
gsmtpservertext.cpp	63	keep	std::string GSmtp::ServerText::received( const std::string & smtp_peer_name , bool authenticated , bool secure , const std::string & protocol , const std::string & cipher ) const
gsmtpservertext.cpp	70	keep	std::string GSmtp::ServerText::receivedLine( const std::string & smtp_peer_name , const std::string & peer_address , const std::string & receivedline_domain , bool authenticated , bool secure , const std::string & , const std::string & cipher_in )
gspamclient.cpp	31	keep	GSmtp::SpamClient::SpamClient( GNet::ExceptionSink es , const GNet::Location & location , bool read_only , unsigned int connect_timeout , unsigned int response_timeout ) : GNet::Client(es,location,netConfig(connect_timeout,response_timeout)) , m_busy(false) , m_timer(*this,&SpamClient::onTimeout,es) , m_request(*this) , m_response(read_only)
gspamclient.cpp	45	keep	GNet::Client::Config GSmtp::SpamClient::netConfig( unsigned int connect_timeout , unsigned int response_timeout )
gspamclient.cpp	54	remove	void GSmtp::SpamClient::username( const std::string & username )
gspamclient.cpp	59	keep	bool GSmtp::SpamClient::busy() const
gspamclient.cpp	64	keep	void GSmtp::SpamClient::request( const std::string & path )
gspamclient.cpp	74	keep	void GSmtp::SpamClient::onTimeout()
gspamclient.cpp	81	keep	void GSmtp::SpamClient::onDelete( const std::string & )
gspamclient.cpp	85	keep	void GSmtp::SpamClient::onSecure( const std::string & , const std::string & , const std::string & )
gspamclient.cpp	89	keep	void GSmtp::SpamClient::onConnect()
gspamclient.cpp	95	keep	void GSmtp::SpamClient::start()
gspamclient.cpp	100	keep	void GSmtp::SpamClient::onSendComplete()
gspamclient.cpp	108	keep	bool GSmtp::SpamClient::onReceive( const char * line_data , std::size_t line_size , std::size_t , std::size_t , char )
gspamclient.cpp	118	keep	GSmtp::SpamClient::Request::Request( Client & client ) : m_client(&client) , m_buffer(10240U)
gspamclient.cpp	124	keep	void GSmtp::SpamClient::Request::send( const std::string & path , const std::string & username )
gspamclient.cpp	150	keep	bool GSmtp::SpamClient::Request::sendMore()
gspamclient.cpp	168	keep	GSmtp::SpamClient::Response::Response( bool read_only ) : m_read_only(read_only) , m_state(0) , m_content_length(0U) , m_size(0U)
gspamclient.cpp	176	keep	GSmtp::SpamClient::Response::~Response()
gspamclient.cpp	185	keep	void GSmtp::SpamClient::Response::add( const std::string & path , const std::string & line )
gspamclient.cpp	246	keep	bool GSmtp::SpamClient::Response::complete() const
gspamclient.cpp	251	keep	bool GSmtp::SpamClient::Response::ok( const std::string & line ) const
gspamclient.cpp	262	keep	std::string GSmtp::SpamClient::Response::result() const
gverifierfactorybase.cpp	24	keep	GSmtp::VerifierFactoryBase::Spec::Spec()
gverifierfactorybase.cpp	27	keep	GSmtp::VerifierFactoryBase::Spec::Spec( const std::string & first_in , const std::string & second_in ) : first(first_in) , second(second_in)
gverifierstatus.cpp	29	keep	GSmtp::VerifierStatus::VerifierStatus()
gverifierstatus.cpp	32	keep	GSmtp::VerifierStatus GSmtp::VerifierStatus::invalid( const std::string & recipient , bool temporary , const std::string & response , const std::string & reason )
gverifierstatus.cpp	44	keep	GSmtp::VerifierStatus GSmtp::VerifierStatus::remote( const std::string & recipient , const std::string & address )
gverifierstatus.cpp	55	keep	GSmtp::VerifierStatus GSmtp::VerifierStatus::local( const std::string & recipient , const std::string & full_name , const std::string & mbox )
gverifierstatus.cpp	67	keep	GSmtp::VerifierStatus GSmtp::VerifierStatus::parse( const std::string & line )
gverifierstatus.cpp	96	keep	std::string GSmtp::VerifierStatus::str() const
gverifierstatus.cpp	114	keep	bool GSmtp::VerifierStatus::utf8address() const
