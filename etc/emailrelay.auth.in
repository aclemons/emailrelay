#
# emailrelay.auth
#
# E-MailRelay secrets file.
#
# Point to this file on the emailrelay commandline, like this:
#
#     $ emailrelay --as-client=example.com:25 --client-auth=/etc/emailrelay.auth
#     $ emailrelay --as-server --server-auth=/etc/emailrelay.auth
#     $ emailrelay --pop --no-smtp --pop-auth=/etc/emailrelay.auth
#
# Each line in this file has four or five space-separated fields in one of
# the following forms:
#
#     client {plain|plain:b|md5} <id> <password> [<account-selector>]
#     client oauth <id> <token> [<account-selector>]
#     server {plain|plain:b|md5} <id> <password>
#     server none <address-range> <verifier-keyword>
#
# For example:
#
#      client plain   alice my+20secret
#      server plain   bob e+3Dmc2
#      server md5     carol Oqng9/H7wAyKgbuqw5VzG1bNO6feqtblyiNEi6QuN5dH
#      server plain:b dave UGFzc3cwcmQ=
#      server none    192.168.0.0/24 localnet
#
# Normally there should be one "client" line used to connect to a remote SMTP
# server and multiple "server" lines representing accounts used by clients to
# connect to this server (SMTP or POP). Multiple "client" lines can be
# used if each one is given a distinct account selector.
#
# The "plain" passwords can be used for any authentication mechanism
# whereas the "md5" hashed passwords can be only used be used for
# "CRAM-MD5" authentication. Hashed passwords are generated by running
# the "emailrelay-passwd" program.
#
# The "id" and "password" fields should be "xtext" encoded if the second
# field is "plain" or base64 encoded if "plain:b". In xtext encoding
# any unusual characters, including space, "=" and "+", are represented
# as "+XX" hexadecimal ascii ("+20", "+3D", "+2B" etc) (see RFC-1891).
#
# The "none" rows allow trusted IP addresses to bypass authentication.
#
